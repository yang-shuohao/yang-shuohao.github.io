<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yangshuohao</title>
  
  
  <link href="http://yangshuohao.com/atom.xml" rel="self"/>
  
  <link href="http://yangshuohao.com/"/>
  <updated>2021-08-07T14:21:42.325Z</updated>
  <id>http://yangshuohao.com/</id>
  
  <author>
    <name>yangshuohao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Markdown语法</title>
    <link href="http://yangshuohao.com/2021/08/07/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://yangshuohao.com/2021/08/07/Markdown%E8%AF%AD%E6%B3%95/</id>
    <published>2021-08-07T14:12:12.000Z</published>
    <updated>2021-08-07T14:21:42.325Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><p>这些是 John Gruber 的原始设计文档中列出的元素。所有 Markdown 应用程序都支持这些元素。<br><img src="https://img-blog.csdnimg.cn/2021080722171071.png"></p><h1 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h1><p>这些元素通过添加额外的功能扩展了基本语法。但是，并非所有 Markdown 应用程序都支持这些元素。<br><img src="https://img-blog.csdnimg.cn/20210807221747578.png"></p><h1 id="文档参考"><a href="#文档参考" class="headerlink" title="文档参考"></a>文档参考</h1><p><a href="https://www.markdown.xyz/">Markdown 指南</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基本语法&quot;&gt;&lt;a href=&quot;#基本语法&quot; class=&quot;headerlink&quot; title=&quot;基本语法&quot;&gt;&lt;/a&gt;基本语法&lt;/h1&gt;&lt;p&gt;这些是 John Gruber 的原始设计文档中列出的元素。所有 Markdown 应用程序都支持这些元素。&lt;br&gt;&lt;img</summary>
      
    
    
    
    <category term="Markdown" scheme="http://yangshuohao.com/categories/Markdown/"/>
    
    
    <category term="Markdown" scheme="http://yangshuohao.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>KMSpico激活Windows和Office</title>
    <link href="http://yangshuohao.com/2021/08/07/KMSpico%E6%BF%80%E6%B4%BBWindows%E5%92%8COffice/"/>
    <id>http://yangshuohao.com/2021/08/07/KMSpico%E6%BF%80%E6%B4%BBWindows%E5%92%8COffice/</id>
    <published>2021-08-07T12:43:45.000Z</published>
    <updated>2021-08-07T13:00:11.453Z</updated>
    
    <content type="html"><![CDATA[<h1 id="KMSpico下载安装"><a href="#KMSpico下载安装" class="headerlink" title="KMSpico下载安装"></a>KMSpico下载安装</h1><p><a href="https://pan.baidu.com/s/1jghgYDQNRielpvgU1yh5gA">KMSpico</a> 提取码：6666</p><h1 id="KMSpico使用"><a href="#KMSpico使用" class="headerlink" title="KMSpico使用"></a>KMSpico使用</h1><ol><li>安装完以后通过管理员方式运行KMSpico。</li><li>如果您刚刚从新安装了操作系统，请按红色按钮开始激活过程&gt;<br><img src="https://www.getkmspico.com/images/2.jpg"></li><li>如果您需要检查您的激活状态，请单击Tokens选项卡，然后单击带有大“I”的蓝色方块（上方右侧屏幕）。这将显示您的系统版本以及激活状态。</li><li>您也可以单击开始并右键单击计算机并选择属性，屏幕也会显示激活状态。<br><img src="https://www.getkmspico.com/images/6.png"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;KMSpico下载安装&quot;&gt;&lt;a href=&quot;#KMSpico下载安装&quot; class=&quot;headerlink&quot; title=&quot;KMSpico下载安装&quot;&gt;&lt;/a&gt;KMSpico下载安装&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1</summary>
      
    
    
    
    <category term="软件" scheme="http://yangshuohao.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="KMSpico" scheme="http://yangshuohao.com/tags/KMSpico/"/>
    
    <category term="Windows" scheme="http://yangshuohao.com/tags/Windows/"/>
    
    <category term="office" scheme="http://yangshuohao.com/tags/office/"/>
    
  </entry>
  
  <entry>
    <title>如何通过V2Ray搭配使用Tor浏览器</title>
    <link href="http://yangshuohao.com/2021/08/04/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87V2Ray%E6%90%AD%E9%85%8D%E4%BD%BF%E7%94%A8Tor%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    <id>http://yangshuohao.com/2021/08/04/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87V2Ray%E6%90%AD%E9%85%8D%E4%BD%BF%E7%94%A8Tor%E6%B5%8F%E8%A7%88%E5%99%A8/</id>
    <published>2021-08-04T14:18:31.000Z</published>
    <updated>2021-08-04T14:29:04.272Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tor浏览器的下载与安装"><a href="#Tor浏览器的下载与安装" class="headerlink" title="Tor浏览器的下载与安装"></a>Tor浏览器的下载与安装</h1><p><a href="https://www.torproject.org/download/">官网地址</a></p><h1 id="打开tor浏览器，在右上角打开Options"><a href="#打开tor浏览器，在右上角打开Options" class="headerlink" title="打开tor浏览器，在右上角打开Options"></a>打开tor浏览器，在右上角打开Options</h1><p><img src="https://img-blog.csdnimg.cn/20210804220646257.png"></p><h1 id="申请一个torproject网桥"><a href="#申请一个torproject网桥" class="headerlink" title="申请一个torproject网桥"></a>申请一个torproject网桥</h1><p><img src="https://img-blog.csdnimg.cn/20210804220947991.png"></p><h1 id="打开V2RayN，点击“参数设置”—“Core基础设置”，可以看到本地监听的IP和端口，取消勾选“开启流量监测”。"><a href="#打开V2RayN，点击“参数设置”—“Core基础设置”，可以看到本地监听的IP和端口，取消勾选“开启流量监测”。" class="headerlink" title="打开V2RayN，点击“参数设置”—“Core基础设置”，可以看到本地监听的IP和端口，取消勾选“开启流量监测”。"></a>打开V2RayN，点击“参数设置”—“Core基础设置”，可以看到本地监听的IP和端口，取消勾选“开启流量监测”。</h1><p><img src="https://img-blog.csdnimg.cn/20210804221245534.png"></p><h1 id="在Tor浏览器中填入上面代理IP和端口"><a href="#在Tor浏览器中填入上面代理IP和端口" class="headerlink" title="在Tor浏览器中填入上面代理IP和端口"></a>在Tor浏览器中填入上面代理IP和端口</h1><p><img src="https://img-blog.csdnimg.cn/20210804221056877.png"></p><h1 id="点击Connect连接至Tor网络，输入https-check-torproject-org-查看是否连接成功。"><a href="#点击Connect连接至Tor网络，输入https-check-torproject-org-查看是否连接成功。" class="headerlink" title="点击Connect连接至Tor网络，输入https://check.torproject.org/ 查看是否连接成功。"></a>点击Connect连接至Tor网络，输入<a href="https://check.torproject.org/">https://check.torproject.org/</a> 查看是否连接成功。</h1><p><img src="https://img-blog.csdnimg.cn/2021080422152456.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Tor浏览器的下载与安装&quot;&gt;&lt;a href=&quot;#Tor浏览器的下载与安装&quot; class=&quot;headerlink&quot; title=&quot;Tor浏览器的下载与安装&quot;&gt;&lt;/a&gt;Tor浏览器的下载与安装&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.torprojec</summary>
      
    
    
    
    <category term="黑客技术" scheme="http://yangshuohao.com/categories/%E9%BB%91%E5%AE%A2%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Tor浏览器" scheme="http://yangshuohao.com/tags/Tor%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    <category term="深网" scheme="http://yangshuohao.com/tags/%E6%B7%B1%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>VS插件VA小番茄下载破解安装</title>
    <link href="http://yangshuohao.com/2021/08/01/VS%E6%8F%92%E4%BB%B6VA%E5%B0%8F%E7%95%AA%E8%8C%84%E4%B8%8B%E8%BD%BD%E7%A0%B4%E8%A7%A3%E5%AE%89%E8%A3%85/"/>
    <id>http://yangshuohao.com/2021/08/01/VS%E6%8F%92%E4%BB%B6VA%E5%B0%8F%E7%95%AA%E8%8C%84%E4%B8%8B%E8%BD%BD%E7%A0%B4%E8%A7%A3%E5%AE%89%E8%A3%85/</id>
    <published>2021-08-01T06:35:19.000Z</published>
    <updated>2021-08-04T14:03:48.388Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VA小番茄下载地址"><a href="#VA小番茄下载地址" class="headerlink" title="VA小番茄下载地址"></a>VA小番茄下载地址</h1><blockquote><p><a href="https://pan.baidu.com/s/1IfH9Um9o_yKpj9UFIwO0iQ">下载地址</a><br>提取码：9gy6</p></blockquote><h1 id="下载完以后点击安装"><a href="#下载完以后点击安装" class="headerlink" title="下载完以后点击安装"></a>下载完以后点击安装</h1><p><img src="https://img-blog.csdnimg.cn/20210801144914229.png"><br><img src="https://img-blog.csdnimg.cn/20210801144920161.png"></p><h1 id="替换VA-X-dll文件"><a href="#替换VA-X-dll文件" class="headerlink" title="替换VA_X.dll文件"></a>替换VA_X.dll文件</h1><p>安装完以后把Crack文件夹里面的VA_X.dll替换掉小番茄安装目录里面的VA_X.dll就可以了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;VA小番茄下载地址&quot;&gt;&lt;a href=&quot;#VA小番茄下载地址&quot; class=&quot;headerlink&quot; title=&quot;VA小番茄下载地址&quot;&gt;&lt;/a&gt;VA小番茄下载地址&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://pan.baidu.co</summary>
      
    
    
    
    <category term="软件" scheme="http://yangshuohao.com/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
    <category term="VisualStudio插件" scheme="http://yangshuohao.com/tags/VisualStudio%E6%8F%92%E4%BB%B6/"/>
    
    <category term="VisualAssist" scheme="http://yangshuohao.com/tags/VisualAssist/"/>
    
    <category term="小番茄" scheme="http://yangshuohao.com/tags/%E5%B0%8F%E7%95%AA%E8%8C%84/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客在本地正常显示,部署到github上后排版混乱</title>
    <link href="http://yangshuohao.com/2021/07/31/hexo%E5%8D%9A%E5%AE%A2%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA-%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A%E5%90%8E%E6%8E%92%E7%89%88%E6%B7%B7%E4%B9%B1/"/>
    <id>http://yangshuohao.com/2021/07/31/hexo%E5%8D%9A%E5%AE%A2%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA-%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A%E5%90%8E%E6%8E%92%E7%89%88%E6%B7%B7%E4%B9%B1/</id>
    <published>2021-07-31T02:26:34.000Z</published>
    <updated>2021-08-01T09:52:44.217Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>需强制刷新浏览器缓存，<strong>Shift+F5</strong>刷新，才能显示修改后的新界面。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;需强制刷新浏览器缓存，&lt;strong&gt;Shift+F5&lt;/strong&gt;刷新，才能显示修改后的新界面。&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    <category term="博客" scheme="http://yangshuohao.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="http://yangshuohao.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>重新生成网站导致域名失效</title>
    <link href="http://yangshuohao.com/2021/07/31/%E9%87%8D%E6%96%B0%E7%94%9F%E6%88%90%E7%BD%91%E7%AB%99%E5%AF%BC%E8%87%B4%E5%9F%9F%E5%90%8D%E5%A4%B1%E6%95%88/"/>
    <id>http://yangshuohao.com/2021/07/31/%E9%87%8D%E6%96%B0%E7%94%9F%E6%88%90%E7%BD%91%E7%AB%99%E5%AF%BC%E8%87%B4%E5%9F%9F%E5%90%8D%E5%A4%B1%E6%95%88/</id>
    <published>2021-07-31T02:14:15.000Z</published>
    <updated>2021-08-01T09:53:02.678Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新建CNAME文件"><a href="#新建CNAME文件" class="headerlink" title="新建CNAME文件"></a>新建CNAME文件</h1><p>在hexo跟目录下的source文件夹内新建一个CNAME文件（新建一个文本文件，去掉后缀名就可以保存为所有文件），在CNAME文件里面填写自己的域名就可以了。</p><p><img src="https://img-blog.csdnimg.cn/20210731101923729.png"><br><img src="https://img-blog.csdnimg.cn/20210731102010910.png"><br>然后hexo g -d重新生成部署（这里一定确定生成成功，可能因为网络原因导致失败）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;新建CNAME文件&quot;&gt;&lt;a href=&quot;#新建CNAME文件&quot; class=&quot;headerlink&quot; title=&quot;新建CNAME文件&quot;&gt;&lt;/a&gt;新建CNAME文件&lt;/h1&gt;&lt;p&gt;在hexo跟目录下的source文件夹内新建一个CNAME文件（新建一个文本文件，去</summary>
      
    
    
    
    <category term="博客" scheme="http://yangshuohao.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="http://yangshuohao.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>UE5打包安卓环境搭建</title>
    <link href="http://yangshuohao.com/2021/07/30/UE5/UE5%E6%89%93%E5%8C%85%E5%AE%89%E5%8D%93%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://yangshuohao.com/2021/07/30/UE5/UE5%E6%89%93%E5%8C%85%E5%AE%89%E5%8D%93%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-07-29T23:30:46.000Z</published>
    <updated>2021-08-01T09:55:26.031Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载UE5"><a href="#下载UE5" class="headerlink" title="下载UE5"></a>下载UE5</h1><p>首先自己下载UE5，然后记得把Android选项勾上下载，默认好像是勾上了的，如果没勾上自己下载一下。   </p><p><img src="https://img-blog.csdnimg.cn/20210730212849100.png"><br><img src="https://img-blog.csdnimg.cn/20210730212858482.png"></p><h1 id="下载jdk-8u77-windows-x64-exe"><a href="#下载jdk-8u77-windows-x64-exe" class="headerlink" title="下载jdk-8u77-windows-x64.exe"></a>下载jdk-8u77-windows-x64.exe</h1><p><a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html">官网下载地址</a></p><p><img src="https://img-blog.csdnimg.cn/20210730213151369.png"><br>当然官网下载速度可能有点慢，如果实在是下载不了的话，就从后面我提供的链接里面下载。<br>下载完以后直接安装，安装路径就保持默认，安装比较简单，直接一直下一步就可以了，这里就不废话了。安装完以后找到安装路径，默认为C:\Program Files\Java，如果你更改了路径，那你就找到你自己安装的路径就可以了。然后复制路径C:\Program Files\Java\jdk1.8.0_77，在电脑左下角搜索environment，选择编辑系统环境变量。如下图所示：   </p><p><img src="https://img-blog.csdnimg.cn/20210730213735212.png"><br>点击环境变量 </p><p><img src="https://img-blog.csdnimg.cn/20210730213842439.png"><br>在用户变量里面点击新建        </p><p><img src="https://img-blog.csdnimg.cn/20210730213902952.png"><br>然后如下图设置，设置完以后点击确定。      </p><p><img src="https://img-blog.csdnimg.cn/20210730213951521.png"><br>点击下方系统环境变量的新建         </p><p><img src="https://img-blog.csdnimg.cn/2021073021405544.png"><br>然后如下图设置，设置完以后点击确定。     </p><p><img src="https://img-blog.csdnimg.cn/20210730213951521.png"><br>这样环境变量就设置好了。</p><h1 id="下载AndroidStudio"><a href="#下载AndroidStudio" class="headerlink" title="下载AndroidStudio"></a>下载AndroidStudio</h1><p><a href="https://developer.android.com/studio/archive">官网下载地址</a></p><p><img src="https://img-blog.csdnimg.cn/2021073021441631.png"><br>当然官网下载速度可能有点慢，如果实在是下载不了的话，就从后面我提供的链接里面下载。<br>下载完以后直接安装，取消Android Virtual Device勾选，没必要下载，当然你也可以选择下载。  </p><p><img src="https://img-blog.csdnimg.cn/20210730214659346.jpg"><br>AndroidStudio安装位置自己选择，比如我安装在D:\AndroidStudio，安装完以后直接启动。<br>选择SDK Manager。         </p><p><img src="https://img-blog.csdnimg.cn/20210730220913881.png"><br>选择Android API 30（如果31勾选了的话取消了它）   </p><p><img src="https://img-blog.csdnimg.cn/20210730220947851.png"><br>然后点击SDK Tools，按如下图进行选择，如果31.0.0勾选了的话取消它，然后点击Apply。 </p><p><img src="https://img-blog.csdnimg.cn/20210730221522261.png"><br>安装位置的话我放在D:\sdk，你自己看着放，等待安装完。             </p><h1 id="UE5创建测试项目"><a href="#UE5创建测试项目" class="headerlink" title="UE5创建测试项目"></a>UE5创建测试项目</h1><p>打开UE5创建一个蓝图第三人称模板项目，如下图设置。   </p><p><img src="https://img-blog.csdnimg.cn/20210730222309410.png"><br>打开ProjectSettings       </p><p><img src="https://img-blog.csdnimg.cn/20210730222355712.png"><br>然后如下图设置     </p><p><img src="https://img-blog.csdnimg.cn/20210730222537679.png"><br>现在进入jdk安装目录复制C:\Program Files\Java\jdk1.8.0_77\bin 路径，然后打开cmd命令行窗口，记得以管理员身份运行。 </p><p><img src="https://img-blog.csdnimg.cn/2021073022285233.png"><br>通过cd 进入我们刚刚复制的路径     </p><p><img src="https://img-blog.csdnimg.cn/2021073022302776.png"><br>然后复制如下命令进去回车           </p><pre><code class="(C++)">    keytool -genkey -v -keystore ExampleKey.keystore -alias MyKey -keyalg RSA -keysize 2048 -validity 10000  </code></pre><p>口令这个得记住后面有用，比如我这里设置为<strong>666666</strong>.其他的东西随便写，还有记得回复写<strong>是</strong>不能是<strong>yes</strong>，然后回车就可以了。  </p><p><img src="https://img-blog.csdnimg.cn/20210730223211947.png"><br>这个时候在咱们的C:\Program Files\Java\jdk1.8.0_77\bin路径下生成了一个文件。  </p><p><img src="https://img-blog.csdnimg.cn/20210730223508117.png"><br>把这玩意复制到刚刚创建的UE5项目的Build/Android路径下。       </p><p><img src="https://img-blog.csdnimg.cn/2021073022432889.png"><br>进入UE5编辑器的ProjectSettings里面，选择Android。    </p><p><img src="https://img-blog.csdnimg.cn/20210730224537107.png"><br><img src="https://img-blog.csdnimg.cn/20210730224828429.png"><br>到这里就全部设置完了，直接去导出就可以了。      </p><p><img src="https://img-blog.csdnimg.cn/20210730224907127.png"><br>等待打包完，OK环境搭建结束了。</p><h1 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h1><ol><li>Android Studio报错unable to access android sdk add-on<br><img src="https://img-blog.csdnimg.cn/2021073023401258.png"><blockquote><p>解决办法：        </p><ul><li>在Android Studio的安装目录下，找到\bin\idea.properties   </li><li>在尾行添加disable.android.first.run=true，表示初次启动不检测SDK</li></ul></blockquote></li><li>UE5打包失败    </li></ol><p><img src="https://img-blog.csdnimg.cn/2021073022520373.png">   </p><blockquote><p>解决办法：<br>安装dotnet-sdk-3.1.409-win-x64就可以了，<a href="https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-3.1.409-windows-x64-installer">下载地址</a>。<br>下载安装完以后重新打包就可以了。  </p></blockquote><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><ol><li><a href="https://pan.baidu.com/s/1XvOiuAs0W0OdkX06s3AlNg">jdk-8u77-windows-x64</a> 提取码: grgu   </li><li><a href="https://pan.baidu.com/s/1cyyZUGysB5MwfR1LLnfXkw">android-studio-ide-191.6010548-windows</a> 提取码: q7aq    </li><li><a href="https://pan.baidu.com/s/1Vto2VcM9AI7TSyaZcSPiyA">dotnet-sdk-3.1.409-win-x64</a>  提取码: bb5z   </li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;下载UE5&quot;&gt;&lt;a href=&quot;#下载UE5&quot; class=&quot;headerlink&quot; title=&quot;下载UE5&quot;&gt;&lt;/a&gt;下载UE5&lt;/h1&gt;&lt;p&gt;首先自己下载UE5，然后记得把Android选项勾上下载，默认好像是勾上了的，如果没勾上自己下载一下。   &lt;/p&gt;</summary>
      
    
    
    
    <category term="UE5" scheme="http://yangshuohao.com/categories/UE5/"/>
    
    
    <category term="UE5" scheme="http://yangshuohao.com/tags/UE5/"/>
    
    <category term="打包" scheme="http://yangshuohao.com/tags/%E6%89%93%E5%8C%85/"/>
    
    <category term="安卓" scheme="http://yangshuohao.com/tags/%E5%AE%89%E5%8D%93/"/>
    
  </entry>
  
  <entry>
    <title>在Github上备份Hexo博客</title>
    <link href="http://yangshuohao.com/2021/07/27/%E5%9C%A8Github%E4%B8%8A%E5%A4%87%E4%BB%BDHexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yangshuohao.com/2021/07/27/%E5%9C%A8Github%E4%B8%8A%E5%A4%87%E4%BB%BDHexo%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-07-27T15:13:25.000Z</published>
    <updated>2021-07-28T14:35:19.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>我们的博客是托管到 GitHub 上的. 而我们每次上传（hexo d）的是网页文件, 不是我们<br>的文章, 所以我们如果想上传文章, 但同时不会干扰到网页部署, 就在 GitHub 的博客仓<br>库上建立一个分支 hexo, 这个 hexo 分支的作用就是用来保存我的 MarkDown 文章, 站点<br>配置和一些其他文件.</p><p>这样hexo d推送的是 master 分支, 而git push推送的是 hexo 分支, 互不干扰.</p><h1 id="建立一个中转站"><a href="#建立一个中转站" class="headerlink" title="建立一个中转站"></a>建立一个中转站</h1><p>建立一个文件夹, 名字随便, 我这里叫 hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/yang-shuohao/yang-shuohao.github.io.git</span><br></pre></td></tr></table></figure><p>其实这里仅仅只是为了获得版本管理的.git隐藏文件夹.</p><h1 id="建立分支"><a href="#建立分支" class="headerlink" title="建立分支"></a>建立分支</h1><p>建立一个分支, 我这里分支名为 hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure><h1 id="清空-hexo-分支"><a href="#清空-hexo-分支" class="headerlink" title="清空 hexo 分支"></a>清空 hexo 分支</h1><p>克隆下来的都是一些编译后的静态网页, 我们不需要. 删除除了.git文件夹的所有文件.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add --all</span><br><span class="line">git commit -m  &quot;清空hexo分支仓库&quot;</span><br><span class="line">git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure><p>这里同时设置了以后默认为hexo分支, 回到博客的根目录下就能看到.</p><p>我们的博客的站点配置文件_config.yml的默认提交分支为 master.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/yang-shuohao/yang-shuohao.github.io.git</span><br><span class="line">  branch: master #提交的默认分支</span><br></pre></td></tr></table></figure><h1 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h1><p>把.git文件夹移动到博客的根目录下.</p><h1 id="提交源文件"><a href="#提交源文件" class="headerlink" title="提交源文件"></a>提交源文件</h1><p>到了这一步有个注意点, 如果你的主题文件是克隆 Github 下来的, 那么会带有该主题的<br>版本管理文件, 也就是.git文件夹. 所以主题下面的要删除.git文件夹和<br>.gitignore文件, 否则会忽略这个 butterfly 主题的上传.</p><p>.deploy_git是部署静态文章用的, 需要保留.</p><p>之后每次更新博客之后, push 源文件到hexo分支即可备份</p><h1 id="个人备份习惯"><a href="#个人备份习惯" class="headerlink" title="个人备份习惯"></a>个人备份习惯</h1><p>个人而言习惯于先备份文件再生成博客。即先执行git add .，git commit -m “Backup”，git push origin hexo将博客备份完成，然后执行hexo g -d发布博客。</p><h1 id="恢复博客"><a href="#恢复博客" class="headerlink" title="恢复博客"></a>恢复博客</h1><p>目前假设本地Hexo博客基础环境已经搭好（其实很简单，只需要安装git和Nodejs（我下载的版本为LTS node-v14.17.3-x64.msi)，然后通过<code>npm install -g hexo-cli</code>安装hexo就可以了）。</p><h2 id="克隆项目到本地"><a href="#克隆项目到本地" class="headerlink" title="克隆项目到本地"></a>克隆项目到本地</h2><p>输入下列命令克隆博客必须文件(hexo分支)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/yourgithubname/yourgithubname.github.io</span><br></pre></td></tr></table></figure><h2 id="恢复博客-1"><a href="#恢复博客-1" class="headerlink" title="恢复博客"></a>恢复博客</h2><p>在克隆的那个文件夹下输入如下命令恢复博客：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure><p>在此不需要执行hexo init这条指令，因为不是从零搭建起新博客。</p><h1 id="迁移后可能遇到的问题"><a href="#迁移后可能遇到的问题" class="headerlink" title="迁移后可能遇到的问题"></a>迁移后可能遇到的问题</h1><h2 id="node版本过高"><a href="#node版本过高" class="headerlink" title="node版本过高"></a>node版本过高</h2><p>重新安装低版本 node</p><h2 id="deploy-git异常"><a href="#deploy-git异常" class="headerlink" title=".deploy_git异常"></a>.deploy_git异常</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .deploy_git</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h1&gt;&lt;p&gt;我们的博客是托管到 GitHub 上的. 而我们每次上传（hexo d）的是网页文件, 不是我们&lt;br&gt;的文章, 所以我们如果想上传文章, </summary>
      
    
    
    
    <category term="博客" scheme="http://yangshuohao.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo" scheme="http://yangshuohao.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yangshuohao.com/2021/07/25/hello-world/"/>
    <id>http://yangshuohao.com/2021/07/25/hello-world/</id>
    <published>2021-07-25T10:52:51.358Z</published>
    <updated>2021-07-25T10:52:51.358Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
