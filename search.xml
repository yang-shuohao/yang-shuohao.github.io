<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Test</title>
      <link href="/posts/784dd132.html"/>
      <url>/posts/784dd132.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><!DOCTYPE html><!-- saved from url=(0049)https://codebeautify.org/hex-to-pantone-converter --><html prefix="og: http://ogp.me/ns#" class="" webcrx=""><head>  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">  <title>HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color</title>  <meta http-equiv="content-language" content="en-US">  <link href="https://codebeautify.org/img/cb.png" rel="icon">  <meta property="fb:app_id" content="">  <meta property="og:url" content="https://codebeautify.org/hex-to-pantone-converter">  <meta name="description" content="HEX to Pantone Color Converter">  <meta name="author" content="Jimmy">  <meta name="Keywords"    content="hex to pantone,hexadecimal to pantone ,hextopantone,hex2pantone,hex to pantone converter">  <meta property="og:image" content="https://codebeautify.org/img/cb/logo.png">  <meta name="twitter:card" content="summary">  <meta name="twitter:title" content="HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color">  <meta name="twitter:description" content="HEX to Pantone Color Converter">  <meta name="twitter:image" content="https://codebeautify.org/img/cb/logo.png">  <meta name="twitter:url" content="https://codebeautify.org/hex-to-pantone-converter">  <meta name="twitter:creator" content="@codebeautify">  <meta http-equiv="X-UA-Compatible" content="IE=10">  <link rel="canonical" href="https://codebeautify.org/hex-to-pantone-converter">  <link href="https://codebeautify.org/img/cb.png" rel="icon">  <link href="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/formatter-min.css"    rel="stylesheet">  <script type="text/javascript" async=""    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/ga.js.download"></script>  <script src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/f(5).txt"></script>  <script src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/f(6).txt"></script>  <script src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/f(7).txt"    id="google_shimpl"></script>  <script async=""    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/analytics.js.download"></script>  <script    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/jquery.min.js.download"></script>  <meta http-equiv="origin-trial"    content="AxujKG9INjsZ8/gUq8+dTruNvk7RjZQ1oFhhgQbcTJKDnZfbzSTE81wvC2Hzaf3TW4avA76LTZEMdiedF1vIbA4AAABueyJvcmlnaW4iOiJodHRwczovL2ltYXNkay5nb29nbGVhcGlzLmNvbTo0NDMiLCJmZWF0dXJlIjoiVHJ1c3RUb2tlbnMiLCJleHBpcnkiOjE2NTI3NzQ0MDAsImlzVGhpcmRQYXJ0eSI6dHJ1ZX0=">  <meta http-equiv="origin-trial"    content="Azuce85ORtSnWe1MZDTv68qpaW3iHyfL9YbLRy0cwcCZwVnePnOmkUJlG8HGikmOwhZU22dElCcfrfX2HhrBPAkAAAB7eyJvcmlnaW4iOiJodHRwczovL2RvdWJsZWNsaWNrLm5ldDo0NDMiLCJmZWF0dXJlIjoiVHJ1c3RUb2tlbnMiLCJleHBpcnkiOjE2NTI3NzQ0MDAsImlzU3ViZG9tYWluIjp0cnVlLCJpc1RoaXJkUGFydHkiOnRydWV9">  <meta http-equiv="origin-trial"    content="A16nvcdeoOAqrJcmjLRpl1I6f3McDD8EfofAYTt/P/H4/AWwB99nxiPp6kA0fXoiZav908Z8etuL16laFPUdfQsAAACBeyJvcmlnaW4iOiJodHRwczovL2dvb2dsZXRhZ3NlcnZpY2VzLmNvbTo0NDMiLCJmZWF0dXJlIjoiVHJ1c3RUb2tlbnMiLCJleHBpcnkiOjE2NTI3NzQ0MDAsImlzU3ViZG9tYWluIjp0cnVlLCJpc1RoaXJkUGFydHkiOnRydWV9">  <meta http-equiv="origin-trial"    content="AxBHdr0J44vFBQtZUqX9sjiqf5yWZ/OcHRcRMN3H9TH+t90V/j3ENW6C8+igBZFXMJ7G3Pr8Dd13632aLng42wgAAACBeyJvcmlnaW4iOiJodHRwczovL2dvb2dsZXN5bmRpY2F0aW9uLmNvbTo0NDMiLCJmZWF0dXJlIjoiVHJ1c3RUb2tlbnMiLCJleHBpcnkiOjE2NTI3NzQ0MDAsImlzU3ViZG9tYWluIjp0cnVlLCJpc1RoaXJkUGFydHkiOnRydWV9">  <meta http-equiv="origin-trial"    content="A88BWHFjcawUfKU3lIejLoryXoyjooBXLgWmGh+hNcqMK44cugvsI5YZbNarYvi3roc1fYbHA1AVbhAtuHZflgEAAAB2eyJvcmlnaW4iOiJodHRwczovL2dvb2dsZS5jb206NDQzIiwiZmVhdHVyZSI6IlRydXN0VG9rZW5zIiwiZXhwaXJ5IjoxNjUyNzc0NDAwLCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlfQ==">  <meta http-equiv="origin-trial"    content="A/OOU4XAFfeAV4kM4+W9WBwNAHqq/bvtrRcJ1wpnNyO/i076BSUy1d14l2kBEgVmEuvxojSpD23172C6hBg2AQYAAACWeyJvcmlnaW4iOiJodHRwczovL2RvdWJsZWNsaWNrLm5ldDo0NDMiLCJmZWF0dXJlIjoiQ29udmVyc2lvbk1lYXN1cmVtZW50IiwiZXhwaXJ5IjoxNjM0MDgzMTk5LCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlLCJ1c2FnZSI6InN1YnNldCJ9">  <meta http-equiv="origin-trial"    content="AwrB+XVH/KV6HfZNVtSEqlUJi3yUbtCp0/TJRj+38NDIw19/9P1h7ECTtdLdhIzG0Bsl4n/0rVmttJtGUCcewgAAAACceyJvcmlnaW4iOiJodHRwczovL2dvb2dsZXN5bmRpY2F0aW9uLmNvbTo0NDMiLCJmZWF0dXJlIjoiQ29udmVyc2lvbk1lYXN1cmVtZW50IiwiZXhwaXJ5IjoxNjM0MDgzMTk5LCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlLCJ1c2FnZSI6InN1YnNldCJ9">  <meta http-equiv="origin-trial"    content="Ax15QOERqai2A5XWrDY38Eg07xh2T0pkhpDPJuDlxr7D2Ka8wHvklgK7tTPZOnT+8H31lwHto5JpvYV8jRn1WgIAAACceyJvcmlnaW4iOiJodHRwczovL2dvb2dsZXRhZ3NlcnZpY2VzLmNvbTo0NDMiLCJmZWF0dXJlIjoiQ29udmVyc2lvbk1lYXN1cmVtZW50IiwiZXhwaXJ5IjoxNjM0MDgzMTk5LCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlLCJ1c2FnZSI6InN1YnNldCJ9">  <meta http-equiv="origin-trial"    content="AxujKG9INjsZ8/gUq8+dTruNvk7RjZQ1oFhhgQbcTJKDnZfbzSTE81wvC2Hzaf3TW4avA76LTZEMdiedF1vIbA4AAABueyJvcmlnaW4iOiJodHRwczovL2ltYXNkay5nb29nbGVhcGlzLmNvbTo0NDMiLCJmZWF0dXJlIjoiVHJ1c3RUb2tlbnMiLCJleHBpcnkiOjE2NTI3NzQ0MDAsImlzVGhpcmRQYXJ0eSI6dHJ1ZX0=">  <meta http-equiv="origin-trial"    content="Azuce85ORtSnWe1MZDTv68qpaW3iHyfL9YbLRy0cwcCZwVnePnOmkUJlG8HGikmOwhZU22dElCcfrfX2HhrBPAkAAAB7eyJvcmlnaW4iOiJodHRwczovL2RvdWJsZWNsaWNrLm5ldDo0NDMiLCJmZWF0dXJlIjoiVHJ1c3RUb2tlbnMiLCJleHBpcnkiOjE2NTI3NzQ0MDAsImlzU3ViZG9tYWluIjp0cnVlLCJpc1RoaXJkUGFydHkiOnRydWV9">  <meta http-equiv="origin-trial"    content="A16nvcdeoOAqrJcmjLRpl1I6f3McDD8EfofAYTt/P/H4/AWwB99nxiPp6kA0fXoiZav908Z8etuL16laFPUdfQsAAACBeyJvcmlnaW4iOiJodHRwczovL2dvb2dsZXRhZ3NlcnZpY2VzLmNvbTo0NDMiLCJmZWF0dXJlIjoiVHJ1c3RUb2tlbnMiLCJleHBpcnkiOjE2NTI3NzQ0MDAsImlzU3ViZG9tYWluIjp0cnVlLCJpc1RoaXJkUGFydHkiOnRydWV9">  <meta http-equiv="origin-trial"    content="AxBHdr0J44vFBQtZUqX9sjiqf5yWZ/OcHRcRMN3H9TH+t90V/j3ENW6C8+igBZFXMJ7G3Pr8Dd13632aLng42wgAAACBeyJvcmlnaW4iOiJodHRwczovL2dvb2dsZXN5bmRpY2F0aW9uLmNvbTo0NDMiLCJmZWF0dXJlIjoiVHJ1c3RUb2tlbnMiLCJleHBpcnkiOjE2NTI3NzQ0MDAsImlzU3ViZG9tYWluIjp0cnVlLCJpc1RoaXJkUGFydHkiOnRydWV9">  <meta http-equiv="origin-trial"    content="A88BWHFjcawUfKU3lIejLoryXoyjooBXLgWmGh+hNcqMK44cugvsI5YZbNarYvi3roc1fYbHA1AVbhAtuHZflgEAAAB2eyJvcmlnaW4iOiJodHRwczovL2dvb2dsZS5jb206NDQzIiwiZmVhdHVyZSI6IlRydXN0VG9rZW5zIiwiZXhwaXJ5IjoxNjUyNzc0NDAwLCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlfQ==">  <meta http-equiv="origin-trial"    content="A/OOU4XAFfeAV4kM4+W9WBwNAHqq/bvtrRcJ1wpnNyO/i076BSUy1d14l2kBEgVmEuvxojSpD23172C6hBg2AQYAAACWeyJvcmlnaW4iOiJodHRwczovL2RvdWJsZWNsaWNrLm5ldDo0NDMiLCJmZWF0dXJlIjoiQ29udmVyc2lvbk1lYXN1cmVtZW50IiwiZXhwaXJ5IjoxNjM0MDgzMTk5LCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlLCJ1c2FnZSI6InN1YnNldCJ9">  <meta http-equiv="origin-trial"    content="AwrB+XVH/KV6HfZNVtSEqlUJi3yUbtCp0/TJRj+38NDIw19/9P1h7ECTtdLdhIzG0Bsl4n/0rVmttJtGUCcewgAAAACceyJvcmlnaW4iOiJodHRwczovL2dvb2dsZXN5bmRpY2F0aW9uLmNvbTo0NDMiLCJmZWF0dXJlIjoiQ29udmVyc2lvbk1lYXN1cmVtZW50IiwiZXhwaXJ5IjoxNjM0MDgzMTk5LCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlLCJ1c2FnZSI6InN1YnNldCJ9">  <meta http-equiv="origin-trial"    content="Ax15QOERqai2A5XWrDY38Eg07xh2T0pkhpDPJuDlxr7D2Ka8wHvklgK7tTPZOnT+8H31lwHto5JpvYV8jRn1WgIAAACceyJvcmlnaW4iOiJodHRwczovL2dvb2dsZXRhZ3NlcnZpY2VzLmNvbTo0NDMiLCJmZWF0dXJlIjoiQ29udmVyc2lvbk1lYXN1cmVtZW50IiwiZXhwaXJ5IjoxNjM0MDgzMTk5LCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlLCJ1c2FnZSI6InN1YnNldCJ9">  <link rel="preload" href="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/f(8).txt"    as="script">  <script type="text/javascript"    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/f(8).txt"></script>  <style class="mpa-style-fix ImageGatherer">    .FotorFrame {      position: fixed !important    }  </style>  <style class="mpa-style-fix SideFunctionPanel">    .weui-desktop-online-faq__wrp {      top: 304px !important;      bottom: unset !important    }<pre><code>.weui-desktop-online-faq__wrp .weui-desktop-online-faq__switch &#123;  width: 38px !important&#125;</code></pre><p>  </style><br>  <link type="text/css" rel="stylesheet" charset="UTF-8"    href="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/translateelement.css"><br>  <script type="text/javascript"    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/001.js.download"></script><br>  <script type="text/javascript" async=""    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/taas"></script></p></head><body id="cbBody" mpa-version="7.16.14" mpa-extension-id="ibefaeehajgcpooopoegkifhgecigeeg" aria-hidden="false"  style="padding: 0px 0px 120px;"><input type="hidden" id="viewName" value="hex-to-pantone-converter"> <input    type="hidden" id="isLogin" value=""> <input type="hidden" id="isFavTool" value="not-fav">  <meta name="viewport" content="width=device-width, initial-scale=1.0">  <script>    (function (i, s, o, g, r, a, m) {      i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {        (i[r].q = i[r].q || []).push(arguments)      }, i[r].l = 1 * new Date(); a = s.createElement(o),        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');<pre><code>ga(&#39;create&#39;, &#39;UA-51765955-1&#39;, &#39;codebeautify.org&#39;);ga(&#39;send&#39;, &#39;pageview&#39;);</code></pre><p>  </script><br>  <div class="navbar navbar-inverse navbar-fixed-top"><br>    <div class="navbar-inner"><br>      <div class="container-fluid"><br>        <div class="mainheader"><br>          <div class="logo"> <a href="https://codebeautify.org/" class="brand"><br>              <div class="cblogoimage" title="Code Beautify"></div><br>            </a> </div><br>          <div class="headerMenu"><br>            <div class="nav-collapse collapse"><br>              <ul class="nav"><br>                <li class="dropdown pull-right margin-last-li"> <a href="https://jsonformatter.org/" target="_blank"                    title="JSON Formatter">&nbsp;JSON Formatter</a> </li><br>                <li class="dropdown pull-right margin-last-li"> <a href="https://hexcolorcodes.org/" target="_blank"                    title="Hex Color Codes">&nbsp;Hex Color Codes</a> </li><br>                <li class="dropdown pull-right margin-last-li"> <a href="https://codebeautify.org/hmac-generator"                    title="HMAC Generator">&nbsp;HMAC Generator</a> </li><br>                <li class="dropdown pull-right"> <a                    href="https://codebeautify.org/ipcheck-weatherinfo-latestnews">&nbsp;My Ip</a> </li><br>                <li class="dropdown pull-right"> <a href="https://codebeautify.org/">Search</a> </li><br>                <li class="dropdown pull-right"> <a href="https://codebeautify.org/recentLinksPage">Recent Links</a><br>                </li><br>                <li class="dropdown pull-right" id="moreMenu"> <a                    href="https://codebeautify.org/hex-to-pantone-converter#" id="more">More <b class="caret"></b></a><br>                </li><br>                <li> </li><br>                <li id="loggedin" class="dropdown" onclick="toggleOpenClass()" style="display:none"> <a id="username"                    class="dropbtn" data-toggle="dropdown"> <b id="usernamelable" class="dropbtn"></b> <b                      class="caret"></b> </a><br>                  <div id="myDropdown" class="dropdown-content"> <a class="leftText" style="float: none"                      href="https://codebeautify.org/userSaveLinkPage">Links</a> <a class="leftText"                      href="https://codebeautify.org/userSaveOldLinkPage">Archived</a> <a class="leftText"                      href="https://codebeautify.org/profile">Profile</a> <a class="leftText"                      href="https://codebeautify.org/myFavouriteTools">Favourites</a> <a class="leftText"                      href="https://codebeautify.org/logout">Logout</a> </div><br>                </li><br>                <li id="notloggedin"> <a href="https://codebeautify.org/login" rel="nofollow">Sign in</a> </li><br>              </ul><br>              <div id="copy-note-msg" class="hide"> Copied to Clipboard. </div><br>            </div><br>          </div><br>        </div><br>      </div><br>    </div><br>    <div class="some_other_box"></div><br>  </div><br>  <div id="superdiv" class="superDiv"></div><br>  <div id="fbpost" class="fbPost"><br>    <div id="shareDiv"> </div><br>  </div><br>  <script></p><pre><code>$(&quot;#savebtn&quot;).hide();</code></pre><p>  </script><br>  <div id="innerBody" class="innerBody setBgImage" style="height: auto !important;"><br>    <div class="containe-fluid viewerInnerBodyDiv" style="height: auto !important;"><br>      <div class="row-fluid back" style="height: auto !important;"><br>        <div class="span12 margin0" style="height: auto !important; min-height: 0px !important;"><br>          <div class="center" style="height: auto !important;"><br>            <div class="span8 centersetting margin"><br>              <h1 class="subTitleHead" id="subTitle">HEX to Pantone<i id="favToolImg" aria-hidden="true"                  class="icon-star-empty" title="make it favourite" style="cursor: pointer;"></i></h1><br>            </div><br>            <div class="span11 centersetting margin" style="margin: 0px 20px;"><br>              <div id="colorEffect" class="span2 white divLeft marLeft20" style="background-color: rgb(116, 169, 207);"><br>              </div><br>              <div class="marginleft0 span8 permalinkButtonDiv sourceCodeOptionDiv"> <label>Hex:</label> <input                  type="text" id="h" class="span2" value="FFFFFF" maxlength="6"> <label>Distance:</label> <select                  id="dist" class="span2" onclick="convertColor()" onchange="convertColor()"><br>                  <option value="16">16</option><br>                  <option value="32" selected="">32</option><br>                  <option value="48">48</option><br>                  <option value="64">64</option><br>                  <option value="80">80</option><br>                  <option value="96">96</option><br>                </select> </div><br>              <div id="colorPallete" class="span2 marginleft0 white divRight marRight20"><br>                <div class="colpick colpick_hex colpick_hex_ns" id="collorpicker_498"                  style="display: block; position: relative;"><br>                  <div class="colpick_color" style="background-color: rgb(0, 149, 255);"><br>                    <div class="colpick_color_overlay1"><br>                      <div class="colpick_color_overlay2"><br>                        <div class="colpick_selector_outer" style="left: 68px; top: 29px;"><br>                          <div class="colpick_selector_inner"></div><br>                        </div><br>                      </div><br>                    </div><br>                  </div><br>                  <div class="colpick_hue"                    style="background:-webkit-linear-gradient(top,#ff0000,#ff0080,#ff00ff,#8000ff,#0000ff,#0080ff,#00ffff,#00ff80,#00ff00,#80ff00,#ffff00,#ff8000,#ff0000); background: -o-linear-gradient(top,#ff0000,#ff0080,#ff00ff,#8000ff,#0000ff,#0080ff,#00ffff,#00ff80,#00ff00,#80ff00,#ffff00,#ff8000,#ff0000); background: -ms-linear-gradient(top,#ff0000,#ff0080,#ff00ff,#8000ff,#0000ff,#0080ff,#00ffff,#00ff80,#00ff00,#80ff00,#ffff00,#ff8000,#ff0000); background:-moz-linear-gradient(top,#ff0000,#ff0080,#ff00ff,#8000ff,#0000ff,#0080ff,#00ffff,#00ff80,#00ff00,#80ff00,#ffff00,#ff8000,#ff0000); -webkit-linear-gradient(top,#ff0000,#ff0080,#ff00ff,#8000ff,#0000ff,#0080ff,#00ffff,#00ff80,#00ff00,#80ff00,#ffff00,#ff8000,#ff0000); background:linear-gradient(to bottom,#ff0000,#ff0080,#ff00ff,#8000ff,#0000ff,#0080ff,#00ffff,#00ff80,#00ff00,#80ff00,#ffff00,#ff8000,#ff0000); "><br>                    <div class="colpick_hue_arrs" style="top: 67px;"><br>                      <div class="colpick_hue_larr"></div><br>                      <div class="colpick_hue_rarr"></div><br>                    </div><br>                  </div><br>                  <div class="colpick_new_color" style="background-color: rgb(116, 169, 207);"></div><br>                  <div class="colpick_current_color" style="background-color: rgb(50, 137, 199);"></div><br>                  <div class="colpick_hex_field"><br>                    <div class="colpick_field_letter">#</div><input type="text" maxlength="6" size="6"><br>                  </div><br>                  <div class="colpick_rgb_r colpick_field"><br>                    <div class="colpick_field_letter">R</div><input type="text" maxlength="3" size="3"><br>                    <div class="colpick_field_arrs"><br>                      <div class="colpick_field_uarr"></div><br>                      <div class="colpick_field_darr"></div><br>                    </div><br>                  </div><br>                  <div class="colpick_rgb_g colpick_field"><br>                    <div class="colpick_field_letter">G</div><input type="text" maxlength="3" size="3"><br>                    <div class="colpick_field_arrs"><br>                      <div class="colpick_field_uarr"></div><br>                      <div class="colpick_field_darr"></div><br>                    </div><br>                  </div><br>                  <div class="colpick_rgb_b colpick_field"><br>                    <div class="colpick_field_letter">B</div><input type="text" maxlength="3" size="3"><br>                    <div class="colpick_field_arrs"><br>                      <div class="colpick_field_uarr"></div><br>                      <div class="colpick_field_darr"></div><br>                    </div><br>                  </div><br>                  <div class="colpick_hsb_h colpick_field"><br>                    <div class="colpick_field_letter">H</div><input type="text" maxlength="3" size="3"><br>                    <div class="colpick_field_arrs"><br>                      <div class="colpick_field_uarr"></div><br>                      <div class="colpick_field_darr"></div><br>                    </div><br>                  </div><br>                  <div class="colpick_hsb_s colpick_field"><br>                    <div class="colpick_field_letter">S</div><input type="text" maxlength="3" size="3"><br>                    <div class="colpick_field_arrs"><br>                      <div class="colpick_field_uarr"></div><br>                      <div class="colpick_field_darr"></div><br>                    </div><br>                  </div><br>                  <div class="colpick_hsb_b colpick_field"><br>                    <div class="colpick_field_letter">B</div><input type="text" maxlength="3" size="3"><br>                    <div class="colpick_field_arrs"><br>                      <div class="colpick_field_uarr"></div><br>                      <div class="colpick_field_darr"></div><br>                    </div><br>                  </div><br>                  <div class="colpick_submit">OK</div><br>                </div><br>              </div><br>            </div><br>            <div style="text-align:center;" class="adsense"><br>              <script async=""                src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/f(9).txt"                crossorigin="anonymous" data-checked-head="true"></script> <ins class="adsbygoogle"                style="display: block; height: 280px;" data-ad-client="ca-pub-4125058781634690"                data-ad-slot="2203092761" data-ad-format="auto" data-adsbygoogle-status="done"                data-ad-status="filled"><ins id="aswift_1_expand" tabindex="0" title="Advertisement"                  aria-label="Advertisement"                  style="border: none; height: 280px; width: 1200px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: inline-table;"><ins                    id="aswift_1_anchor"                    style="border: none; height: 280px; width: 1200px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: block; overflow: visible;"><iframe                      id="aswift_1" name="aswift_1"                      style="left:0;position:absolute;top:0;border:0;width:1200px;height:280px;"                      sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation"                      width="1200" height="280" frameborder="0"                      src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/ads.html"                      marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no"                      allowfullscreen="true" data-google-container-id="a!2"                      data-google-query-id="CNSH-vjrkvQCFZKzvAod900KIw"                      data-load-complete="true"></iframe></ins></ins></ins><br>              <script><br>                (adsbygoogle = window.adsbygoogle || []).push({});<br>              </script><br>            </div><br>            <div class="span12 center viewerInnerBodyDiv1"><br>              <div id="colorDiv" class="validatorContainer validateTableDiv"><br>                <table border="0" cellpadding="3" style="font-family:arial;font-size:12px;font-weight:bold"><br>                  <tbody><br>                    <tr align="center"><br>                      <td><br>                        <div>271 C</div><br>                        <div title="9595D2" style="background-color:#9595D2;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>2715 C</div><br>                        <div title="8B84D7" style="background-color:#8B84D7;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7446 C</div><br>                        <div title="8986CA" style="background-color:#8986CA;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7674 C</div><br>                        <div title="878CB4" style="background-color:#878CB4;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>536 C</div><br>                        <div title="A2B2C8" style="background-color:#A2B2C8;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>535 C</div><br>                        <div title="8E9FBC" style="background-color:#8E9FBC;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>550 C</div><br>                        <div title="8DB9CA" style="background-color:#8DB9CA;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>549 C</div><br>                        <div title="6BA4B8" style="background-color:#6BA4B8;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>5425 C</div><br>                        <div title="7A99AC" style="background-color:#7A99AC;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>644 C</div><br>                        <div title="9BB8D3" style="background-color:#9BB8D3;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>645 C</div><br>                        <div title="7DA1C4" style="background-color:#7DA1C4;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>646 C</div><br>                        <div title="5E8AB4" style="background-color:#5E8AB4;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                    </tr><br>                    <tr align="center"><br>                      <td><br>                        <div>652 C</div><br>                        <div title="7D9BC1" style="background-color:#7D9BC1;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>659 C</div><br>                        <div title="7BA4DB" style="background-color:#7BA4DB;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7451 C</div><br>                        <div title="89ABE3" style="background-color:#89ABE3;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7452 C</div><br>                        <div title="8094DD" style="background-color:#8094DD;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7453 C</div><br>                        <div title="7BA6DE" style="background-color:#7BA6DE;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7454 C</div><br>                        <div title="5F8FB4" style="background-color:#5F8FB4;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>2718 C</div><br>                        <div title="5C88DA" style="background-color:#5C88DA;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>278 C</div><br>                        <div title="8BB8E8" style="background-color:#8BB8E8;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>283 C</div><br>                        <div title="92C1E9" style="background-color:#92C1E9;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>284 C</div><br>                        <div title="6CACE4" style="background-color:#6CACE4;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7681 C</div><br>                        <div title="94A9CB" style="background-color:#94A9CB;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7682 C</div><br>                        <div title="6787B7" style="background-color:#6787B7;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                    </tr><br>                    <tr align="center"><br>                      <td><br>                        <div>542 C</div><br>                        <div title="7BAFD4" style="background-color:#7BAFD4;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>292 C</div><br>                        <div title="69B3E7" style="background-color:#69B3E7;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>2905 C</div><br>                        <div title="8DC8E8" style="background-color:#8DC8E8;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>2915 C</div><br>                        <div title="62B5E5" style="background-color:#62B5E5;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>297 C</div><br>                        <div title="71C5E8" style="background-color:#71C5E8;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>2985 C</div><br>                        <div title="5BC2E7" style="background-color:#5BC2E7;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7695 C</div><br>                        <div title="7BA7BC" style="background-color:#7BA7BC;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7696 C</div><br>                        <div title="6399AE" style="background-color:#6399AE;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7458 C</div><br>                        <div title="71B2C9" style="background-color:#71B2C9;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7702 C</div><br>                        <div title="48A9C5" style="background-color:#48A9C5;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>630 C</div><br>                        <div title="77C5D5" style="background-color:#77C5D5;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>310 C</div><br>                        <div title="6AD1E3" style="background-color:#6AD1E3;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                    </tr><br>                    <tr align="center"><br>                      <td><br>                        <div>3105 C</div><br>                        <div title="68D2DF" style="background-color:#68D2DF;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7709 C</div><br>                        <div title="63B1BC" style="background-color:#63B1BC;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>7472 C</div><br>                        <div title="5CB8B2" style="background-color:#5CB8B2;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>5503 C</div><br>                        <div title="94B7BB" style="background-color:#94B7BB;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>5493 C</div><br>                        <div title="7FA9AE" style="background-color:#7FA9AE;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>325 C</div><br>                        <div title="64CCC9" style="background-color:#64CCC9;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>3248 C</div><br>                        <div title="6DCDB8" style="background-color:#6DCDB8;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>564 C</div><br>                        <div title="86C8BC" style="background-color:#86C8BC;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>563 C</div><br>                        <div title="6BBBAE" style="background-color:#6BBBAE;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>570 C</div><br>                        <div title="6BCABA" style="background-color:#6BCABA;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div>338 C</div><br>                        <div title="6ECEB2" style="background-color:#6ECEB2;height:100px;width:100px;">&nbsp;</div><br>                      </td><br>                      <td><br>                        <div></div><br>                      </td><br>                    </tr><br>                  </tbody><br>                </table><br>              </div><br>            </div><br>          </div><br>        </div><br>      </div><br>    </div><br>  </div> <input type="hidden" id="hiddenHex" value="74a9cf"><br>  <div style="text-align:center;" class="adsense"><br>    <script async="" src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/f(9).txt"      crossorigin="anonymous" data-checked-head="true"></script> <ins class="adsbygoogle"      style="display: block; height: 280px;" data-ad-client="ca-pub-4125058781634690" data-ad-slot="2203092761"      data-ad-format="auto" data-adsbygoogle-status="done" data-ad-status="filled"><ins id="aswift_2_expand"        tabindex="0" title="Advertisement" aria-label="Advertisement"        style="border: none; height: 280px; width: 1200px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: inline-table;"><ins          id="aswift_2_anchor"          style="border: none; height: 280px; width: 1200px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: block; overflow: visible;"><iframe            id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;border:0;width:1200px;height:280px;"            sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation"            width="1200" height="280" frameborder="0"            src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/ads(1).html"            marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no"            allowfullscreen="true" data-google-container-id="a!3" data-google-query-id="CNac-vjrkvQCFRYdvAodrnIGQw"            data-load-complete="true"></iframe></ins></ins></ins><br>    <script><br>      (adsbygoogle = window.adsbygoogle || []).push({});<br>    </script><br>  </div><br>  <div class="container-fluid infoSection"><br>    <div class="row-fluid footerpart"><br>      <div class="span12"><br>        <div class="span6 infoDiv"><br>          <h3>What can you do with Hex to Pantone Converter ?</h3><br>          <ul class="infoFeatureDiv"><br>            <li>Convert your Hex value to Pantone value</li><br>          </ul><br>        </div><br>        <div class="span6 infoTools" id="relatedTools"><br>          <h3>Related Tools</h3><br>          <ul><br>            <li> <a href="https://codebeautify.org/hsv-to-rgb-converter">HSV to RGB Converter </a> </li><br>            <li> <a href="https://codebeautify.org/hsv-to-hex-converter">HSV to HEX Converter </a> </li><br>            <li> <a href="https://codebeautify.org/hsv-to-cmyk-converter">HSV to CMYK Converter </a> </li><br>            <li> <a href="https://codebeautify.org/cmyk-to-pantone-converter">CMYK to Pantone Converter </a> </li><br>            <li> <a href="https://codebeautify.org/cmyk-to-rgb-converter">CMYK to RGB Converter </a> </li><br>            <li> <a href="https://codebeautify.org/cmyk-to-hex-converter">CMYK to HEX Converter </a> </li><br>          </ul><br>          <h3>Recently Used Tools</h3><br>          <ul></ul><br>        </div><br>      </div><br>    </div><br>  </div><br>  <script    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/common_load_with_home.js.download"></script><br>  <link rel="stylesheet"    href="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/colpick.css"><ins    class="adsbygoogle adsbygoogle-noablate" data-adsbygoogle-status="done" style="display: none !important;"    data-ad-status="unfilled"><ins id="aswift_0_expand" tabindex="0" title="Advertisement" aria-label="Advertisement"      style="border: none; height: 0px; width: 0px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: inline-table;"><ins        id="aswift_0_anchor"        style="border: none; height: 0px; width: 0px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: block;"><iframe          id="aswift_0" name="aswift_0"          style="left:0;position:absolute;top:0;border:0;width:undefinedpx;height:undefinedpx;"          sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation"          frameborder="0"          src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/ads(2).html"          marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no"          allowfullscreen="true" data-google-container-id="a!1" data-load-complete="true"></iframe></ins></ins></ins><br>  <link rel="stylesheet"    href="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/jquery.dataTables.min.css"><br>  <script    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/jquery.dataTables.min.js.download"></script><br>  <script    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/colpick.js.download"></script><br>  <script    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/color.js.download"></script><br>  <script    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/pantonJS.js.download"></script><br>  <script></p><pre><code>$(document).ready(function () &#123;  //called after everything loaded  setDefaultData();  conditionalCode();  $(&quot;#me&quot;).click();&#125;);</code></pre><p>  </script><br>  <div class="container-fluid" style="height: auto !important;"><br>    <div class="row-fluid footerpart" style="height: auto !important;"><br>      <div class="footer_container"><br>        <div class="footer_map" id="footer_map" style="height: auto !important;"><br>          <div class="footerhead"><br>            <div class="footerheadimg"><br>              <div class="logo"> <a href="https://codebeautify.org/" class="cblogoimage"></a> </div><br>            </div><br>          </div><br>          <div class="footersub1"><br>            <h4>Unit Converter</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/length-converter">Length Converter</a></li><br>              <li><a href="https://codebeautify.org/weight-converter">Weight Converter</a></li><br>              <li><a href="https://codebeautify.org/volume-converter">Volume Converter</a></li><br>              <li><a href="https://codebeautify.org/area-converter">Area Converter</a></li><br>              <li><a href="https://codebeautify.org/temperature-converter">Temperature Converter</a></li><br>              <li><a href="https://codebeautify.org/density-converter">Density Converter</a></li><br>              <li><a href="https://codebeautify.org/electric-current-converter">Electric Current Converter</a></li><br>              <li><a href="https://codebeautify.org/speed-converter">Speed Converter</a></li><br>              <li><a href="https://codebeautify.org/angle-converter">Angle Converter</a></li><br>              <li><a href="https://codebeautify.org/bytes-converter">Bytes/Bits Converter</a></li><br>              <li><a href="https://codebeautify.org/energy-converter">Energy Converter</a></li><br>              <li><a href="https://codebeautify.org/force-converter">Force Converter</a></li><br>              <li><a href="https://codebeautify.org/fuel-converter">Fuel Converter</a></li><br>              <li><a href="https://codebeautify.org/mass-converter">Mass Converter</a></li><br>              <li><a href="https://codebeautify.org/power-converter">Power Converter</a></li><br>              <li><a href="https://codebeautify.org/pressure-converter">Pressure Converter</a></li><br>              <li><a href="https://codebeautify.org/time-converter">Time Converter</a></li><br>              <li><a href="https://codebeautify.org/astronomical-converter">Astronomical Converter</a></li><br>              <li><a href="https://codebeautify.org/frequency-converter">Frequency Converter</a></li><br>              <li><a href="https://codebeautify.org/unix-time-stamp-converter">Unix Timestamp Converter</a></li><br>            </ul><br>          </div><br>          <div class="footersub1"><br>            <h4>Converters</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/word-to-html-converter">Word to HTML Converter</a></li><br>              <li><a href="https://codebeautify.org/json-to-java-converter">JSON to JAVA Converter</a></li><br>              <li><a href="https://codebeautify.org/xml-to-java-converter">XML to JAVA Converter</a></li><br>              <li><a href="https://codebeautify.org/tableizer">Online Tableizer</a></li><br>              <li><a href="https://codebeautify.org/html-to-csv-converter">HTML to CSV Converter</a></li><br>              <li><a href="https://codebeautify.org/html-to-tsv-converter">HTML to TSV Converter</a></li><br>              <li><a href="https://codebeautify.org/html-to-php-converter">HTML to PHP Converter</a></li><br>              <li><a href="https://codebeautify.org/xml-xsl-transformation">XML-XSL Transform</a></li><br>              <li><a href="https://codebeautify.org/xmltojson">XML to JSON</a></li><br>              <li><a href="https://codebeautify.org/jsontoxml">JSON to XML</a></li><br>              <li><a href="https://codebeautify.org/csv-to-xml-json">CSV to XML/JSON</a></li><br>              <li><a href="https://codebeautify.org/yaml-to-json-xml-csv">YAML Converter</a></li><br>              <li><a href="https://codebeautify.org/image-to-base64-converter">Image to Base64</a></li><br>              <li><a href="https://codebeautify.org/base64-to-image-converter">Base64 to Image</a></li><br>              <li><a href="https://codebeautify.org/date-time-calculater">Date Calculater</a></li><br>              <li><a href="https://codebeautify.org/excel-to-html">EXCEL to HTML</a></li><br>              <li><a href="https://codebeautify.org/excel-to-xml">EXCEL to XML</a></li><br>              <li><a href="https://codebeautify.org/excel-to-json">EXCEL to JSON</a></li><br>              <li><a href="https://codebeautify.org/json-to-yaml">JSON to YAML</a></li><br>              <li><a href="https://codebeautify.org/xml-to-yaml">XML to YAML</a></li><br>              <li><a href="https://codebeautify.org/csv-to-xml-converter">CSV to XML</a></li><br>              <li><a href="https://codebeautify.org/csv-to-json-converter">CSV to JSON</a></li><br>              <li><a href="https://codebeautify.org/csv-to-html-converter">CSV to HTML</a></li><br>              <li><a href="https://codebeautify.org/csv-to-tsv-converter">CSV to TSV</a></li><br>              <li><a href="https://codebeautify.org/json-to-csv">JSON to CSV</a></li><br>              <li> </li><br>              <li><a href="https://codebeautify.org/json-to-tsv-converter">JSON to TSV</a></li><br>              <li><a href="https://codebeautify.org/xml-to-csv-converter">XML to CSV</a></li><br>              <li><a href="https://codebeautify.org/xml-to-tsv-converter">XML to TSV</a></li><br>              <li><a href="https://codebeautify.org/html-to-csv-converter">HTML to CSV</a></li><br>              <li><a href="https://codebeautify.org/csv-to-multi-line-converter">CSV to MULTILINE DATA</a></li><br>              <li><a href="https://codebeautify.org/csv-to-sql-converter">CSV to SQL</a></li><br>              <li><a href="https://codebeautify.org/sql-to-csv-converter">SQL to CSV Converter</a></li><br>              <li><a href="https://codebeautify.org/sql-to-json-converter">SQL to JSON Converter</a></li><br>              <li><a href="https://codebeautify.org/sql-to-xml-converter">SQL to XML Converter</a></li><br>              <li><a href="https://codebeautify.org/sql-to-yaml-converter">SQL to YAML Converter</a></li><br>              <li><a href="https://codebeautify.org/sql-to-html-converter">SQL to HTML Converter</a></li><br>              <li><a href="https://codebeautify.org/opml-to-json-converter">OPML to JSON</a></li><br>              <li><a href="https://codebeautify.org/hex-to-pantone-converter">HEX to Pantone Converter</a></li><br>              <li><a href="https://codebeautify.org/rgb-to-pantone-converter">RGB to Pantone Converter</a></li><br>              <li><a href="https://codebeautify.org/hsv-to-pantone-converter">HSV to Pantone Converter</a></li><br>              <li><a href="https://codebeautify.org/cmyk-to-pantone-converter">CMYK to Pantone Converter</a></li><br>              <li><a href="https://codebeautify.org/cmyk-to-hex-converter">CMYK to HEX Converter</a></li><br>              <li><a href="https://codebeautify.org/cmyk-to-rgb-converter">CMYK to RGB Converter</a></li><br>              <li><a href="https://codebeautify.org/cmyk-to-hsv-converter">CMYK to HSV Converter</a></li><br>              <li><a href="https://codebeautify.org/hsv-to-hex-converter">HSV to HEX Converter</a></li><br>              <li><a href="https://codebeautify.org/hsv-to-rgb-converter">HSV to RGB Converter</a></li><br>              <li><a href="https://codebeautify.org/hsv-to-cmyk-converter">HSV to CMYK Converter</a></li><br>              <li><a href="https://codebeautify.org/hex-to-hsv-converter">HEX to HSV Converter</a></li><br>              <li><a href="https://codebeautify.org/rgb-to-hex-converter">RGB to HEX Converter</a></li><br>              <li><a href="https://codebeautify.org/rgb-to-hsv-converter">RGB to HSV Converter</a></li><br>              <li><a href="https://codebeautify.org/rgb-to-cmyk-converter">RGB to CMYK Converter</a></li><br>              <li><a href="https://codebeautify.org/hex-to-rgb-converter">HEX to RGB Converter</a></li><br>              <li><a href="https://codebeautify.org/hex-to-cmyk-converter">HEX to CMYK Converter</a></li><br>              <li><a href="https://codebeautify.org/json-to-html-converter">JSON to HTML</a></li><br>              <li><a href="https://codebeautify.org/xml-to-html-converter">XML to HTML</a></li><br>              <li><a href="https://codebeautify.org/json-to-excel-converter">JSON to Excel</a></li><br>              <li><a href="https://codebeautify.org/xml-to-excel-converter">XML to Excel</a></li><br>              <li><a href="https://codebeautify.org/csv-to-excel-converter">CSV to Excel</a></li><br>              <li><a href="https://codebeautify.org/yaml-to-excel-converter">YAML to Excel</a></li><br>            </ul><br>          </div><br>          <div class="footersub1"><br>            <h4>Web Viewer / Editor</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/jsonviewer" class="firstchild">JSON Viewer</a> </li><br>              <li><a href="https://codebeautify.org/xmlviewer">XML Viewer</a></li><br>              <li><a href="https://codebeautify.org/mxmlviewer">MXML Viewer</a></li><br>              <li><a href="https://codebeautify.org/htmlviewer/">HTML Viewer </a></li><br>              <li><a href="https://codebeautify.org/css-beautify-minify">CSS BEAUTIFY AND MINIFY</a></li><br>              <li><a href="https://codebeautify.org/jsviewer">JAVASCRIPT Viewer</a></li><br>              <li><a href="https://codebeautify.org/rssviewer">RSS Viewer</a></li><br>              <li><a href="https://codebeautify.org/source-code-viewer">SOURCE CODE Viewer</a></li><br>              <li><a href="https://codebeautify.org/opmlviewer">OPML Viewer</a> </li><br>              <li><a href="https://codebeautify.org/csv-viewer">CSV Viewer</a> </li><br>            </ul><br>            <h4>Programming Editors</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/online-xml-editor">XML EDITOR</a></li><br>              <li><a href="https://codebeautify.org/online-json-editor">JSON EDITOR</a></li><br>              <li><a href="https://codebeautify.org/alleditor">ONLINE EDITOR</a></li><br>              <li><a href="https://codebeautify.org/javaviewer">JAVA EDITOR</a></li><br>              <li><a href="https://codebeautify.org/csharpviewer">C# EDITOR</a></li><br>              <li><a href="https://codebeautify.org/actionscript">Action Script EDITOR</a></li><br>              <li><a href="https://codebeautify.org/sqlformatter">SQL Formatter</a></li><br>            </ul><br>            <h4>Escape Unescape Tools</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/html-escape-unescape" title="HTML Escape Unescape">HTML Escape<br>                  Unescape</a></li><br>              <li><a href="https://codebeautify.org/xml-escape-unescape" title="XML Escape Unescape">XML Escape<br>                  Unescape</a></li><br>              <li><a href="https://codebeautify.org/java-escape-unescape" title="Java Escape Unescape">Java Escape<br>                  Unescape</a></li><br>              <li><a href="https://codebeautify.org/csharp-escape-unescape" title="C# Escape Unescape">C# Escape<br>                  Unescape</a></li><br>              <li><a href="https://codebeautify.org/javascript-escape-unescape"                  title="Javascript Escape Unescape">Javascript Escape Unescape</a></li><br>              <li><a href="https://codebeautify.org/csv-escape-unescape" title="CSV Escape Unescape">CSV Escape<br>                  Unescape</a></li><br>              <li><a href="https://codebeautify.org/sql-escape-unescape" title="SQL Escape Unescape">SQL Escape<br>                  Unescape</a></li><br>              <li><a href="https://codebeautify.org/json-escape-unescape" title="JSON Escape Unescape">JSON Escape<br>                  Unescape</a></li><br>              <li><a href="https://codebeautify.org/un-google-link" title="Un-Google Link">Un-Google Link</a></li><br>            </ul><br>            <h4>CryptoGraphy Tools</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/encrypt-decrypt">Encryption-Decryption</a></li><br>            </ul><br>            <h4>Other Tools</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/lorem-ipsum">Lorem-Ipsum</a></li><br>              <li><a href="https://codebeautify.org/share-link-generator">Sharelink Generator</a></li><br>              <li><a href="https://codebeautify.org/hostname-to-ip" title="Hostname to IP">Hostname to IP</a></li><br>              <li><a href="https://codebeautify.org/ip-to-hostname" title="IP to Hostname">IP to Hostname</a></li><br>              <li><a href="https://codebeautify.org/dns-lookup" title="DNS Lookup">DNS Lookup</a></li><br>              <li><a href="https://codebeautify.org/mx-lookup" title="MX Lookup">MX Lookup</a></li><br>              <li><a href="https://codebeautify.org/name-server-lookup" title="name-server-lookup">Nameserver Lookup</a><br>              </li><br>              <li><a href="https://codebeautify.org/website-to-ip-address" title="Website to IP Address">Website to IP<br>                  Address</a></li><br>              <li> </li><br>              <li><a href="https://codebeautify.org/open-port-checker" title="Open Port Checker">Open Port Checker</a><br>              </li><br>              <li> </li><br>            </ul><br>          </div><br>          <div class="footersub1"><br>            <h4>Utility</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/send-snap-message">Send Snap Message</a></li><br>              <li><a href="https://codebeautify.org/responsive-website-tester">Responsive Website Tester</a></li><br>              <li><a href="https://codebeautify.org/credit-card-validate">Credit Card Validator</a></li><br>              <li><a href="https://codebeautify.org/credit-card-fake-number-generator">Credit Card Fake Number<br>                  Generator</a></li><br>              <li><a href="https://codebeautify.org/Xpath-Tester">XPath Tester</a></li><br>              <li><a href="https://codebeautify.org/jsonpath-tester" title="Json Path Tester">Json Path Tester</a></li><br>              <li> <a href="https://codebeautify.org/jsonminifier" title="JSON Minifier">Json Minifier</a></li><br>              <li><a href="https://codebeautify.org/file-diff">File Difference</a></li><br>              <li><a href="https://codebeautify.org/json-diff">JSON Diff</a></li><br>              <li> <a href="https://codebeautify.org/xml-diff">XML Diff</a><span class="blink">New</span></li><br>              <li><a href="https://codebeautify.org/broken-link-checker">Broken Link Checker</a></li><br>            </ul><br>            <h4>String Utilities</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/random-word-generator">Random Word Generator</a></li><br>              <li><a href="https://codebeautify.org/ntlm-hash-generator">NTLM Hash Generator</a></li><br>              <li><a href="https://codebeautify.org/password-generator">Password Generator</a></li><br>              <li><a href="https://codebeautify.org/string-builder">String Builder</a></li><br>              <li><a href="https://codebeautify.org/number-to-word-converter">NUMBER to WORD Converter</a></li><br>              <li><a href="https://codebeautify.org/wordcounter">WORD COUNTER</a></li><br>              <li><a href="https://codebeautify.org/reverse-string">Reverse String</a></li><br>              <li><a href="https://codebeautify.org/html-encode-string">HTML Encode</a></li><br>              <li><a href="https://codebeautify.org/html-decode-string">HTML Decode</a></li><br>              <li><a href="https://codebeautify.org/base64-encode">Base64-Encode</a></li><br>              <li><a href="https://codebeautify.org/base64-decode">Base64-Decode</a></li><br>              <li><a href="https://codebeautify.org/url-encode-string">URL-Encode A String</a></li><br>              <li><a href="https://codebeautify.org/url-decode-string">URL-Decode A String</a></li><br>              <li><a href="https://codebeautify.org/string-hex-converter">String to Hex Converter</a></li><br>              <li><a href="https://codebeautify.org/hex-string-converter">Hex to String Converter</a></li><br>              <li><a href="https://codebeautify.org/string-binary-converter">String to Binary Converter</a></li><br>              <li><a href="https://codebeautify.org/binary-string-converter">Binary to String Converter</a> </li><br>              <li><a href="https://codebeautify.org/case-converter">Case Converter </a></li><br>              <li><a href="https://codebeautify.org/delimited-text-extractor">Delimited Text Extractor </a></li><br>              <li><a href="https://codebeautify.org/remove-accents">Remove Accents </a></li><br>              <li><a href="https://codebeautify.org/remove-duplicate-lines">Remove Duplicate Lines</a></li><br>              <li><a href="https://codebeautify.org/remove-empty-lines">Remove Empty Lines</a></li><br>              <li><a href="https://codebeautify.org/remove-extra-spaces">Remove Extra Spaces </a></li><br>              <li><a href="https://codebeautify.org/remove-line-breaks">Remove Line Breaks</a></li><br>              <li><a href="https://codebeautify.org/remove-lines-containing">Remove Lines Containing</a></li><br>              <li><a href="https://codebeautify.org/sort-text-lines">Sort Text Lines</a></li><br>            </ul><br>          </div><br>          <div class="footersub1" style="height: auto !important;"><br>            <div class="google-auto-placed" style="width: 100%; height: auto; clear: none; text-align: center;"><ins                data-ad-format="auto" class="adsbygoogle adsbygoogle-noablate" data-ad-client="ca-pub-4125058781634690"                data-adsbygoogle-status="done"                style="display: block; margin: 10px auto; background-color: transparent; height: 250px;"                data-ad-status="filled"><ins id="aswift_3_expand" tabindex="0" title="Advertisement"                  aria-label="Advertisement"                  style="border: none; height: 250px; width: 301px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: inline-table;"><ins                    id="aswift_3_anchor"                    style="border: none; height: 250px; width: 301px; margin: 0px; padding: 0px; position: relative; visibility: visible; background-color: transparent; display: block; overflow: visible;"><iframe                      id="aswift_3" name="aswift_3"                      style="left:0;position:absolute;top:0;border:0;width:301px;height:250px;"                      sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation"                      width="301" height="250" frameborder="0"                      src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/ads(3).html"                      marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no"                      allowfullscreen="true" data-google-container-id="a!4"                      data-google-query-id="CNG8vvnrkvQCFUvivAodoycCBg"                      data-load-complete="true"></iframe></ins></ins></ins></div><br>            <h4>Validators</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/cssvalidate">CSS Validator</a></li><br>              <li><a href="https://codebeautify.org/jsvalidate">JAVASCRIPT Validator</a></li><br>              <li><a href="https://codebeautify.org/jsonvalidator">JSON Validator</a></li><br>              <li><a href="https://codebeautify.org/xmlvalidator">XML Validator</a></li><br>              <li><a href="https://codebeautify.org/credit-card-validate">CREDIT CARD Validator</a></li><br>              <li><a href="https://codebeautify.org/api-test">API Test</a></li><br>              <li><a href="https://codebeautify.org/yaml-validator">YAML Validator</a></li><br>            </ul><br>            <h4>Number Utilities</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/all-number-converter">All NumbersConverter</a></li><br>              <li><a href="https://codebeautify.org/decimal-binary-converter">Decimal toBinary Converter</a></li><br>              <li><a href="https://codebeautify.org/decimal-octal-converter">Decimal to Octal Converter</a></li><br>              <li><a href="https://codebeautify.org/binary-decimal-converter">Binary to Decimal Converter</a></li><br>              <li><a href="https://codebeautify.org/binary-hex-converter">Binary to Hex Converter</a></li><br>              <li><a href="https://codebeautify.org/binary-octal-converter">Binary to OctalConverter</a></li><br>              <li><a href="https://codebeautify.org/hex-decimal-converter">Hex to Decimal Converter</a></li><br>              <li><a href="https://codebeautify.org/hex-binary-converter">Hex to Binary Converter</a></li><br>              <li><a href="https://codebeautify.org/hex-octal-converter">Hex to OctalConverter</a></li><br>              <li><a href="https://codebeautify.org/octal-decimal-converter">Octal toDecimal Converter</a></li><br>              <li><a href="https://codebeautify.org/octal-binary-converter">Octal to BinaryConverter</a></li><br>              <li><a href="https://codebeautify.org/octal-hex-converter"> Octal to HexConverter </a></li><br>            </ul><br>            <h4>Image Tools</h4><br>            <ul><br>              <li><a href="https://codebeautify.org/jpg-to-png-converter">JPG to PNG Converter</a></li><br>              <li><a href="https://codebeautify.org/jpg-to-bmp-converter">JPG to BMP Converter</a></li><br>              <li><a href="https://codebeautify.org/jpg-to-gif-converter">JPG to GIF Converter</a></li><br>              <li><a href="https://codebeautify.org/bmp-to-png-converter">BMP to PNG Converter</a></li><br>              <li><a href="https://codebeautify.org/bmp-to-jpg-converter">BMP to JPG Converter</a></li><br>              <li><a href="https://codebeautify.org/bmp-to-gif-converter">BMP to GIF Converter</a></li><br>              <li><a href="https://codebeautify.org/gif-to-png-converter">GIF to PNG Converter</a></li><br>              <li><a href="https://codebeautify.org/gif-to-jpg-converter">GIF to JPG Converter</a></li><br>              <li><a href="https://codebeautify.org/gif-to-bmp-converter">GIF to BMP Converter</a></li><br>              <li><a href="https://codebeautify.org/png-to-jpg-converter">PNG to JPG Converter</a></li><br>              <li><a href="https://codebeautify.org/png-to-bmp-converter">PNG to BMP Converter</a></li><br>              <li><a href="https://codebeautify.org/png-to-gif-converter">PNG to GIF Converter</a></li><br>            </ul><br>          </div><br>        </div><br>      </div><br>      <div class="span12 footerLinkDiv"><br>        <div class="center"> <a class="footermenu1" href="https://goo.gl/1oWmPe" target="_blank"            title="Buy us a Coffee">Buy us a Coffee</a> <a class="footermenu1" href="https://jsonformatter.org/"            target="_blank" title="JSON Formatter">JSON Formatter</a> <a class="footermenu1"            href="https://codebeautify.org/faq">FAQ</a> <a class="footermenu1"            href="https://codebeautify.org/policy">Privacy Policy</a> <a class="footermenu1"            href="https://codebeautify.org/aboutus">About</a> <a class="footermenu1"            href="https://codebeautify.org/contactus">Contact</a> <a class="footermenu1"            href="https://codebeautify.org/history">History</a> <a class="footermenu1"            href="https://codebeautify.org/sitemap">Sitemap</a> <a class="footermenu1"            href="https://codebeautify.org/where-am-i-right-now">Where am I right now?</a> <a class="footermenu1"            href="https://codeblogmoney.com/" rel="noopener">Blog</a> </div><br>      </div><br>      <div class="span12 footerLinkDiv"><br>        <div class="center"> <br> &lt;span class=”class=” footermenu1”=””&gt;<b> Copyright © CodeBeautify 2021 | v5.0 </b><br>          </span> <br> </div><br>      </div><br>    </div><br>    <p id="back-top" style=""> <a href="https://codebeautify.org/hex-to-pantone-converter#top" title="Scroll to Top"><i          class="icon-arrow-up2"></i></a> </p><br>  </div> <input id="fTitle" type="hidden"    value="HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color"> <input id="loginWith" type="hidden"    value=""><br>  <div id="openError" class="hide"> </div><br>  <div id="loadUrlPathDiv" class="hide"> <input type="text" id="path" class="urlPath" placeholder="Paste your url"> <a      href="https://codebeautify.org/hex-to-pantone-converter#" id="sampleurlindialog">Sample URL</a> </div><br>  <div id="savedialog" class="hide"> <input type="hidden" id="edit_link_id" value=""><br>    <table><br>      <tbody><br>        <tr><br>          <td>Title</td><br>          <td><input type="text" maxlength="60" id="save_link_title" value=""></td><br>        </tr><br>        <tr><br>          <td>Description</td><br>          <td><textarea id="save_link_description" placeholder="optional"></textarea></td><br>        </tr><br>        <tr><br>          <td>Tags</td><br>          <td><textarea id="save_link_tags" placeholder="optional"></textarea></td><br>        </tr><br>      </tbody><br>    </table><br>    <p>By clicking the “Save Online” button you agree to our <a href="javascript:void(0);" style="color: #0088cc"        onclick="document.getElementById(&#39;saveDisclaimer&#39;).style.display=&#39;block&#39;;">terms and<br>        conditions</a>.</p><br>    <div id="saveDisclaimer" style="display: none;"><br>      <p>All code in shared files are supplied by users, and belongs to the poster.</p><br>      <p>All shared files are made public. No license is enforced.</p><br>      <p>Any code can be removed without warning (if it is deemed offensive, damaging or for any other reason).</p><br>      <p>codebeautify.org are not responsible or liable for any loss or damage of any kind during the usage of provided<br>        code.</p><br>    </div><br>  </div><br>  <div id="gdriveDialog" class="hide"><br>    <div id="savetodrive-div"></div><br>  </div><br>  <div style="display: none" id="exportToExcelDiv"> </div><br>  <div class="mpa-sc mpa-plugin-article-gatherer mpa-new mpa-rootsc" data-z="100" style="display: block;"    id="mpa-rootsc-article-gatherer"></div><br>  <div class="mpa-sc mpa-plugin-image-gatherer mpa-new mpa-rootsc" data-z="100" style="display: block;"    id="mpa-rootsc-image-gatherer"></div><br>  <div class="mpa-sc mpa-plugin-page-clipper mpa-new mpa-rootsc" data-z="100" style="display: block;"    id="mpa-rootsc-page-clipper"></div><br>  <div class="mpa-sc mpa-plugin-text-gatherer mpa-new mpa-rootsc" data-z="100" style="display: block;"    id="mpa-rootsc-text-gatherer"></div><br>  <div class="mpa-sc mpa-plugin-video-gatherer mpa-new mpa-rootsc" data-z="100" style="display: block;"    id="mpa-rootsc-video-gatherer"></div><br>  <div class="mpa-sc mpa-plugin-side-function-panel mpa-new mpa-rootsc" data-z="110" style="display: block;"    id="mpa-rootsc-side-function-panel"></div><br>  <div class="mpa-sc mpa-plugin-notifier mpa-new mpa-rootsc" data-z="120" style="display: block;"    id="mpa-rootsc-notifier"></div><br>  <div class="mpa-sc mpa-plugin-notification-manager mpa-new mpa-rootsc" data-z="130" style="display: block;"    id="mpa-rootsc-notification-manager"></div><br>  <div id="goog-gt-tt" class="skiptranslate" dir="ltr"><br>    <div style="padding: 8px;"><br>      <div><br>        <div class="logo"><img            src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/translate_24dp.png"            width="20" height="20" alt="Google Translate"></div><br>      </div><br>    </div><br>    <div class="top" style="padding: 8px; float: left; width: 100%;"><br>      <h1 class="title gray">Original text</h1><br>    </div><br>    <div class="middle" style="padding: 8px;"><br>      <div class="original-text"></div><br>    </div><br>    <div class="bottom" style="padding: 8px;"><br>      <div class="activity-links"><span class="activity-link">Contribute a better translation</span><span          class="activity-link"></span></div><br>      <div class="started-activity-container"><br>        <hr style="color: #CCC; background-color: #CCC; height: 1px; border: none;"><br>        <div class="activity-root"></div><br>      </div><br>    </div><br>    <div class="status-message" style="display: none;"></div><br>  </div><ins class="adsbygoogle adsbygoogle-noablate" data-adsbygoogle-status="done" data-anchor-status="displayed"    style="display: block; width: 100% !important; height: 95px !important; bottom: 0px; clear: none !important; float: none !important; left: 0px; margin: 0px !important; max-height: none !important; max-width: none !important; opacity: 1; overflow: visible !important; padding: 0px !important; position: fixed; right: auto !important; top: auto !important; vertical-align: baseline !important; visibility: visible !important; z-index: 2147483647; background: rgb(250, 250, 250) !important;"    data-ad-status="filled" data-anchor-shown="true"><ins class="ee"      style="inset: auto !important; clear: none !important; display: block !important; float: none !important; height: 5px !important; margin: 0px !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; padding: 0px !important; position: relative !important; vertical-align: baseline !important; visibility: visible !important; width: auto !important; z-index: 1 !important; background-color: rgb(250, 250, 250) !important; box-shadow: rgba(0, 0, 0, 0.2) 0px -1px 5px -1px, rgba(0, 0, 0, 0.1) 0px 1px 2px -1px !important;"><span        style="display: block !important; width: 80px !important; height: 45px !important; bottom: 0px !important; left: 0% !important; pointer-events: none !important;"><svg          style="margin: 0px !important; position: absolute !important; bottom: 0px !important; left: 0% !important; display: block !important; width: 80px !important; height: 30px !important; transform: none !important; pointer-events: initial !important;"><br>          <defs><br>            <filter id="dropShadowTop" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB"><br>              <fecomponenttransfer in="SourceAlpha" result="TransferredAlpha"><br>                <fefuncr type="discrete" tableValues="0.5"></fefuncr><br>                <fefuncg type="discrete" tableValues="0.5"></fefuncg><br>                <fefuncb type="discrete" tableValues="0.5"></fefuncb><br>              </fecomponenttransfer><br>              <fegaussianblur in="TransferredAlpha" stdDeviation="2"></fegaussianblur><br>              <feoffset dx="0" dy="0" result="offsetblur"></feoffset><br>              <femerge><br>                <femergenode></femergenode><br>                <femergenode in="SourceGraphic"></femergenode><br>              </femerge><br>            </filter><br>          </defs><br>          <path d="M0,26 L0,6 A6,6 0 0,1 6,1 L50,1 A6,6 0 0,1 56,6 L56,20 A6,6 0 0,0 62,26 Z" stroke="#FAFAFA"            stroke-width="1" fill="#FAFAFA" style="filter: url(&quot;#dropShadowTop&quot;);"></path><br>          <rect x="0" y="25" width="80" height="5" style="fill: rgb(250, 250, 250);"></rect><br>          <g class="down" stroke="#616161" stroke-width="2px" stroke-linecap="square"><br>            <line x1="22" y1="12" x2="28" y2="18"></line><br>            <line x1="28" y1="18" x2="34" y2="12"></line><br>          </g><br>        </svg></span></ins><ins id="aswift_5_expand" tabindex="0" title="Advertisement" aria-label="Advertisement"      style="border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-table !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;"><ins        id="aswift_5_anchor"        style="border: none !important; height: 90px !important; width: 100% !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;"><iframe          id="aswift_5" name=""          sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation"          width="1005" height="90" frameborder="0"          src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/zrt_lookup.html"          marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no"          allowfullscreen="true" data-google-container-id="a!6" data-google-query-id="CLSm-fjrkvQCFZNCvAodl0gHjQ"          style="display: block; margin: 0px auto;" data-load-complete="true"></iframe></ins></ins></ins><br>  <div class="goog-te-spinner-pos"><br>    <div class="goog-te-spinner-animation"><svg xmlns="http://www.w3.org/2000/svg" class="goog-te-spinner" width="96px"        height="96px" viewBox="0 0 66 66"><br>        <circle class="goog-te-spinner-path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"><br>        </circle><br>      </svg></div><br>  </div><iframe    src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/saved_resource(4).html"    style="display: none;"></iframe><br>  <div class="xl-chrome-ext-bar" id="xl_chrome_ext_{4DB361DE-01F7-4376-B494-639E489D19ED}" style="display: none;"><br>    <div class="xl-chrome-ext-bar__logo"></div></p><pre><code>&lt;a id=&quot;xl_chrome_ext_download&quot; href=&quot;javascript:;&quot; class=&quot;xl-chrome-ext-bar__option&quot;&gt;下载视频&lt;/a&gt;&lt;a id=&quot;xl_chrome_ext_close&quot; href=&quot;javascript:;&quot; class=&quot;xl-chrome-ext-bar__close&quot;&gt;&lt;/a&gt;</code></pre>  </div>  <div id="gtx-anchor"    style="position: absolute; visibility: hidden; left: 40px; top: 1439px; width: 275.766px; height: 16px;"></div>  <div class="jfk-bubble gtx-bubble" role="alertdialog" aria-describedby="bubble-3"    style="visibility: visible; left: 163px; top: 1248px; opacity: 1;">    <div class="jfk-bubble-content-id" id="bubble-3">      <div id="gtx-host" style="min-width: 200px; max-width: 400px;"></div>    </div>    <div class="jfk-bubble-closebtn-id jfk-bubble-closebtn" aria-label="Close" role="button" tabindex="0"></div>    <div class="jfk-bubble-arrow-id jfk-bubble-arrow jfk-bubble-arrowdown" style="left: 15px;">      <div class="jfk-bubble-arrowimplbefore"></div>      <div class="jfk-bubble-arrowimplafter"></div>    </div>  </div></body><iframe id="google_esf" name="google_esf"  src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/zrt_lookup(1).html"  style="display: none;"></iframe><ins class="adsbygoogle adsbygoogle-noablate" data-adsbygoogle-status="done"  style="display: none !important; width: 100vw !important; height: 100vh !important; inset: 0px auto auto 0px !important; clear: none !important; float: none !important; margin: 0px !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; padding: 0px !important; position: fixed !important; vertical-align: baseline !important; visibility: visible !important; z-index: 2147483647 !important; background: transparent !important;"  aria-hidden="true" data-ad-status="filled" data-vignette-loaded="true"><ins id="aswift_4_expand" tabindex="0"    title="Advertisement" aria-label="Advertisement"    style="border: none !important; height: 100vh !important; width: 100vw !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: inline-table !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;"><ins      id="aswift_4_anchor"      style="border: none !important; height: 100vh !important; width: 100vw !important; margin: 0px !important; padding: 0px !important; position: relative !important; visibility: visible !important; background-color: transparent !important; display: block !important; inset: auto !important; clear: none !important; float: none !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; vertical-align: baseline !important; z-index: auto !important;"><iframe        id="aswift_4" name=""        sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation"        width="" height="" frameborder="0"        src="./HEX to Pantone - Best Online Tool to Convert HEX Color to Pantone Color_files/zrt_lookup(2).html"        marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no"        allowfullscreen="true" data-google-container-id="a!5" data-google-query-id="CLOm-fjrkvQCFZNCvAodl0gHjQ"        data-load-complete="true"        style="width: 100vw !important; height: 100vh !important; inset: 0px auto auto 0px !important; position: absolute !important; clear: none !important; display: inline !important; float: none !important; margin: 0px !important; max-height: none !important; max-width: none !important; opacity: 1 !important; overflow: visible !important; padding: 0px !important; vertical-align: baseline !important; visibility: visible !important; z-index: auto !important;"></iframe></ins></ins></ins></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>超详细Vulkan开发环境搭建Windows篇</title>
      <link href="/posts/61b90d80.html"/>
      <url>/posts/61b90d80.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="1-Vulkan-SDK"><a href="#1-Vulkan-SDK" class="headerlink" title="1.Vulkan SDK"></a>1.Vulkan SDK</h1><p>开发 Vulkan 应用程序所需的最重要组件是 SDK。它包括头文件、标准验证层、调试工具和 Vulkan 函数的加载程序。加载程序在运行时查找驱动程序中的函数，类似于 OpenGL 的 GLEW - 如果您熟悉它。<br>可以 使用页面底部的按钮从<a href="https://vulkan.lunarg.com/">LunarG</a> 网站下载 SDK 。您不必创建帐户，但它可以让您访问一些可能对您有用的其他文档。    </p><p><img src="https://img-blog.csdnimg.cn/df92c24d6acf454cb21ff9ed55110192.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/1eef8f962e1d40b4ad06f90ce8b67ec1.png" alt="在这里插入图片描述">   </p><p>继续安装，注意SDK的安装位置。</p><p><img src="https://img-blog.csdnimg.cn/19ab74435db44b24ad6812e3fb491fbd.png" alt="在这里插入图片描述">    </p><p>我们要做的第一件事是验证您的显卡和驱动程序是否正确支持 Vulkan。进入SDK安装目录，打开Bin目录，运行vkcube.exedemo。您应该看到以下内容：</p><p><img src="https://img-blog.csdnimg.cn/7fe287dcb72c49cfbf852209d12d17b2.gif#pic_center" alt="在这里插入图片描述"></p><p>如果您收到错误消息，请确保您的驱动程序是最新的，包括 Vulkan 运行时并且您的显卡受支持。</p><h1 id="glm"><a href="#glm" class="headerlink" title="glm"></a>glm</h1><p><a href="https://github.com/g-truc/glm/releases">glm下载地址</a><br><img src="https://img-blog.csdnimg.cn/6212207b028d411280564ae68d412d8b.png" alt="在这里插入图片描述"></p><h1 id="GLFW"><a href="#GLFW" class="headerlink" title="GLFW"></a>GLFW</h1><p><a href="https://www.glfw.org/download.html">GLFW下载地址</a><br><img src="https://img-blog.csdnimg.cn/b2c70882565f4bd1a9fa29af9edb7e05.png" alt="在这里插入图片描述"></p><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><p>打开VS2019，新建一个C++空项目，然后添加一个Main.cpp文件。</p><h2 id="配置项目属性"><a href="#配置项目属性" class="headerlink" title="配置项目属性"></a>配置项目属性</h2><p>右键创建的项目，选择最下面的属性，打开属性面板。<br>选择C/C++下面的General，在第一个添加包含目录里面添加Vulkan包含目录，glfw包含目录和glm包含目录。</p><p><img src="https://img-blog.csdnimg.cn/c69d9998fc4d431ea9f474382370c3cb.png" alt="在这里插入图片描述"></p><p>选择Linker下面的General，在添加库目录里面添加Vulkan和glfw的库目录。</p><p><img src="https://img-blog.csdnimg.cn/635eceeda4444a48ae5ab9b152f30c91.png" alt="在这里插入图片描述"></p><p>选择Linker下面的Input，在添加依赖里面输入vulkan-1.lib和glfw3.lib。</p><p><img src="https://img-blog.csdnimg.cn/8353662194474378980dabb0e00ee2f9.png" alt="在这里插入图片描述"></p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>到这里Vulkan的开发环境就搭建好了，在创建的Main.cpp里面输入下面代码进行测试。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GLFW_INCLUDE_VULKAN</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GLM_FORCE_RADIANS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GLM_FORCE_DEPTH_ZERO_TO_ONE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/vec4.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/mat4x4.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">glfwInit</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">glfwWindowHint</span>(GLFW_CLIENT_API, GLFW_NO_API);</span><br><span class="line">    GLFWwindow* window = <span class="built_in">glfwCreateWindow</span>(<span class="number">800</span>, <span class="number">600</span>, <span class="string">&quot;Vulkan window&quot;</span>, <span class="literal">nullptr</span>, <span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">uint32_t</span> extensionCount = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vkEnumerateInstanceExtensionProperties</span>(<span class="literal">nullptr</span>, &amp;extensionCount, <span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; extensionCount &lt;&lt; <span class="string">&quot; extensions supported\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    glm::mat4 matrix;</span><br><span class="line">    glm::vec4 vec;</span><br><span class="line">    <span class="keyword">auto</span> test = matrix * vec;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">glfwWindowShouldClose</span>(window)) &#123;</span><br><span class="line">        <span class="built_in">glfwPollEvents</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">glfwDestroyWindow</span>(window);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">glfwTerminate</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>出现白色窗口就说明成功了。</p><p><img src="https://img-blog.csdnimg.cn/7e0f179f7a5441f593a6e998c5279303.png" alt="在这里插入图片描述"></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>如果你遇到什么问题可以在评论区告诉我哦。</p>]]></content>
      
      
      <categories>
          
          <category> Vulkan </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超详细超全CMake教程：第二步添加库</title>
      <link href="/posts/1a358483.html"/>
      <url>/posts/1a358483.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="第-2-步：添加库"><a href="#第-2-步：添加库" class="headerlink" title="第 2 步：添加库"></a>第 2 步：添加库</h1><p>现在我们将向我们的项目添加一个库。这个库将包含我们自己的计算数字平方根的实现。然后可执行文件可以使用这个库代替编译器提供的标准平方根函数。<br>在本教程中，我们将把库放到MathFunctions里面。 此目录已包含头文件 MathFunctions.h和源文件mysqrt.cxx。源文件有一个被调用的函数mysqrt，它提供与编译器sqrt函数类似的功能。<br>在MathFunctions 目录中创建一个CMakeLists.txt文件并添加如下代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">add_library</span>(MathFunctions mysqrt.cxx)</span><br></pre></td></tr></table></figure><p>为了使用新库，我们将在顶级CMakeLists.txt文件中添加一个 add_subdirectory() ，以便构建库。我们将新库添加到可执行文件中，并添加MathFunctions为包含目录，以便mysqrt.h可以找到头文件。顶级CMakeLists.txt文件的最后几行现在应该如下所示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># add the MathFunctions library</span></span><br><span class="line"><span class="built_in">add_subdirectory</span>(MathFunctions)</span><br><span class="line"></span><br><span class="line"><span class="meta"># add the executable</span></span><br><span class="line"><span class="built_in">add_executable</span>(Tutorial tutorial.cxx)</span><br><span class="line"></span><br><span class="line"><span class="built_in">target_link_libraries</span>(Tutorial PUBLIC MathFunctions)</span><br><span class="line"></span><br><span class="line"><span class="meta"># add the binary tree to the search path for <span class="meta-keyword">include</span> files</span></span><br><span class="line"><span class="meta"># so that we will find TutorialConfig.h</span></span><br><span class="line"><span class="built_in">target_include_directories</span>(Tutorial PUBLIC</span><br><span class="line">                          <span class="string">&quot;$&#123;PROJECT_BINARY_DIR&#125;&quot;</span></span><br><span class="line">                          <span class="string">&quot;$&#123;PROJECT_SOURCE_DIR&#125;/MathFunctions&quot;</span></span><br><span class="line">                          )</span><br></pre></td></tr></table></figure><p>现在让我们将MathFunctions库设为可选。虽然对于本教程来说确实没有任何必要这样做，但对于较大的项目，这很常见。第一步是在顶级CMakeLists.txt文件中添加一个选项 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">option</span>(USE_MYMATH <span class="string">&quot;Use tutorial provided math implementation&quot;</span> ON)</span><br><span class="line"></span><br><span class="line"><span class="meta"># configure a header file to pass some of the CMake settings</span></span><br><span class="line"><span class="meta"># to the source code</span></span><br><span class="line"><span class="built_in">configure_file</span>(TutorialConfig.h.in TutorialConfig.h)</span><br></pre></td></tr></table></figure><p>此选项将显示在 cmake-gui 和 ccmake中，默认值为ON，用户可以更改此值。此设置将存储在缓存中，以便用户每次在构建目录上运行 CMake 时无需设置该值。<br>下一个更改是使MathFunctions库的构建和链接有判断条件。为此，我们将顶级CMakeLists.txt 文件的末尾更改为如下所示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(USE_MYMATH)</span><br><span class="line">  <span class="built_in">add_subdirectory</span>(MathFunctions)</span><br><span class="line">  <span class="built_in">list</span>(APPEND EXTRA_LIBS MathFunctions)</span><br><span class="line">  <span class="built_in">list</span>(APPEND EXTRA_INCLUDES <span class="string">&quot;$&#123;PROJECT_SOURCE_DIR&#125;/MathFunctions&quot;</span>)</span><br><span class="line"><span class="built_in">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="meta"># add the executable</span></span><br><span class="line"><span class="built_in">add_executable</span>(Tutorial tutorial.cxx)</span><br><span class="line"></span><br><span class="line"><span class="built_in">target_link_libraries</span>(Tutorial PUBLIC $&#123;EXTRA_LIBS&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta"># add the binary tree to the search path for <span class="meta-keyword">include</span> files</span></span><br><span class="line"><span class="meta"># so that we will find TutorialConfig.h</span></span><br><span class="line"><span class="built_in">target_include_directories</span>(Tutorial PUBLIC</span><br><span class="line">                           <span class="string">&quot;$&#123;PROJECT_BINARY_DIR&#125;&quot;</span></span><br><span class="line">                           $&#123;EXTRA_INCLUDES&#125;</span><br><span class="line">                           )</span><br></pre></td></tr></table></figure><p>请注意使用EXTRA_LIBS该变量收集任何可选库，以便稍后链接到可执行文件中。EXTRA_INCLUDES该变量类似地用于可选的头文件。这是处理许多可选组件时的经典方法，我们将在下一步中介绍现代方法。<br>对源代码的相应更改相当简单。首先，在tutorial.cxx中包括MathFunctions.h头文件：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_MYMATH</span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">include</span> <span class="meta-string">&quot;MathFunctions.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>然后，在tutorial.cxx中添加如下代码，通过USE_MYMATH控制使用哪个平方根函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_MYMATH</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">double</span> outputValue = <span class="built_in">mysqrt</span>(inputValue);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">double</span> outputValue = <span class="built_in">sqrt</span>(inputValue);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>由于源代码现在需要USE_MYMATH，所以我们可以在TutorialConfig.h.in中添加如下代码 ：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#cmakedefine USE_MYMATH</span></span><br></pre></td></tr></table></figure><p>练习：为什么我们TutorialConfig.h.in文件中的USE_MYMATH在最后配置很重要？如果将两者倒置会发生什么？<br>运行cmake 可执行文件或 cmake-gui配置项目，然后使用您选择的构建工具构建它。然后运行构建的教程可执行文件。<br>还是和第一步教程一样进行构建：<br><img src="https://img-blog.csdnimg.cn/e8632c1478e146daa98a0fbb8367518b.png" alt="在这里插入图片描述"></p><p>现在让我们更新USE_MYMATH的值。你在终端最简单的方法是使用 cmake-gui 或者 ccmake。或者，如果您想从命令行更改选项，请尝试：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake ../Step2 -DUSE_MYMATH=OFF</span><br></pre></td></tr></table></figure><p>重新构建并再次运行。<br><img src="https://img-blog.csdnimg.cn/d811c86f080e44c8859e3298d4aa0470.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> CMake </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CMake </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超详细超全CMake教程：第一步：一个基本的起点</title>
      <link href="/posts/f804f4fc.html"/>
      <url>/posts/f804f4fc.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="第一步：一个基本的起点"><a href="#第一步：一个基本的起点" class="headerlink" title="第一步：一个基本的起点"></a>第一步：一个基本的起点</h1><p>最基本的项目是从源代码文件构建的可执行文件。对于简单的项目，只需要一个三行CMakeLists.txt文件。这将是我们教程的起点。在Step1目录中创建一个 CMakeLists.txt文件，添加如下代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta"># set the project name</span></span><br><span class="line"><span class="built_in">project</span>(Tutorial)</span><br><span class="line"></span><br><span class="line"><span class="meta"># add the executable</span></span><br><span class="line"><span class="built_in">add_executable</span>(Tutorial tutorial.cxx)</span><br></pre></td></tr></table></figure><p>请注意，此示例在CMakeLists.txt文件中使用小写命令。CMake 支持大写、小写和大小写混合命令。目录中提供了tutorial.cxx的源代码，Step1可用于计算数字的平方根。</p><h2 id="添加版本号和配置的头文件"><a href="#添加版本号和配置的头文件" class="headerlink" title="添加版本号和配置的头文件"></a>添加版本号和配置的头文件</h2><p>我们将添加的第一个功能是为我们的可执行文件和项目提供版本号。虽然我们可以只在源代码中做到这一点，但使用 CMakeLists.txt提供了更大的灵活性。</p><p>首先，修改CMakeLists.txt文件以使用project() 命令来设置项目名称和版本号。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta"># set the project name and version</span></span><br><span class="line"><span class="built_in">project</span>(Tutorial VERSION <span class="number">1.0</span>)</span><br></pre></td></tr></table></figure><p>然后，配置一个头文件将版本号传递给源代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">configure_file</span>(TutorialConfig.h.in TutorialConfig.h)</span><br></pre></td></tr></table></figure><p>由于配置的文件将写入二叉树，我们必须将该目录添加到路径列表中以搜索包含文件。将以下行添加到CMakeLists.txt文件末尾：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">target_include_directories</span>(Tutorial PUBLIC</span><br><span class="line">                           <span class="string">&quot;$&#123;PROJECT_BINARY_DIR&#125;&quot;</span></span><br><span class="line">                           )</span><br></pre></td></tr></table></figure><p>使用您喜欢的编辑器，在Step1目录下创建TutorialConfig.h.in文件输入以下内容：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// the configured options and settings for Tutorial</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Tutorial_VERSION_MAJOR @Tutorial_VERSION_MAJOR@</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Tutorial_VERSION_MINOR @Tutorial_VERSION_MINOR@</span></span><br></pre></td></tr></table></figure><p>当 CMake 配置这个头文件时，@Tutorial_VERSION_MAJOR@和@Tutorial_VERSION_MINOR@的值将被替换。</p><p>接下来修改tutorial.cxx添加头文件 TutorialConfig.h.</p><p>最后，让我们通过更新打印出可执行文件名称和版本号， tutorial.cxx如下所示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (argc &lt; <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="comment">// report version</span></span><br><span class="line">    std::cout &lt;&lt; argv[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; Version &quot;</span> &lt;&lt; Tutorial_VERSION_MAJOR &lt;&lt; <span class="string">&quot;.&quot;</span></span><br><span class="line">              &lt;&lt; Tutorial_VERSION_MINOR &lt;&lt; std::endl;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Usage: &quot;</span> &lt;&lt; argv[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; number&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="指定-C-标准"><a href="#指定-C-标准" class="headerlink" title="指定 C++ 标准"></a>指定 C++ 标准</h2><p>接下来让我们通过替换tutorial.cxx文件里面的atof为 std::stodin，为我们的项目添加一些 C++11 特性。同时，删除 .#include <cstdlib></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> inputValue = std::<span class="built_in">stod</span>(argv[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p>我们需要在 CMake 代码中明确声明它应该使用正确的标志。在 CMake 中启用对特定 C++ 标准的支持的最简单方法是使用CMAKE_CXX_STANDARD变量。对于本教程，设置CMakeLists.txt文件中的变量CMAKE_CXX_STANDARD值为11，CMAKE_CXX_STANDARD_REQUIRED 值为True。确保CMAKE_CXX_STANDARD在调用上方添加声明add_executable。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta"># set the project name and version</span></span><br><span class="line"><span class="built_in">project</span>(Tutorial VERSION <span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta"># specify the C++ standard</span></span><br><span class="line"><span class="built_in">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="built_in">set</span>(CMAKE_CXX_STANDARD_REQUIRED True)</span><br></pre></td></tr></table></figure><p>CMakeLists.txt完整代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta"># set the project name and version</span></span><br><span class="line"><span class="built_in">project</span>(Tutorial VERSION <span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta"># specify the C++ standard</span></span><br><span class="line"><span class="built_in">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="built_in">set</span>(CMAKE_CXX_STANDARD_REQUIRED True)</span><br><span class="line"></span><br><span class="line"><span class="meta"># add the executable</span></span><br><span class="line"><span class="built_in">add_executable</span>(Tutorial tutorial.cxx)</span><br><span class="line"></span><br><span class="line"><span class="built_in">configure_file</span>(TutorialConfig.h.in TutorialConfig.h)</span><br><span class="line"></span><br><span class="line"><span class="built_in">target_include_directories</span>(Tutorial PUBLIC</span><br><span class="line">                           <span class="string">&quot;$&#123;PROJECT_BINARY_DIR&#125;&quot;</span></span><br><span class="line">                           )</span><br></pre></td></tr></table></figure><p>tutorial.cxx完整代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A simple program that computes the square root of a number</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;TutorialConfig.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">if</span> (argc &lt; <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="comment">// report version</span></span><br><span class="line">    std::cout &lt;&lt; argv[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; Version &quot;</span> &lt;&lt; Tutorial_VERSION_MAJOR &lt;&lt; <span class="string">&quot;.&quot;</span></span><br><span class="line">              &lt;&lt; Tutorial_VERSION_MINOR &lt;&lt; std::endl;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Usage: &quot;</span> &lt;&lt; argv[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; number&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// convert input to double</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">double</span> inputValue = std::<span class="built_in">stod</span>(argv[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// calculate square root</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">double</span> outputValue = <span class="built_in">sqrt</span>(inputValue);</span><br><span class="line">  std::cout &lt;&lt; <span class="string">&quot;The square root of &quot;</span> &lt;&lt; inputValue &lt;&lt; <span class="string">&quot; is &quot;</span> &lt;&lt; outputValue</span><br><span class="line">            &lt;&lt; std::endl;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>TutorialConfig.h.in完整代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// the configured options and settings for Tutorial</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Tutorial_VERSION_MAJOR @Tutorial_VERSION_MAJOR@</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Tutorial_VERSION_MINOR @Tutorial_VERSION_MINOR@</span></span><br></pre></td></tr></table></figure><h2 id="构建和测试"><a href="#构建和测试" class="headerlink" title="构建和测试"></a>构建和测试</h2><p>运行cmake 可执行文件或 cmake-gui 配置项目，然后使用您选择的构建工具构建它。</p><p>例如，我们可以从命令行导航到 Help/guide/tutorial目录并创建一个构建文件夹：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir Step1_build</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/721d3be2bf264042bd8973e3838527f0.png" alt="在这里插入图片描述"></p><p>接下来，导航到构建目录并运行 CMake 以配置项目并生成本机构建系统：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd Step1_build</span><br><span class="line">cmake ../Step1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/73d242c110714789b7277f02cb9fdd9c.png" alt="在这里插入图片描述"></p><p>然后调用该构建系统来实际编译/链接项目：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake --build .</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/5b233debe95f48bbbf7c60ac1da08849.png" alt="在这里插入图片描述">    </p><p>构建成功以后的项目：   </p><p><img src="https://img-blog.csdnimg.cn/2666c3cc25974fc2b7fa8b9eeda477d8.png" alt="在这里插入图片描述">   </p><p>恭喜你完成了第一步。</p>]]></content>
      
      
      <categories>
          
          <category> CMake </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CMake </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超详细超全CMake教程：开发环境准备</title>
      <link href="/posts/6bf9eb63.html"/>
      <url>/posts/6bf9eb63.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="下载安装CMake"><a href="#下载安装CMake" class="headerlink" title="下载安装CMake"></a>下载安装CMake</h1><p><a href="https://yangshuohao.blog.csdn.net/article/details/110684418">CMake安装教程</a></p><h1 id="下载CMake源代码版本"><a href="#下载CMake源代码版本" class="headerlink" title="下载CMake源代码版本"></a>下载CMake源代码版本</h1><p><a href="https://cmake.org/download/">下载地址</a><br>为什么安装了CMake还要下载CMake源代码版本呢？因为二进制版本没有提供我们需要的练习文件，所以得在安装完二进制CMake以后再下载CMake源代码版本进行练习。    </p><p><img src="https://img-blog.csdnimg.cn/5d21e3149b1f4abfbc38ae2b476343ce.png" alt="在这里插入图片描述"></p><h1 id="CMake-教程"><a href="#CMake-教程" class="headerlink" title="CMake 教程"></a>CMake 教程</h1><p>我们通过刚刚下载的的Cmake源文件进行学习，练习路径为\cmake-3.21.2\Help\guide\tutorial</p><p><img src="https://img-blog.csdnimg.cn/d38b1aa5e69f40fe94585fc4dcde6ac3.png" alt="在这里插入图片描述"><br>本系列教程一共有12步，每个步骤都有自己的子目录，其中包含可用作起点的代码。教程示例是渐进式的，因此每个步骤都为上一步提供了完整的解决方案。</p><blockquote><ol><li><a href="http://localhost:4000/2021/09/01/%E8%B6%85%E8%AF%A6%E7%BB%86%E8%B6%85%E5%85%A8CMake%E6%95%99%E7%A8%8B%EF%BC%9A%E7%AC%AC%E4%B8%80%E6%AD%A5/">超详细超全CMake教程：第一步</a></li><li></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> CMake </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CMake </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光栅化渲染器：目录</title>
      <link href="/posts/d388f3d0.html"/>
      <url>/posts/d388f3d0.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>光栅化渲染是一个又好玩又有挑战的东西，个人通过写一个光栅化渲染器来学习渲染的话是一个不错的选择。</p><h1 id="光栅化渲染器目录"><a href="#光栅化渲染器目录" class="headerlink" title="光栅化渲染器目录"></a>光栅化渲染器目录</h1><blockquote><p><a href="https://yangshuohao.com/2021/08/23/%E5%85%89%E6%A0%85%E5%8C%96%E6%B8%B2%E6%9F%93%E5%99%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%AE%BE%E7%BD%AE/">光栅化渲染器：项目设置</a><br><a href="https://yangshuohao.com/2021/08/24/%E5%85%89%E6%A0%85%E5%8C%96%E6%B8%B2%E6%9F%93%E5%99%A8%EF%BC%9A%E7%94%BB%E7%BA%BF/">光栅化渲染器：画线</a><br><a href="https://yangshuohao.com/2021/08/25/%E5%85%89%E6%A0%85%E5%8C%96%E6%B8%B2%E6%9F%93%E5%99%A8%EF%BC%9A%E5%A1%AB%E5%85%85%E4%B8%89%E8%A7%92%E5%BD%A2/">光栅化渲染器：填充三角形</a><br><a href="https://yangshuohao.com/2021/08/26/%E5%85%89%E6%A0%85%E5%8C%96%E6%B8%B2%E6%9F%93%E5%99%A8%EF%BC%9A%E5%AF%B9%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9D%80%E8%89%B2/">光栅化渲染器：对三角形着色</a><br><a href="https://yangshuohao.com/2021/08/26/%E5%85%89%E6%A0%85%E5%8C%96%E6%B8%B2%E6%9F%93%E5%99%A8%EF%BC%9A%E5%9D%90%E6%A0%87%E5%8F%98%E6%8D%A2/">光栅化渲染器：坐标变换</a><br><a href="https://yangshuohao.com/2021/08/27/%E5%85%89%E6%A0%85%E5%8C%96%E6%B8%B2%E6%9F%93%E5%99%A8%EF%BC%9A%E6%B8%B2%E6%9F%93%E4%B8%80%E4%B8%AA%E5%9C%BA%E6%99%AF/">光栅化渲染器：渲染一个场景</a><br><a href="https://yangshuohao.com/2021/08/28/%E5%85%89%E6%A0%85%E5%8C%96%E6%B8%B2%E6%9F%93%E5%99%A8%EF%BC%9A%E6%B7%B1%E5%BA%A6%E7%BC%93%E5%AD%98/">光栅化渲染器：深度缓存</a><br>光栅化渲染器：视椎体剔除<br>光栅化渲染器：背面剔除<br>光栅化渲染器：纹理<br>光栅化渲染器：光照<br>光栅化渲染器：加载模型<br>光栅化渲染器：立方体贴图<br>光栅化渲染器：阴影<br>光栅化渲染器：泛光<br>…</p></blockquote><p><img src="https://img-blog.csdnimg.cn/f295de9b80be4f319e90d048c88010b5.gif#pic_center" alt="在这里插入图片描述"></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><blockquote><p>如果你遇到了问题可以在评论区告诉我哦<br><a href="https://github.com/yang-shuohao/Renderer">项目地址</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 光栅化 </tag>
            
            <tag> 渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光栅化渲染器：深度缓存</title>
      <link href="/posts/6255f48c.html"/>
      <url>/posts/6255f48c.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一篇文章我们已经发现了渲染不正确的问题，我们今天就通过z buffer来解决这个问题。</p><h1 id="深度缓存（z）"><a href="#深度缓存（z）" class="headerlink" title="深度缓存（z）"></a>深度缓存（z）</h1><p>深度缓冲区与帧缓冲区相对应，用于记录上面每个像素的深度值，通过深度缓冲区，我们可以进行深度测试，从而确定像素的遮挡关系，保证渲染正确。深度缓存中存储着每个象素点的深度值，深度值（Z值）越大，则离摄像机越远。在不使用深度测试的时候，如果我们先绘制一个距离较近的物体，再绘制距离较远的物体，则距离远的物体因为后绘制，会把距离近的物体覆盖掉，这样的效果并不是我们所希望的。而有了深度缓冲以后，绘制物体的顺序就不那么重要了，都能按照远近（Z值）正常显示。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ScreenWidth 800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ScreenHeight 600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//深度缓存，保存z</span></span><br><span class="line">std::vector&lt;std::vector&lt;<span class="keyword">float</span>&gt;&gt; DepthBuffer;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vertex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec4 position;</span><br><span class="line"><span class="keyword">float</span> color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Triangle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec3 index;</span><br><span class="line">COLORREF color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">std::string name;</span><br><span class="line">std::vector&lt;Vertex&gt; vertices;</span><br><span class="line">std::vector&lt;Triangle&gt; triangles;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span>  <span class="title">Transform</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec3 translate;</span><br><span class="line">glm::vec4 rotation;</span><br><span class="line">glm::vec3 scale3D;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Instance</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">Model model;</span><br><span class="line">Transform transform;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Scene</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">std::vector&lt;Instance&gt; instances;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//插值</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">Interpolate</span><span class="params">(<span class="keyword">float</span> i0, <span class="keyword">float</span> d0, <span class="keyword">float</span> i1, <span class="keyword">float</span> d1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; values;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(i0 - i1) &lt; <span class="number">1e-6</span>)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d0);</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (d1 - d0) / (i1 - i0);</span><br><span class="line"><span class="keyword">float</span> d = d0;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = i0;i &lt; i1;i++)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d);</span><br><span class="line">d = d + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(P1.x - P0.x) &gt; glm::<span class="built_in">abs</span>(P1.y - P0.y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; ys = <span class="built_in">Interpolate</span>(P0.x, P0.y, P1.x, P1.y);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, ys[x - P0.x], color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; xs = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(xs[y - P0.y], y, color);</span><br><span class="line"><span class="comment">//Sleep(1);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线框三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawWireframeTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawLine</span>(P0, P1, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P1, P2, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P2, P0, color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画填充三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawFilledTriangle</span><span class="params">(Vertex P0, Vertex P1, Vertex P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//排序顶点 P0.position.y &lt;= P1.position.y &lt;= P2.position.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P1.position.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P1.position.y, P1.position.x);</span><br><span class="line"><span class="comment">//P0P1边z坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; z01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.z, P1.position.y, P1.position.z);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.position.x, P2.position.y, P2.position.x);</span><br><span class="line"><span class="comment">//P1P2边z坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; z12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.position.z, P2.position.y, P2.position.z);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P2.position.y, P2.position.x);</span><br><span class="line"><span class="comment">//P0P2边z坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; z02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.z, P2.position.y, P2.position.z);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> mx = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"><span class="keyword">if</span> (x02[mx] &lt; x012[mx])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">z01.<span class="built_in">insert</span>(z01.<span class="built_in">end</span>(), z12.<span class="built_in">begin</span>(), z12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">z012</span><span class="params">(z01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> mz = glm::<span class="built_in">floor</span>(z012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; z_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; z_right;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (z02[mz] &lt; z012[mz])</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">z_left = z02;</span><br><span class="line">z_right = z012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">z_left = z012;</span><br><span class="line">z_right = z02;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.position.y;y &lt; P2.position.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> z = z_left[y - P0.position.y];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.position.y];x &lt; x_right[y - P0.position.y];x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (z &lt; DepthBuffer[x][y])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">DepthBuffer[x][y] = z;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Sleep(1);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::vec4 <span class="title">ApplyTransform</span><span class="params">(glm::vec4 pos, Transform transform)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">glm::mat4 sm = glm::<span class="built_in">scale</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), transform.scale3D);</span><br><span class="line">glm::mat4 rm = glm::<span class="built_in">rotate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">radians</span>(transform.rotation.z), glm::<span class="built_in">vec3</span>(transform.rotation));</span><br><span class="line">glm::mat4 tm = glm::<span class="built_in">translate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), transform.translate);</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line">glm::mat4 model = tm * rm * sm;</span><br><span class="line"><span class="keyword">return</span> model * pos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画着色三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawShadedTriangle</span><span class="params">(Vertex P0, Vertex P1, Vertex P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">BYTE r = <span class="built_in">GetRValue</span>(color);</span><br><span class="line">BYTE g = <span class="built_in">GetGValue</span>(color);</span><br><span class="line">BYTE b = <span class="built_in">GetBValue</span>(color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P1.position.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P1.position.y, P1.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P1.position.y, P1.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line">h01.<span class="built_in">insert</span>(h01.<span class="built_in">end</span>(), h12.<span class="built_in">begin</span>(), h12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">h012</span><span class="params">(h01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_right;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line"></span><br><span class="line">h_left = h02;</span><br><span class="line">h_right = h012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line"></span><br><span class="line">h_left = h012;</span><br><span class="line">h_right = h02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.position.y; y &lt; P2.position.y; y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> x_l = x_left[y - P0.position.y];</span><br><span class="line"><span class="keyword">float</span> x_r = x_right[y - P0.position.y];</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_segment = <span class="built_in">Interpolate</span>(x_l, h_left[y - P0.position.y], x_r, h_right[y - P0.position.y]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.position.y]; x &lt; x_right[y - P0.position.y]; x++)</span><br><span class="line">&#123;</span><br><span class="line">COLORREF shaded_color = <span class="built_in">RGB</span>(r * h_segment[x - x_l], g * h_segment[x - x_l], b * h_segment[x - x_l]);</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, shaded_color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderTriangle</span><span class="params">(Triangle triangle, std::vector&lt;Vertex&gt; vertices)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawFilledTriangle</span>(vertices[triangle.index.x],</span><br><span class="line">vertices[triangle.index.y],</span><br><span class="line">vertices[triangle.index.z],</span><br><span class="line">triangle.color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个物体</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderObject</span><span class="params">(std::vector&lt;Vertex&gt; vertices, std::vector&lt;Triangle&gt; triangles)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; triangles.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderTriangle</span>(triangles[i], vertices);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个实例</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderInstance</span><span class="params">(Instance instances)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Model model = instances.model;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; model.vertices.<span class="built_in">size</span>();i++)</span><br><span class="line">&#123;</span><br><span class="line">model.vertices[i].position = <span class="built_in">ApplyTransform</span>(model.vertices[i].position, instances.transform);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; model.triangles.<span class="built_in">size</span>();j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderTriangle</span>(model.triangles[j], model.vertices);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个场景</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderScene</span><span class="params">(Scene s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.instances.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderInstance</span>(s.instances[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetModel</span><span class="params">(glm::vec3 s = &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;, glm::vec4 r = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">45.0f</span> &#125;, glm::vec3 t = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span> &#125;)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">glm::mat4 sm = glm::<span class="built_in">scale</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), s);</span><br><span class="line">glm::mat4 rm = glm::<span class="built_in">rotate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">radians</span>(r.w), glm::<span class="built_in">vec3</span>(r));</span><br><span class="line">glm::mat4 tm = glm::<span class="built_in">translate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), t);</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line"><span class="keyword">return</span> tm * rm * sm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetView</span><span class="params">(glm::vec3 eye=glm::vec3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),glm::vec3 center=glm::vec3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>),glm::vec3 up=glm::vec3(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> glm::<span class="built_in">lookAt</span>(eye, center, up);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetPerspective</span><span class="params">(<span class="keyword">float</span> fov=glm::radians(<span class="number">90.0f</span>),<span class="keyword">float</span> aspect= ScreenWidth/ScreenHeight,<span class="keyword">float</span> n=<span class="number">0.1f</span>,<span class="keyword">float</span> f=<span class="number">100.0f</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> glm::<span class="built_in">perspective</span>(fov, aspect, n, f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetMVP</span><span class="params">(glm::mat4 model, glm::mat4 view, glm::mat4 perspective)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> perspective * view * model;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">initgraph</span>(ScreenWidth, ScreenHeight);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line">DepthBuffer.<span class="built_in">resize</span>(ScreenWidth);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ScreenWidth;i++)</span><br><span class="line">&#123;</span><br><span class="line">DepthBuffer[i].<span class="built_in">resize</span>(ScreenHeight);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ScreenWidth;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; ScreenHeight;j++)</span><br><span class="line">&#123;</span><br><span class="line">DepthBuffer[i][j] = <span class="number">100.0f</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">std::vector&lt;Vertex&gt; Vertices;</span><br><span class="line">Vertices.<span class="built_in">resize</span>(<span class="number">8</span>);</span><br><span class="line">Vertices[<span class="number">0</span>].position = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">1</span>].position = &#123; <span class="number">-1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">2</span>].position = &#123; <span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">3</span>].position = &#123; <span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">4</span>].position = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">5</span>].position = &#123; <span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">6</span>].position = &#123; <span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">7</span>].position = &#123; <span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">Vertices[<span class="number">0</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">1</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">2</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">3</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">4</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">5</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">6</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">7</span>].color = <span class="number">1.0f</span>;</span><br><span class="line"></span><br><span class="line">std::vector&lt;Triangle&gt; triangles;</span><br><span class="line">triangles.<span class="built_in">resize</span>(<span class="number">12</span>);</span><br><span class="line">triangles[<span class="number">0</span>].index = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span> &#125;;</span><br><span class="line">triangles[<span class="number">0</span>].color = RED;</span><br><span class="line">triangles[<span class="number">1</span>].index = &#123; <span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">1</span>].color = RED;</span><br><span class="line">triangles[<span class="number">2</span>].index = &#123; <span class="number">4</span>,<span class="number">0</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">2</span>].color = GREEN;</span><br><span class="line">triangles[<span class="number">3</span>].index = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">3</span>].color = GREEN;</span><br><span class="line">triangles[<span class="number">4</span>].index = &#123; <span class="number">5</span>,<span class="number">4</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">4</span>].color = BLUE;</span><br><span class="line">triangles[<span class="number">5</span>].index = &#123; <span class="number">5</span>,<span class="number">7</span>,<span class="number">6</span> &#125;;</span><br><span class="line">triangles[<span class="number">5</span>].color = BLUE;</span><br><span class="line">triangles[<span class="number">6</span>].index = &#123; <span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line">triangles[<span class="number">6</span>].color = YELLOW;</span><br><span class="line">triangles[<span class="number">7</span>].index = &#123; <span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span> &#125;;</span><br><span class="line">triangles[<span class="number">7</span>].color = YELLOW;</span><br><span class="line">triangles[<span class="number">8</span>].index = &#123; <span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span> &#125;;</span><br><span class="line">triangles[<span class="number">8</span>].color = WHITE;</span><br><span class="line">triangles[<span class="number">9</span>].index = &#123; <span class="number">4</span>,<span class="number">1</span>,<span class="number">0</span> &#125;;</span><br><span class="line">triangles[<span class="number">9</span>].color = WHITE;</span><br><span class="line">triangles[<span class="number">10</span>].index = &#123; <span class="number">2</span>,<span class="number">6</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">10</span>].color = CYAN;</span><br><span class="line">triangles[<span class="number">11</span>].index = &#123; <span class="number">2</span>,<span class="number">7</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">11</span>].color = CYAN;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line">glm::mat4 model =<span class="built_in">GetModel</span>();</span><br><span class="line"><span class="comment">//构造视图矩阵</span></span><br><span class="line">glm::mat4 view = <span class="built_in">GetView</span>();</span><br><span class="line"><span class="comment">//构造透视投影矩阵</span></span><br><span class="line">glm::mat4 perspective =<span class="built_in">GetPerspective</span>();</span><br><span class="line"><span class="comment">//构造MVP矩阵</span></span><br><span class="line">glm::mat4 mvp = <span class="built_in">GetMVP</span>(model,view,perspective);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Vertices.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//对顶点进行MVP矩阵变换</span></span><br><span class="line">Vertices[i].position = mvp * Vertices[i].position;</span><br><span class="line"></span><br><span class="line"><span class="comment">//透视除法</span></span><br><span class="line"><span class="keyword">float</span> reciprocalW = <span class="number">1</span> / Vertices[i].position.w;</span><br><span class="line"></span><br><span class="line"><span class="comment">//屏幕映射</span></span><br><span class="line">Vertices[i].position.x = (Vertices[i].position.x * reciprocalW + <span class="number">1.0f</span>) * <span class="number">0.5f</span> * ScreenWidth;</span><br><span class="line">Vertices[i].position.y = (<span class="number">1.0f</span> - Vertices[i].position.y * reciprocalW) * <span class="number">0.5f</span> * ScreenHeight;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Scene s;</span><br><span class="line">Instance instance1;</span><br><span class="line">instance1.model.name = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">instance1.model.vertices = Vertices;</span><br><span class="line">instance1.model.triangles = triangles;</span><br><span class="line">instance1.transform.translate = &#123; <span class="number">30</span>,<span class="number">0</span>,<span class="number">1</span> &#125;;</span><br><span class="line">instance1.transform.rotation = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">60.0f</span> &#125;;</span><br><span class="line">instance1.transform.scale3D = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">Instance instance2;</span><br><span class="line">instance2.model.name = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">instance2.model.vertices = Vertices;</span><br><span class="line">instance2.model.triangles = triangles;</span><br><span class="line">instance2.transform.translate = &#123; <span class="number">-30</span>,<span class="number">0</span>,<span class="number">1</span> &#125;;</span><br><span class="line">instance2.transform.rotation = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">60.0f</span> &#125;;</span><br><span class="line">instance2.transform.scale3D = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">s.instances.<span class="built_in">push_back</span>(instance1);</span><br><span class="line">s.instances.<span class="built_in">push_back</span>(instance2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">RenderScene</span>(s);</span><br><span class="line"></span><br><span class="line">_getch();</span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果   </p><p><img src="https://img-blog.csdnimg.cn/c8d4985bf2f547ef91da65786f73853f.gif#pic_center" alt="在这里插入图片描述"></p><h1 id="深度缓存（1-z）"><a href="#深度缓存（1-z）" class="headerlink" title="深度缓存（1/z）"></a>深度缓存（1/z）</h1><p>上面的做法是保存了z数据来进行比较的，其实真正正确的做法应该采用1/z才对。</p><blockquote><p>详情可以参考下面文章<br><a href="https://developer.nvidia.com/content/depth-precision-visualized">深度精度可视化</a><br><a href="https://learnopengl-cn.github.io/04%20Advanced%20OpenGL/01%20Depth%20testing/">深度测试</a></p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ScreenWidth 800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ScreenHeight 600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//深度缓存，保存z</span></span><br><span class="line">std::vector&lt;std::vector&lt;<span class="keyword">float</span>&gt;&gt; DepthBuffer;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vertex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec4 position;</span><br><span class="line"><span class="keyword">float</span> color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Triangle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec3 index;</span><br><span class="line">COLORREF color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">std::string name;</span><br><span class="line">std::vector&lt;Vertex&gt; vertices;</span><br><span class="line">std::vector&lt;Triangle&gt; triangles;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span>  <span class="title">Transform</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec3 translate;</span><br><span class="line">glm::vec4 rotation;</span><br><span class="line">glm::vec3 scale3D;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Instance</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">Model model;</span><br><span class="line">Transform transform;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Scene</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">std::vector&lt;Instance&gt; instances;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//插值</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">Interpolate</span><span class="params">(<span class="keyword">float</span> i0, <span class="keyword">float</span> d0, <span class="keyword">float</span> i1, <span class="keyword">float</span> d1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; values;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(i0 - i1) &lt; <span class="number">1e-6</span>)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d0);</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (d1 - d0) / (i1 - i0);</span><br><span class="line"><span class="keyword">float</span> d = d0;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = i0;i &lt; i1;i++)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d);</span><br><span class="line">d = d + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(P1.x - P0.x) &gt; glm::<span class="built_in">abs</span>(P1.y - P0.y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; ys = <span class="built_in">Interpolate</span>(P0.x, P0.y, P1.x, P1.y);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, ys[x - P0.x], color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; xs = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(xs[y - P0.y], y, color);</span><br><span class="line"><span class="comment">//Sleep(1);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线框三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawWireframeTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawLine</span>(P0, P1, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P1, P2, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P2, P0, color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画填充三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawFilledTriangle</span><span class="params">(Vertex P0, Vertex P1, Vertex P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//排序顶点 P0.position.y &lt;= P1.position.y &lt;= P2.position.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P1.position.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P1.position.y, P1.position.x);</span><br><span class="line"><span class="comment">//P0P1边z坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; z01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.z, P1.position.y, P1.position.z);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.position.x, P2.position.y, P2.position.x);</span><br><span class="line"><span class="comment">//P1P2边z坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; z12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.position.z, P2.position.y, P2.position.z);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P2.position.y, P2.position.x);</span><br><span class="line"><span class="comment">//P0P2边z坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; z02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.z, P2.position.y, P2.position.z);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> mx = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"><span class="keyword">if</span> (x02[mx] &lt; x012[mx])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">z01.<span class="built_in">insert</span>(z01.<span class="built_in">end</span>(), z12.<span class="built_in">begin</span>(), z12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">z012</span><span class="params">(z01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> mz = glm::<span class="built_in">floor</span>(z012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; z_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; z_right;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (z02[mz] &lt; z012[mz])</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">z_left = z02;</span><br><span class="line">z_right = z012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">z_left = z012;</span><br><span class="line">z_right = z02;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.position.y;y &lt; P2.position.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> z = <span class="number">1</span>/z_left[y - P0.position.y];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.position.y];x &lt; x_right[y - P0.position.y];x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (z &gt; DepthBuffer[x][y])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">DepthBuffer[x][y] = z;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::vec4 <span class="title">ApplyTransform</span><span class="params">(glm::vec4 pos, Transform transform)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">glm::mat4 sm = glm::<span class="built_in">scale</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), transform.scale3D);</span><br><span class="line">glm::mat4 rm = glm::<span class="built_in">rotate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">radians</span>(transform.rotation.z), glm::<span class="built_in">vec3</span>(transform.rotation));</span><br><span class="line">glm::mat4 tm = glm::<span class="built_in">translate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), transform.translate);</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line">glm::mat4 model = tm * rm * sm;</span><br><span class="line"><span class="keyword">return</span> model * pos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画着色三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawShadedTriangle</span><span class="params">(Vertex P0, Vertex P1, Vertex P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">BYTE r = <span class="built_in">GetRValue</span>(color);</span><br><span class="line">BYTE g = <span class="built_in">GetGValue</span>(color);</span><br><span class="line">BYTE b = <span class="built_in">GetBValue</span>(color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P1.position.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P1.position.y, P1.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P1.position.y, P1.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line">h01.<span class="built_in">insert</span>(h01.<span class="built_in">end</span>(), h12.<span class="built_in">begin</span>(), h12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">h012</span><span class="params">(h01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_right;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line"></span><br><span class="line">h_left = h02;</span><br><span class="line">h_right = h012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line"></span><br><span class="line">h_left = h012;</span><br><span class="line">h_right = h02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.position.y; y &lt; P2.position.y; y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> x_l = x_left[y - P0.position.y];</span><br><span class="line"><span class="keyword">float</span> x_r = x_right[y - P0.position.y];</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_segment = <span class="built_in">Interpolate</span>(x_l, h_left[y - P0.position.y], x_r, h_right[y - P0.position.y]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.position.y]; x &lt; x_right[y - P0.position.y]; x++)</span><br><span class="line">&#123;</span><br><span class="line">COLORREF shaded_color = <span class="built_in">RGB</span>(r * h_segment[x - x_l], g * h_segment[x - x_l], b * h_segment[x - x_l]);</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, shaded_color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderTriangle</span><span class="params">(Triangle triangle, std::vector&lt;Vertex&gt; vertices)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawFilledTriangle</span>(vertices[triangle.index.x],</span><br><span class="line">vertices[triangle.index.y],</span><br><span class="line">vertices[triangle.index.z],</span><br><span class="line">triangle.color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个物体</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderObject</span><span class="params">(std::vector&lt;Vertex&gt; vertices, std::vector&lt;Triangle&gt; triangles)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; triangles.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderTriangle</span>(triangles[i], vertices);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个实例</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderInstance</span><span class="params">(Instance instances)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Model model = instances.model;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; model.vertices.<span class="built_in">size</span>();i++)</span><br><span class="line">&#123;</span><br><span class="line">model.vertices[i].position = <span class="built_in">ApplyTransform</span>(model.vertices[i].position, instances.transform);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; model.triangles.<span class="built_in">size</span>();j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderTriangle</span>(model.triangles[j], model.vertices);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个场景</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderScene</span><span class="params">(Scene s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.instances.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderInstance</span>(s.instances[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetModel</span><span class="params">(glm::vec3 s = &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;, glm::vec4 r = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">45.0f</span> &#125;, glm::vec3 t = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span> &#125;)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">glm::mat4 sm = glm::<span class="built_in">scale</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), s);</span><br><span class="line">glm::mat4 rm = glm::<span class="built_in">rotate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">radians</span>(r.w), glm::<span class="built_in">vec3</span>(r));</span><br><span class="line">glm::mat4 tm = glm::<span class="built_in">translate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), t);</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line"><span class="keyword">return</span> tm * rm * sm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetView</span><span class="params">(glm::vec3 eye=glm::vec3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),glm::vec3 center=glm::vec3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>),glm::vec3 up=glm::vec3(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> glm::<span class="built_in">lookAt</span>(eye, center, up);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetPerspective</span><span class="params">(<span class="keyword">float</span> fov=glm::radians(<span class="number">90.0f</span>),<span class="keyword">float</span> aspect= ScreenWidth/ScreenHeight,<span class="keyword">float</span> n=<span class="number">0.1f</span>,<span class="keyword">float</span> f=<span class="number">100.0f</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> glm::<span class="built_in">perspective</span>(fov, aspect, n, f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetMVP</span><span class="params">(glm::mat4 model, glm::mat4 view, glm::mat4 perspective)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> perspective * view * model;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">initgraph</span>(ScreenWidth, ScreenHeight);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line">DepthBuffer.<span class="built_in">resize</span>(ScreenWidth);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ScreenWidth;i++)</span><br><span class="line">&#123;</span><br><span class="line">DepthBuffer[i].<span class="built_in">resize</span>(ScreenHeight);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ScreenWidth;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; ScreenHeight;j++)</span><br><span class="line">&#123;</span><br><span class="line">DepthBuffer[i][j] = <span class="number">0.0f</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">std::vector&lt;Vertex&gt; Vertices;</span><br><span class="line">Vertices.<span class="built_in">resize</span>(<span class="number">8</span>);</span><br><span class="line">Vertices[<span class="number">0</span>].position = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">1</span>].position = &#123; <span class="number">-1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">2</span>].position = &#123; <span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">3</span>].position = &#123; <span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">4</span>].position = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">5</span>].position = &#123; <span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">6</span>].position = &#123; <span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">7</span>].position = &#123; <span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">Vertices[<span class="number">0</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">1</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">2</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">3</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">4</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">5</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">6</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">7</span>].color = <span class="number">1.0f</span>;</span><br><span class="line"></span><br><span class="line">std::vector&lt;Triangle&gt; triangles;</span><br><span class="line">triangles.<span class="built_in">resize</span>(<span class="number">12</span>);</span><br><span class="line">triangles[<span class="number">0</span>].index = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span> &#125;;</span><br><span class="line">triangles[<span class="number">0</span>].color = RED;</span><br><span class="line">triangles[<span class="number">1</span>].index = &#123; <span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">1</span>].color = RED;</span><br><span class="line">triangles[<span class="number">2</span>].index = &#123; <span class="number">4</span>,<span class="number">0</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">2</span>].color = GREEN;</span><br><span class="line">triangles[<span class="number">3</span>].index = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">3</span>].color = GREEN;</span><br><span class="line">triangles[<span class="number">4</span>].index = &#123; <span class="number">5</span>,<span class="number">4</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">4</span>].color = BLUE;</span><br><span class="line">triangles[<span class="number">5</span>].index = &#123; <span class="number">5</span>,<span class="number">7</span>,<span class="number">6</span> &#125;;</span><br><span class="line">triangles[<span class="number">5</span>].color = BLUE;</span><br><span class="line">triangles[<span class="number">6</span>].index = &#123; <span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line">triangles[<span class="number">6</span>].color = YELLOW;</span><br><span class="line">triangles[<span class="number">7</span>].index = &#123; <span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span> &#125;;</span><br><span class="line">triangles[<span class="number">7</span>].color = YELLOW;</span><br><span class="line">triangles[<span class="number">8</span>].index = &#123; <span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span> &#125;;</span><br><span class="line">triangles[<span class="number">8</span>].color = WHITE;</span><br><span class="line">triangles[<span class="number">9</span>].index = &#123; <span class="number">4</span>,<span class="number">1</span>,<span class="number">0</span> &#125;;</span><br><span class="line">triangles[<span class="number">9</span>].color = WHITE;</span><br><span class="line">triangles[<span class="number">10</span>].index = &#123; <span class="number">2</span>,<span class="number">6</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">10</span>].color = CYAN;</span><br><span class="line">triangles[<span class="number">11</span>].index = &#123; <span class="number">2</span>,<span class="number">7</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">11</span>].color = CYAN;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line">glm::mat4 model =<span class="built_in">GetModel</span>();</span><br><span class="line"><span class="comment">//构造视图矩阵</span></span><br><span class="line">glm::mat4 view = <span class="built_in">GetView</span>();</span><br><span class="line"><span class="comment">//构造透视投影矩阵</span></span><br><span class="line">glm::mat4 perspective =<span class="built_in">GetPerspective</span>();</span><br><span class="line"><span class="comment">//构造MVP矩阵</span></span><br><span class="line">glm::mat4 mvp = <span class="built_in">GetMVP</span>(model,view,perspective);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Vertices.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//对顶点进行MVP矩阵变换</span></span><br><span class="line">Vertices[i].position = mvp * Vertices[i].position;</span><br><span class="line"></span><br><span class="line"><span class="comment">//透视除法</span></span><br><span class="line"><span class="keyword">float</span> reciprocalW = <span class="number">1</span> / Vertices[i].position.w;</span><br><span class="line"></span><br><span class="line"><span class="comment">//屏幕映射</span></span><br><span class="line">Vertices[i].position.x = (Vertices[i].position.x * reciprocalW + <span class="number">1.0f</span>) * <span class="number">0.5f</span> * ScreenWidth;</span><br><span class="line">Vertices[i].position.y = (<span class="number">1.0f</span> - Vertices[i].position.y * reciprocalW) * <span class="number">0.5f</span> * ScreenHeight;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Scene s;</span><br><span class="line">Instance instance1;</span><br><span class="line">instance1.model.name = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">instance1.model.vertices = Vertices;</span><br><span class="line">instance1.model.triangles = triangles;</span><br><span class="line">instance1.transform.translate = &#123; <span class="number">30</span>,<span class="number">30</span>,<span class="number">1</span> &#125;;</span><br><span class="line">instance1.transform.rotation = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">60.0f</span> &#125;;</span><br><span class="line">instance1.transform.scale3D = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">Instance instance2;</span><br><span class="line">instance2.model.name = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">instance2.model.vertices = Vertices;</span><br><span class="line">instance2.model.triangles = triangles;</span><br><span class="line">instance2.transform.translate = &#123; <span class="number">-30</span>,<span class="number">30</span>,<span class="number">1</span> &#125;;</span><br><span class="line">instance2.transform.rotation = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">60.0f</span> &#125;;</span><br><span class="line">instance2.transform.scale3D = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">s.instances.<span class="built_in">push_back</span>(instance1);</span><br><span class="line">s.instances.<span class="built_in">push_back</span>(instance2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">RenderScene</span>(s);</span><br><span class="line"></span><br><span class="line">_getch();</span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><p><img src="https://img-blog.csdnimg.cn/cecc1ac25c86457f9ba7694988231a6c.gif#pic_center" alt="在这里插入图片描述"></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><blockquote><p>如果你遇到了问题可以在评论区告诉我哦<br><a href="https://github.com/yang-shuohao/Renderer">项目地址</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 光栅化 </tag>
            
            <tag> 渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光栅化渲染器：渲染一个场景</title>
      <link href="/posts/3150f9c.html"/>
      <url>/posts/3150f9c.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一篇文章我们已经对三角形进行了坐标变换，今天准备渲染几个立方体，渲染立方体就会比平面的三角形看起来更意思了。</p><h1 id="渲染一个线框立方体"><a href="#渲染一个线框立方体" class="headerlink" title="渲染一个线框立方体"></a>渲染一个线框立方体</h1><p>咱们现在可以渲染一个三角形了，那么也就意味着我们可以渲染任何物体了，因为任何物体都可以划分为三角形，那么咱们今天就先从比较简单的立方体开始。上一篇文章的坐标变换部分有点乱，今天对它们进行了封装，具体可以看代码。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ScreenWidth 800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ScreenHeight 600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//插值</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">Interpolate</span><span class="params">(<span class="keyword">float</span> i0, <span class="keyword">float</span> d0, <span class="keyword">float</span> i1, <span class="keyword">float</span> d1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; values;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(i0 - i1) &lt; <span class="number">1e-6</span>)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d0);</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (d1 - d0) / (i1 - i0);</span><br><span class="line"><span class="keyword">float</span> d = d0;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = i0;i &lt; i1;i++)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d);</span><br><span class="line">d = d + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(P1.x - P0.x) &gt; glm::<span class="built_in">abs</span>(P1.y - P0.y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; ys = <span class="built_in">Interpolate</span>(P0.x, P0.y, P1.x, P1.y);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, ys[x - P0.x], color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; xs = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(xs[y - P0.y], y, color);</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线框三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawWireframeTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawLine</span>(P0, P1, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P1, P2, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P2, P0, color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画填充三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawFilledTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P1.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.y, P1.x, P2.y, P2.x);</span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P2.y, P2.x);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P2.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.y];x &lt; x_right[y - P0.y];x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vertex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec4 position;</span><br><span class="line"><span class="keyword">float</span> color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Triangle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec3 index;</span><br><span class="line">COLORREF color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画着色三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawShadedTriangle</span><span class="params">(Vertex P0, Vertex P1, Vertex P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">BYTE r = <span class="built_in">GetRValue</span>(color);</span><br><span class="line">BYTE g = <span class="built_in">GetGValue</span>(color);</span><br><span class="line">BYTE b = <span class="built_in">GetBValue</span>(color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P1.position.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P1.position.y, P1.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P1.position.y, P1.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line">h01.<span class="built_in">insert</span>(h01.<span class="built_in">end</span>(), h12.<span class="built_in">begin</span>(), h12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">h012</span><span class="params">(h01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_right;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line"></span><br><span class="line">h_left = h02;</span><br><span class="line">h_right = h012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line"></span><br><span class="line">h_left = h012;</span><br><span class="line">h_right = h02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.position.y; y &lt; P2.position.y; y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> x_l = x_left[y - P0.position.y];</span><br><span class="line"><span class="keyword">float</span> x_r = x_right[y - P0.position.y];</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_segment = <span class="built_in">Interpolate</span>(x_l, h_left[y - P0.position.y], x_r, h_right[y - P0.position.y]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.position.y]; x &lt; x_right[y - P0.position.y]; x++)</span><br><span class="line">&#123;</span><br><span class="line">COLORREF shaded_color = <span class="built_in">RGB</span>(r * h_segment[x - x_l], g * h_segment[x - x_l], b * h_segment[x - x_l]);</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, shaded_color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderTriangle</span><span class="params">(Triangle triangle, std::vector&lt;Vertex&gt; vertices)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawWireframeTriangle</span>(vertices[triangle.index.x].position,</span><br><span class="line">vertices[triangle.index.y].position,</span><br><span class="line">vertices[triangle.index.z].position,</span><br><span class="line">triangle.color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个物体</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderObject</span><span class="params">(std::vector&lt;Vertex&gt; vertices, std::vector&lt;Triangle&gt; triangles)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; triangles.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderTriangle</span>(triangles[i], vertices);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetModel</span><span class="params">(glm::vec3 s = &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;, glm::vec4 r = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">60.0f</span> &#125;, glm::vec3 t = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span> &#125;)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">glm::mat4 sm = glm::<span class="built_in">scale</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), s);</span><br><span class="line">glm::mat4 rm = glm::<span class="built_in">rotate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">radians</span>(r.w), glm::<span class="built_in">vec3</span>(r));</span><br><span class="line">glm::mat4 tm = glm::<span class="built_in">translate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), t);</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line"><span class="keyword">return</span> tm * rm * sm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetView</span><span class="params">(glm::vec3 eye=glm::vec3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),glm::vec3 center=glm::vec3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>),glm::vec3 up=glm::vec3(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> glm::<span class="built_in">lookAt</span>(eye, center, up);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetPerspective</span><span class="params">(<span class="keyword">float</span> fov=glm::radians(<span class="number">90.0f</span>),<span class="keyword">float</span> aspect= ScreenWidth/ScreenHeight,<span class="keyword">float</span> n=<span class="number">0.1f</span>,<span class="keyword">float</span> f=<span class="number">100.0f</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> glm::<span class="built_in">perspective</span>(fov, aspect, n, f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetMVP</span><span class="params">(glm::mat4 model, glm::mat4 view, glm::mat4 perspective)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> perspective * view * model;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">initgraph</span>(ScreenWidth, ScreenHeight);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line">std::vector&lt;Vertex&gt; Vertices;</span><br><span class="line">Vertices.<span class="built_in">resize</span>(<span class="number">8</span>);</span><br><span class="line">Vertices[<span class="number">0</span>].position = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">1</span>].position = &#123; <span class="number">-1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">2</span>].position = &#123; <span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">3</span>].position = &#123; <span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">4</span>].position = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">5</span>].position = &#123; <span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">6</span>].position = &#123; <span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">7</span>].position = &#123; <span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">Vertices[<span class="number">0</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">1</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">2</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">3</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">4</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">5</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">6</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">7</span>].color = <span class="number">1.0f</span>;</span><br><span class="line"></span><br><span class="line">std::vector&lt;Triangle&gt; triangles;</span><br><span class="line">triangles.<span class="built_in">resize</span>(<span class="number">12</span>);</span><br><span class="line">triangles[<span class="number">0</span>].index = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span> &#125;;</span><br><span class="line">triangles[<span class="number">0</span>].color = RED;</span><br><span class="line">triangles[<span class="number">1</span>].index = &#123; <span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">1</span>].color = RED;</span><br><span class="line">triangles[<span class="number">2</span>].index = &#123; <span class="number">4</span>,<span class="number">0</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">2</span>].color = GREEN;</span><br><span class="line">triangles[<span class="number">3</span>].index = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">3</span>].color = GREEN;</span><br><span class="line">triangles[<span class="number">4</span>].index = &#123; <span class="number">5</span>,<span class="number">4</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">4</span>].color = BLUE;</span><br><span class="line">triangles[<span class="number">5</span>].index = &#123; <span class="number">5</span>,<span class="number">7</span>,<span class="number">6</span> &#125;;</span><br><span class="line">triangles[<span class="number">5</span>].color = BLUE;</span><br><span class="line">triangles[<span class="number">6</span>].index = &#123; <span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line">triangles[<span class="number">6</span>].color = YELLOW;</span><br><span class="line">triangles[<span class="number">7</span>].index = &#123; <span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span> &#125;;</span><br><span class="line">triangles[<span class="number">7</span>].color = YELLOW;</span><br><span class="line">triangles[<span class="number">8</span>].index = &#123; <span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span> &#125;;</span><br><span class="line">triangles[<span class="number">8</span>].color = WHITE;</span><br><span class="line">triangles[<span class="number">9</span>].index = &#123; <span class="number">4</span>,<span class="number">1</span>,<span class="number">0</span> &#125;;</span><br><span class="line">triangles[<span class="number">9</span>].color = WHITE;</span><br><span class="line">triangles[<span class="number">10</span>].index = &#123; <span class="number">2</span>,<span class="number">6</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">10</span>].color = CYAN;</span><br><span class="line">triangles[<span class="number">11</span>].index = &#123; <span class="number">2</span>,<span class="number">7</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">11</span>].color = CYAN;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line">glm::mat4 model =<span class="built_in">GetModel</span>();</span><br><span class="line"><span class="comment">//构造视图矩阵</span></span><br><span class="line">glm::mat4 view = <span class="built_in">GetView</span>();</span><br><span class="line"><span class="comment">//构造透视投影矩阵</span></span><br><span class="line">glm::mat4 perspective =<span class="built_in">GetPerspective</span>();</span><br><span class="line"><span class="comment">//构造MVP矩阵</span></span><br><span class="line">glm::mat4 mvp = <span class="built_in">GetMVP</span>(model,view,perspective);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Vertices.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//对顶点进行MVP矩阵变换</span></span><br><span class="line">Vertices[i].position = mvp * Vertices[i].position;</span><br><span class="line"></span><br><span class="line"><span class="comment">//透视除法</span></span><br><span class="line"><span class="keyword">float</span> reciprocalW = <span class="number">1</span> / Vertices[i].position.w;</span><br><span class="line"></span><br><span class="line"><span class="comment">//屏幕映射</span></span><br><span class="line">Vertices[i].position.x = (Vertices[i].position.x * reciprocalW + <span class="number">1.0f</span>) * <span class="number">0.5f</span> * ScreenWidth;</span><br><span class="line">Vertices[i].position.y = (<span class="number">1.0f</span> - Vertices[i].position.y * reciprocalW) * <span class="number">0.5f</span> * ScreenHeight;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">RenderObject</span>(Vertices, triangles);</span><br><span class="line"></span><br><span class="line">_getch();</span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><p><img src="https://img-blog.csdnimg.cn/2861e646c80a4cd8aaabbb5c980a4263.gif#pic_center" alt="在这里插入图片描述"></p><h1 id="渲染多个线框立方体"><a href="#渲染多个线框立方体" class="headerlink" title="渲染多个线框立方体"></a>渲染多个线框立方体</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ScreenWidth 800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ScreenHeight 600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//插值</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">Interpolate</span><span class="params">(<span class="keyword">float</span> i0, <span class="keyword">float</span> d0, <span class="keyword">float</span> i1, <span class="keyword">float</span> d1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; values;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(i0 - i1) &lt; <span class="number">1e-6</span>)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d0);</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (d1 - d0) / (i1 - i0);</span><br><span class="line"><span class="keyword">float</span> d = d0;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = i0;i &lt; i1;i++)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d);</span><br><span class="line">d = d + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(P1.x - P0.x) &gt; glm::<span class="built_in">abs</span>(P1.y - P0.y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; ys = <span class="built_in">Interpolate</span>(P0.x, P0.y, P1.x, P1.y);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, ys[x - P0.x], color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; xs = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(xs[y - P0.y], y, color);</span><br><span class="line"><span class="comment">//Sleep(1);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线框三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawWireframeTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawLine</span>(P0, P1, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P1, P2, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P2, P0, color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画填充三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawFilledTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P1.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.y, P1.x, P2.y, P2.x);</span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P2.y, P2.x);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P2.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.y];x &lt; x_right[y - P0.y];x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vertex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec4 position;</span><br><span class="line"><span class="keyword">float</span> color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Triangle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec3 index;</span><br><span class="line">COLORREF color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">std::string name;</span><br><span class="line">std::vector&lt;Vertex&gt; vertices;</span><br><span class="line">std::vector&lt;Triangle&gt; triangles;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span>  <span class="title">Transform</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec3 translate;</span><br><span class="line">glm::vec4 rotation;</span><br><span class="line">glm::vec3 scale3D;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Instance</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">Model model;</span><br><span class="line">Transform transform;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Scene</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">std::vector&lt;Instance&gt; instances;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::vec4 <span class="title">ApplyTransform</span><span class="params">(glm::vec4 pos, Transform transform)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">glm::mat4 sm = glm::<span class="built_in">scale</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), transform.scale3D);</span><br><span class="line">glm::mat4 rm = glm::<span class="built_in">rotate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">radians</span>(transform.rotation.z), glm::<span class="built_in">vec3</span>(transform.rotation));</span><br><span class="line">glm::mat4 tm = glm::<span class="built_in">translate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), transform.translate);</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line">glm::mat4 model = tm * rm * sm;</span><br><span class="line"><span class="keyword">return</span> model * pos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画着色三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawShadedTriangle</span><span class="params">(Vertex P0, Vertex P1, Vertex P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">BYTE r = <span class="built_in">GetRValue</span>(color);</span><br><span class="line">BYTE g = <span class="built_in">GetGValue</span>(color);</span><br><span class="line">BYTE b = <span class="built_in">GetBValue</span>(color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P1.position.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P1.position.y, P1.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P1.position.y, P1.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line">h01.<span class="built_in">insert</span>(h01.<span class="built_in">end</span>(), h12.<span class="built_in">begin</span>(), h12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">h012</span><span class="params">(h01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_right;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line"></span><br><span class="line">h_left = h02;</span><br><span class="line">h_right = h012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line"></span><br><span class="line">h_left = h012;</span><br><span class="line">h_right = h02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.position.y; y &lt; P2.position.y; y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> x_l = x_left[y - P0.position.y];</span><br><span class="line"><span class="keyword">float</span> x_r = x_right[y - P0.position.y];</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_segment = <span class="built_in">Interpolate</span>(x_l, h_left[y - P0.position.y], x_r, h_right[y - P0.position.y]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.position.y]; x &lt; x_right[y - P0.position.y]; x++)</span><br><span class="line">&#123;</span><br><span class="line">COLORREF shaded_color = <span class="built_in">RGB</span>(r * h_segment[x - x_l], g * h_segment[x - x_l], b * h_segment[x - x_l]);</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, shaded_color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderTriangle</span><span class="params">(Triangle triangle, std::vector&lt;Vertex&gt; vertices)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawWireframeTriangle</span>(vertices[triangle.index.x].position,</span><br><span class="line">vertices[triangle.index.y].position,</span><br><span class="line">vertices[triangle.index.z].position,</span><br><span class="line">triangle.color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个物体</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderObject</span><span class="params">(std::vector&lt;Vertex&gt; vertices, std::vector&lt;Triangle&gt; triangles)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; triangles.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderTriangle</span>(triangles[i], vertices);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个实例</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderInstance</span><span class="params">(Instance instances)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Model model = instances.model;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; model.vertices.<span class="built_in">size</span>();i++)</span><br><span class="line">&#123;</span><br><span class="line">model.vertices[i].position = <span class="built_in">ApplyTransform</span>(model.vertices[i].position, instances.transform);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; model.triangles.<span class="built_in">size</span>();j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderTriangle</span>(model.triangles[j], model.vertices);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个场景</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderScene</span><span class="params">(Scene s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.instances.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderInstance</span>(s.instances[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetModel</span><span class="params">(glm::vec3 s = &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;, glm::vec4 r = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">60.0f</span> &#125;, glm::vec3 t = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span> &#125;)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">glm::mat4 sm = glm::<span class="built_in">scale</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), s);</span><br><span class="line">glm::mat4 rm = glm::<span class="built_in">rotate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">radians</span>(r.w), glm::<span class="built_in">vec3</span>(r));</span><br><span class="line">glm::mat4 tm = glm::<span class="built_in">translate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), t);</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line"><span class="keyword">return</span> tm * rm * sm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetView</span><span class="params">(glm::vec3 eye=glm::vec3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),glm::vec3 center=glm::vec3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>),glm::vec3 up=glm::vec3(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> glm::<span class="built_in">lookAt</span>(eye, center, up);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetPerspective</span><span class="params">(<span class="keyword">float</span> fov=glm::radians(<span class="number">90.0f</span>),<span class="keyword">float</span> aspect= ScreenWidth/ScreenHeight,<span class="keyword">float</span> n=<span class="number">0.1f</span>,<span class="keyword">float</span> f=<span class="number">100.0f</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> glm::<span class="built_in">perspective</span>(fov, aspect, n, f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetMVP</span><span class="params">(glm::mat4 model, glm::mat4 view, glm::mat4 perspective)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> perspective * view * model;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">initgraph</span>(ScreenWidth, ScreenHeight);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line">std::vector&lt;Vertex&gt; Vertices;</span><br><span class="line">Vertices.<span class="built_in">resize</span>(<span class="number">8</span>);</span><br><span class="line">Vertices[<span class="number">0</span>].position = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">1</span>].position = &#123; <span class="number">-1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">2</span>].position = &#123; <span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">3</span>].position = &#123; <span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">4</span>].position = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">5</span>].position = &#123; <span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">6</span>].position = &#123; <span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">7</span>].position = &#123; <span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">Vertices[<span class="number">0</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">1</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">2</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">3</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">4</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">5</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">6</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">7</span>].color = <span class="number">1.0f</span>;</span><br><span class="line"></span><br><span class="line">std::vector&lt;Triangle&gt; triangles;</span><br><span class="line">triangles.<span class="built_in">resize</span>(<span class="number">12</span>);</span><br><span class="line">triangles[<span class="number">0</span>].index = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span> &#125;;</span><br><span class="line">triangles[<span class="number">0</span>].color = RED;</span><br><span class="line">triangles[<span class="number">1</span>].index = &#123; <span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">1</span>].color = RED;</span><br><span class="line">triangles[<span class="number">2</span>].index = &#123; <span class="number">4</span>,<span class="number">0</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">2</span>].color = GREEN;</span><br><span class="line">triangles[<span class="number">3</span>].index = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">3</span>].color = GREEN;</span><br><span class="line">triangles[<span class="number">4</span>].index = &#123; <span class="number">5</span>,<span class="number">4</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">4</span>].color = BLUE;</span><br><span class="line">triangles[<span class="number">5</span>].index = &#123; <span class="number">5</span>,<span class="number">7</span>,<span class="number">6</span> &#125;;</span><br><span class="line">triangles[<span class="number">5</span>].color = BLUE;</span><br><span class="line">triangles[<span class="number">6</span>].index = &#123; <span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line">triangles[<span class="number">6</span>].color = YELLOW;</span><br><span class="line">triangles[<span class="number">7</span>].index = &#123; <span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span> &#125;;</span><br><span class="line">triangles[<span class="number">7</span>].color = YELLOW;</span><br><span class="line">triangles[<span class="number">8</span>].index = &#123; <span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span> &#125;;</span><br><span class="line">triangles[<span class="number">8</span>].color = WHITE;</span><br><span class="line">triangles[<span class="number">9</span>].index = &#123; <span class="number">4</span>,<span class="number">1</span>,<span class="number">0</span> &#125;;</span><br><span class="line">triangles[<span class="number">9</span>].color = WHITE;</span><br><span class="line">triangles[<span class="number">10</span>].index = &#123; <span class="number">2</span>,<span class="number">6</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">10</span>].color = CYAN;</span><br><span class="line">triangles[<span class="number">11</span>].index = &#123; <span class="number">2</span>,<span class="number">7</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">11</span>].color = CYAN;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line">glm::mat4 model =<span class="built_in">GetModel</span>();</span><br><span class="line"><span class="comment">//构造视图矩阵</span></span><br><span class="line">glm::mat4 view = <span class="built_in">GetView</span>();</span><br><span class="line"><span class="comment">//构造透视投影矩阵</span></span><br><span class="line">glm::mat4 perspective =<span class="built_in">GetPerspective</span>();</span><br><span class="line"><span class="comment">//构造MVP矩阵</span></span><br><span class="line">glm::mat4 mvp = <span class="built_in">GetMVP</span>(model,view,perspective);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Vertices.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//对顶点进行MVP矩阵变换</span></span><br><span class="line">Vertices[i].position = mvp * Vertices[i].position;</span><br><span class="line"></span><br><span class="line"><span class="comment">//透视除法</span></span><br><span class="line"><span class="keyword">float</span> reciprocalW = <span class="number">1</span> / Vertices[i].position.w;</span><br><span class="line"></span><br><span class="line"><span class="comment">//屏幕映射</span></span><br><span class="line">Vertices[i].position.x = (Vertices[i].position.x * reciprocalW + <span class="number">1.0f</span>) * <span class="number">0.5f</span> * ScreenWidth;</span><br><span class="line">Vertices[i].position.y = (<span class="number">1.0f</span> - Vertices[i].position.y * reciprocalW) * <span class="number">0.5f</span> * ScreenHeight;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Scene s;</span><br><span class="line">Instance instance1;</span><br><span class="line">instance1.model.name = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">instance1.model.vertices = Vertices;</span><br><span class="line">instance1.model.triangles = triangles;</span><br><span class="line">instance1.transform.translate = &#123; <span class="number">30</span>,<span class="number">0</span>,<span class="number">1</span> &#125;;</span><br><span class="line">instance1.transform.rotation = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0.0f</span> &#125;;</span><br><span class="line">instance1.transform.scale3D = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">Instance instance2;</span><br><span class="line">instance2.model.name = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">instance2.model.vertices = Vertices;</span><br><span class="line">instance2.model.triangles = triangles;</span><br><span class="line">instance2.transform.translate = &#123; <span class="number">-30</span>,<span class="number">0</span>,<span class="number">1</span> &#125;;</span><br><span class="line">instance2.transform.rotation = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-0.0f</span> &#125;;</span><br><span class="line">instance2.transform.scale3D = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">s.instances.<span class="built_in">push_back</span>(instance1);</span><br><span class="line">s.instances.<span class="built_in">push_back</span>(instance2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">RenderScene</span>(s);</span><br><span class="line"></span><br><span class="line">_getch();</span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><p><img src="https://img-blog.csdnimg.cn/5000664deadc4512bae347a9a022f66e.png" alt="在这里插入图片描述"></p><h1 id="渲染填充三角形"><a href="#渲染填充三角形" class="headerlink" title="渲染填充三角形"></a>渲染填充三角形</h1><p>咱们只需要把画线框三角形的方法换成画填充三角形的方法就可以画填充立方体了。   </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ScreenWidth 800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ScreenHeight 600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//插值</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">Interpolate</span><span class="params">(<span class="keyword">float</span> i0, <span class="keyword">float</span> d0, <span class="keyword">float</span> i1, <span class="keyword">float</span> d1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; values;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(i0 - i1) &lt; <span class="number">1e-6</span>)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d0);</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (d1 - d0) / (i1 - i0);</span><br><span class="line"><span class="keyword">float</span> d = d0;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = i0;i &lt; i1;i++)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d);</span><br><span class="line">d = d + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(P1.x - P0.x) &gt; glm::<span class="built_in">abs</span>(P1.y - P0.y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; ys = <span class="built_in">Interpolate</span>(P0.x, P0.y, P1.x, P1.y);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, ys[x - P0.x], color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; xs = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(xs[y - P0.y], y, color);</span><br><span class="line"><span class="comment">//Sleep(1);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线框三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawWireframeTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawLine</span>(P0, P1, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P1, P2, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P2, P0, color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画填充三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawFilledTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P1.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.y, P1.x, P2.y, P2.x);</span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P2.y, P2.x);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P2.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.y];x &lt; x_right[y - P0.y];x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vertex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec4 position;</span><br><span class="line"><span class="keyword">float</span> color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Triangle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec3 index;</span><br><span class="line">COLORREF color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">std::string name;</span><br><span class="line">std::vector&lt;Vertex&gt; vertices;</span><br><span class="line">std::vector&lt;Triangle&gt; triangles;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span>  <span class="title">Transform</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec3 translate;</span><br><span class="line">glm::vec4 rotation;</span><br><span class="line">glm::vec3 scale3D;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Instance</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">Model model;</span><br><span class="line">Transform transform;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Scene</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">std::vector&lt;Instance&gt; instances;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::vec4 <span class="title">ApplyTransform</span><span class="params">(glm::vec4 pos, Transform transform)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">glm::mat4 sm = glm::<span class="built_in">scale</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), transform.scale3D);</span><br><span class="line">glm::mat4 rm = glm::<span class="built_in">rotate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">radians</span>(transform.rotation.z), glm::<span class="built_in">vec3</span>(transform.rotation));</span><br><span class="line">glm::mat4 tm = glm::<span class="built_in">translate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), transform.translate);</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line">glm::mat4 model = tm * rm * sm;</span><br><span class="line"><span class="keyword">return</span> model * pos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画着色三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawShadedTriangle</span><span class="params">(Vertex P0, Vertex P1, Vertex P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">BYTE r = <span class="built_in">GetRValue</span>(color);</span><br><span class="line">BYTE g = <span class="built_in">GetGValue</span>(color);</span><br><span class="line">BYTE b = <span class="built_in">GetBValue</span>(color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P1.position.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P1.position.y, P1.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P1.position.y, P1.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line">h01.<span class="built_in">insert</span>(h01.<span class="built_in">end</span>(), h12.<span class="built_in">begin</span>(), h12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">h012</span><span class="params">(h01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_right;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line"></span><br><span class="line">h_left = h02;</span><br><span class="line">h_right = h012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line"></span><br><span class="line">h_left = h012;</span><br><span class="line">h_right = h02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.position.y; y &lt; P2.position.y; y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> x_l = x_left[y - P0.position.y];</span><br><span class="line"><span class="keyword">float</span> x_r = x_right[y - P0.position.y];</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_segment = <span class="built_in">Interpolate</span>(x_l, h_left[y - P0.position.y], x_r, h_right[y - P0.position.y]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.position.y]; x &lt; x_right[y - P0.position.y]; x++)</span><br><span class="line">&#123;</span><br><span class="line">COLORREF shaded_color = <span class="built_in">RGB</span>(r * h_segment[x - x_l], g * h_segment[x - x_l], b * h_segment[x - x_l]);</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, shaded_color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderTriangle</span><span class="params">(Triangle triangle, std::vector&lt;Vertex&gt; vertices)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawFilledTriangle</span>(vertices[triangle.index.x].position,</span><br><span class="line">vertices[triangle.index.y].position,</span><br><span class="line">vertices[triangle.index.z].position,</span><br><span class="line">triangle.color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个物体</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderObject</span><span class="params">(std::vector&lt;Vertex&gt; vertices, std::vector&lt;Triangle&gt; triangles)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; triangles.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderTriangle</span>(triangles[i], vertices);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个实例</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderInstance</span><span class="params">(Instance instances)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Model model = instances.model;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; model.vertices.<span class="built_in">size</span>();i++)</span><br><span class="line">&#123;</span><br><span class="line">model.vertices[i].position = <span class="built_in">ApplyTransform</span>(model.vertices[i].position, instances.transform);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; model.triangles.<span class="built_in">size</span>();j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderTriangle</span>(model.triangles[j], model.vertices);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//渲染一个场景</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RenderScene</span><span class="params">(Scene s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.instances.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">RenderInstance</span>(s.instances[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetModel</span><span class="params">(glm::vec3 s = &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;, glm::vec4 r = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">60.0f</span> &#125;, glm::vec3 t = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span> &#125;)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">glm::mat4 sm = glm::<span class="built_in">scale</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), s);</span><br><span class="line">glm::mat4 rm = glm::<span class="built_in">rotate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">radians</span>(r.w), glm::<span class="built_in">vec3</span>(r));</span><br><span class="line">glm::mat4 tm = glm::<span class="built_in">translate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), t);</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line"><span class="keyword">return</span> tm * rm * sm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetView</span><span class="params">(glm::vec3 eye=glm::vec3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),glm::vec3 center=glm::vec3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>),glm::vec3 up=glm::vec3(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> glm::<span class="built_in">lookAt</span>(eye, center, up);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetPerspective</span><span class="params">(<span class="keyword">float</span> fov=glm::radians(<span class="number">90.0f</span>),<span class="keyword">float</span> aspect= ScreenWidth/ScreenHeight,<span class="keyword">float</span> n=<span class="number">0.1f</span>,<span class="keyword">float</span> f=<span class="number">100.0f</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> glm::<span class="built_in">perspective</span>(fov, aspect, n, f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">glm::mat4 <span class="title">GetMVP</span><span class="params">(glm::mat4 model, glm::mat4 view, glm::mat4 perspective)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> perspective * view * model;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">initgraph</span>(ScreenWidth, ScreenHeight);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line">std::vector&lt;Vertex&gt; Vertices;</span><br><span class="line">Vertices.<span class="built_in">resize</span>(<span class="number">8</span>);</span><br><span class="line">Vertices[<span class="number">0</span>].position = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">1</span>].position = &#123; <span class="number">-1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">2</span>].position = &#123; <span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">3</span>].position = &#123; <span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">4</span>].position = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">5</span>].position = &#123; <span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">6</span>].position = &#123; <span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line">Vertices[<span class="number">7</span>].position = &#123; <span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span> ,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">Vertices[<span class="number">0</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">1</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">2</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">3</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">4</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">5</span>].color = <span class="number">0.5f</span>;</span><br><span class="line">Vertices[<span class="number">6</span>].color = <span class="number">1.0f</span>;</span><br><span class="line">Vertices[<span class="number">7</span>].color = <span class="number">1.0f</span>;</span><br><span class="line"></span><br><span class="line">std::vector&lt;Triangle&gt; triangles;</span><br><span class="line">triangles.<span class="built_in">resize</span>(<span class="number">12</span>);</span><br><span class="line">triangles[<span class="number">0</span>].index = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span> &#125;;</span><br><span class="line">triangles[<span class="number">0</span>].color = RED;</span><br><span class="line">triangles[<span class="number">1</span>].index = &#123; <span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">1</span>].color = RED;</span><br><span class="line">triangles[<span class="number">2</span>].index = &#123; <span class="number">4</span>,<span class="number">0</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">2</span>].color = GREEN;</span><br><span class="line">triangles[<span class="number">3</span>].index = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">3</span>].color = GREEN;</span><br><span class="line">triangles[<span class="number">4</span>].index = &#123; <span class="number">5</span>,<span class="number">4</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">4</span>].color = BLUE;</span><br><span class="line">triangles[<span class="number">5</span>].index = &#123; <span class="number">5</span>,<span class="number">7</span>,<span class="number">6</span> &#125;;</span><br><span class="line">triangles[<span class="number">5</span>].color = BLUE;</span><br><span class="line">triangles[<span class="number">6</span>].index = &#123; <span class="number">1</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line">triangles[<span class="number">6</span>].color = YELLOW;</span><br><span class="line">triangles[<span class="number">7</span>].index = &#123; <span class="number">1</span>,<span class="number">6</span>,<span class="number">2</span> &#125;;</span><br><span class="line">triangles[<span class="number">7</span>].color = YELLOW;</span><br><span class="line">triangles[<span class="number">8</span>].index = &#123; <span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span> &#125;;</span><br><span class="line">triangles[<span class="number">8</span>].color = WHITE;</span><br><span class="line">triangles[<span class="number">9</span>].index = &#123; <span class="number">4</span>,<span class="number">1</span>,<span class="number">0</span> &#125;;</span><br><span class="line">triangles[<span class="number">9</span>].color = WHITE;</span><br><span class="line">triangles[<span class="number">10</span>].index = &#123; <span class="number">2</span>,<span class="number">6</span>,<span class="number">7</span> &#125;;</span><br><span class="line">triangles[<span class="number">10</span>].color = CYAN;</span><br><span class="line">triangles[<span class="number">11</span>].index = &#123; <span class="number">2</span>,<span class="number">7</span>,<span class="number">3</span> &#125;;</span><br><span class="line">triangles[<span class="number">11</span>].color = CYAN;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line">glm::mat4 model =<span class="built_in">GetModel</span>();</span><br><span class="line"><span class="comment">//构造视图矩阵</span></span><br><span class="line">glm::mat4 view = <span class="built_in">GetView</span>();</span><br><span class="line"><span class="comment">//构造透视投影矩阵</span></span><br><span class="line">glm::mat4 perspective =<span class="built_in">GetPerspective</span>();</span><br><span class="line"><span class="comment">//构造MVP矩阵</span></span><br><span class="line">glm::mat4 mvp = <span class="built_in">GetMVP</span>(model,view,perspective);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Vertices.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//对顶点进行MVP矩阵变换</span></span><br><span class="line">Vertices[i].position = mvp * Vertices[i].position;</span><br><span class="line"></span><br><span class="line"><span class="comment">//透视除法</span></span><br><span class="line"><span class="keyword">float</span> reciprocalW = <span class="number">1</span> / Vertices[i].position.w;</span><br><span class="line"></span><br><span class="line"><span class="comment">//屏幕映射</span></span><br><span class="line">Vertices[i].position.x = (Vertices[i].position.x * reciprocalW + <span class="number">1.0f</span>) * <span class="number">0.5f</span> * ScreenWidth;</span><br><span class="line">Vertices[i].position.y = (<span class="number">1.0f</span> - Vertices[i].position.y * reciprocalW) * <span class="number">0.5f</span> * ScreenHeight;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Scene s;</span><br><span class="line">Instance instance1;</span><br><span class="line">instance1.model.name = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">instance1.model.vertices = Vertices;</span><br><span class="line">instance1.model.triangles = triangles;</span><br><span class="line">instance1.transform.translate = &#123; <span class="number">30</span>,<span class="number">0</span>,<span class="number">1</span> &#125;;</span><br><span class="line">instance1.transform.rotation = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0.0f</span> &#125;;</span><br><span class="line">instance1.transform.scale3D = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">Instance instance2;</span><br><span class="line">instance2.model.name = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">instance2.model.vertices = Vertices;</span><br><span class="line">instance2.model.triangles = triangles;</span><br><span class="line">instance2.transform.translate = &#123; <span class="number">-30</span>,<span class="number">0</span>,<span class="number">1</span> &#125;;</span><br><span class="line">instance2.transform.rotation = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-0.0f</span> &#125;;</span><br><span class="line">instance2.transform.scale3D = &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line">s.instances.<span class="built_in">push_back</span>(instance1);</span><br><span class="line">s.instances.<span class="built_in">push_back</span>(instance2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">RenderScene</span>(s);</span><br><span class="line"></span><br><span class="line">_getch();</span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><img src="https://img-blog.csdnimg.cn/dd8477ced8734e86a006ca243a2167fd.gif#pic_center" alt="在这里插入图片描述"></p><p>为什么会出现这种情况？因为我们并没有处理物体的深度问题，如果首先绘制了近处的物体，那么后面绘制远处的物体的时候就会覆盖掉前面绘制的近处的物体。这个时候就需要深度缓存出现了，我们把每一个像素的深度保存起来，到最后就只绘制最近处的像素。</p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><blockquote><p>如果你遇到了问题可以在评论区告诉我哦<br><a href="https://github.com/yang-shuohao/Renderer">项目地址</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 光栅化 </tag>
            
            <tag> 渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光栅化渲染器：坐标变换</title>
      <link href="/posts/41dd1dda.html"/>
      <url>/posts/41dd1dda.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>坐标变换是渲染管线里面很重要的一个过程，已经有很多书籍和文章对此进行了讲解，我这边就不重复讲解了。虽然我们可以借助glm等数学库非常轻松的构造MVP矩阵，但是，我还是推荐大家去了解Model矩阵是如何构造出来的，为什么是按照SRT顺序构造而不是其他顺序呢？还有View矩阵是如何构造出来的，以及构造View矩阵有几种方法？各自有什么区别呢？还有比较复杂的投影矩阵是如何构造出来的？以及为什么需要这么多矩阵呢？等等都推荐大家去了解清楚。</p><h1 id="构造MVP矩阵"><a href="#构造MVP矩阵" class="headerlink" title="构造MVP矩阵"></a>构造MVP矩阵</h1><p>因为我们使用了glm，所以构造起来还是比较简单的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">glm::mat4 sm = glm::<span class="built_in">scale</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">vec3</span>(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>));</span><br><span class="line">glm::mat4 rm = glm::<span class="built_in">rotate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">radians</span>(<span class="number">0.0f</span>), glm::<span class="built_in">vec3</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">glm::mat4 tm = glm::<span class="built_in">translate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">vec3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line">glm::mat4 model = tm * rm * sm;</span><br><span class="line"><span class="comment">//构造视图矩阵</span></span><br><span class="line">glm::mat4 view = glm::<span class="built_in">lookAt</span>(glm::<span class="built_in">vec3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), glm::<span class="built_in">vec3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), glm::<span class="built_in">vec3</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line"><span class="comment">//构造透视投影矩阵</span></span><br><span class="line">glm::mat4 perspective = glm::<span class="built_in">perspective</span>(glm::<span class="built_in">radians</span>(<span class="number">90.0f</span>), (<span class="keyword">float</span>)ScreenWidth / (<span class="keyword">float</span>)ScreenHeight, <span class="number">0.1f</span>, <span class="number">100.0f</span>);</span><br><span class="line"><span class="comment">//构造MVP矩阵</span></span><br><span class="line">glm::mat4 mvp = perspective * view * model;</span><br><span class="line"><span class="comment">//对顶点进行MVP矩阵变换</span></span><br><span class="line">v0.position = mvp * v0.position;</span><br><span class="line">v1.position = mvp * v1.position;</span><br><span class="line">v2.position = mvp * v2.position;</span><br></pre></td></tr></table></figure><h1 id="透视除法"><a href="#透视除法" class="headerlink" title="透视除法"></a>透视除法</h1><p>当我们把坐标乘以MVP矩阵以后就变换到了齐次裁剪坐标了，我们需要进行透视除法，把第四个w分量化为1，也就是都除以w，这样就把齐次坐标化为了笛卡尔坐标了（透视除法放在屏幕映射一起计算了）。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//透视除法</span></span><br><span class="line"><span class="keyword">float</span> reciprocalW0 = <span class="number">1</span> / v0.position.w;</span><br><span class="line"><span class="keyword">float</span> reciprocalW1 = <span class="number">1</span> / v1.position.w;</span><br><span class="line"><span class="keyword">float</span> reciprocalW2 = <span class="number">1</span> / v2.position.w;</span><br></pre></td></tr></table></figure><h1 id="屏幕映射"><a href="#屏幕映射" class="headerlink" title="屏幕映射"></a>屏幕映射</h1><p>当我们进行透视除法以后，我们的坐标范围都在[-1,1]之间，对于x来说，我们只需要先加1，把范围变换到[0,2]，然后除以2得到[0,1]范围，这个时候只需要在乘以屏幕宽度就可以了。而对于y来说就不一样了，对于y来说我们需要把轴反向（屏幕坐标原点在左上角，y轴正方向朝下），然后加1，把范围变换到[0,2]，然后除以2得到[0,1]范围，这个时候在乘以屏幕宽度就可以了。    </p><p><img src="https://img-blog.csdnimg.cn/3b04fc70b4d34c73a060f166e2d8fd06.png" alt="在这里插入图片描述">   </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//屏幕映射</span></span><br><span class="line">v0.position.x = (v0.position.x * reciprocalW0 + <span class="number">1.0f</span>) * <span class="number">0.5f</span> * ScreenWidth;</span><br><span class="line">v0.position.y = (<span class="number">1.0f</span> - v0.position.y * reciprocalW0) * <span class="number">0.5f</span> * ScreenHeight;</span><br><span class="line">v1.position.x = (v1.position.x * reciprocalW1 + <span class="number">1.0f</span>) * <span class="number">0.5f</span> * ScreenWidth;</span><br><span class="line">v1.position.y = (<span class="number">1.0f</span> - v1.position.y * reciprocalW1) * <span class="number">0.5f</span> * ScreenHeight;</span><br><span class="line">v2.position.x = (v2.position.x * reciprocalW2 + <span class="number">1.0f</span>) * <span class="number">0.5f</span> * ScreenWidth;</span><br><span class="line">v2.position.y = (<span class="number">1.0f</span> - v2.position.y * reciprocalW2) * <span class="number">0.5f</span> * ScreenHeight;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//插值</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">Interpolate</span><span class="params">(<span class="keyword">float</span> i0, <span class="keyword">float</span> d0, <span class="keyword">float</span> i1, <span class="keyword">float</span> d1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; values;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(i0 - i1) &lt; <span class="number">1e-6</span>)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d0);</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (d1 - d0) / (i1 - i0);</span><br><span class="line"><span class="keyword">float</span> d = d0;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = i0;i &lt; i1;i++)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d);</span><br><span class="line">d = d + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(P1.x - P0.x) &gt; glm::<span class="built_in">abs</span>(P1.y - P0.y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; ys = <span class="built_in">Interpolate</span>(P0.x, P0.y, P1.x, P1.y);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, ys[x - P0.x], color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; xs = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(xs[y - P0.y], y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线框三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawWireframeTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawLine</span>(P0, P1, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P1, P2, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P2, P0, color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画填充三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawFilledTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P1.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.y, P1.x, P2.y, P2.x);</span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P2.y, P2.x);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P2.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.y];x &lt; x_right[y - P0.y];x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vertex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec4 position;</span><br><span class="line"><span class="keyword">float</span> color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画着色三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawShadedTriangle</span><span class="params">(Vertex P0, Vertex P1, Vertex P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">BYTE r = <span class="built_in">GetRValue</span>(color);</span><br><span class="line">BYTE g = <span class="built_in">GetGValue</span>(color);</span><br><span class="line">BYTE b = <span class="built_in">GetBValue</span>(color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P1.position.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P1.position.y, P1.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P1.position.y, P1.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line">h01.<span class="built_in">insert</span>(h01.<span class="built_in">end</span>(), h12.<span class="built_in">begin</span>(), h12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">h012</span><span class="params">(h01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_right;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line"></span><br><span class="line">h_left = h02;</span><br><span class="line">h_right = h012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line"></span><br><span class="line">h_left = h012;</span><br><span class="line">h_right = h02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.position.y; y &lt; P2.position.y; y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> x_l = x_left[y - P0.position.y];</span><br><span class="line"><span class="keyword">float</span> x_r = x_right[y - P0.position.y];</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_segment = <span class="built_in">Interpolate</span>(x_l, h_left[y - P0.position.y], x_r, h_right[y - P0.position.y]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.position.y]; x &lt; x_right[y - P0.position.y]; x++)</span><br><span class="line">&#123;</span><br><span class="line">COLORREF shaded_color = <span class="built_in">RGB</span>(r * h_segment[x - x_l], g * h_segment[x - x_l], b * h_segment[x - x_l]);</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, shaded_color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ScreenWidth = <span class="number">800</span>;</span><br><span class="line"><span class="keyword">int</span> ScreenHeight = <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">initgraph</span>(ScreenWidth, ScreenHeight);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line">Vertex v0;</span><br><span class="line">v0.position = &#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span> ,<span class="number">0.0f</span>,<span class="number">1.0f</span> &#125;;</span><br><span class="line">v0.color = <span class="number">1.0f</span>;</span><br><span class="line">Vertex v1;</span><br><span class="line">v1.position = &#123; <span class="number">0.5f</span>, <span class="number">-0.5f</span>,<span class="number">0.0f</span>,<span class="number">1.0f</span> &#125;;</span><br><span class="line">v1.color = <span class="number">0.5f</span>;</span><br><span class="line">Vertex v2;</span><br><span class="line">v2.position = &#123; <span class="number">0.0f</span>, <span class="number">0.5f</span> ,<span class="number">0.0f</span>,<span class="number">1.0f</span> &#125;;</span><br><span class="line">v2.color = <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">glm::mat4 sm = glm::<span class="built_in">scale</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">vec3</span>(<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>));</span><br><span class="line">glm::mat4 rm = glm::<span class="built_in">rotate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">radians</span>(<span class="number">0.0f</span>), glm::<span class="built_in">vec3</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">glm::mat4 tm = glm::<span class="built_in">translate</span>(glm::<span class="built_in">mat4</span>(<span class="number">1.0f</span>), glm::<span class="built_in">vec3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line"><span class="comment">//构造模型矩阵</span></span><br><span class="line">glm::mat4 model = tm * rm * sm;</span><br><span class="line"><span class="comment">//构造视图矩阵</span></span><br><span class="line">glm::mat4 view = glm::<span class="built_in">lookAt</span>(glm::<span class="built_in">vec3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), glm::<span class="built_in">vec3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), glm::<span class="built_in">vec3</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line"><span class="comment">//构造透视投影矩阵</span></span><br><span class="line">glm::mat4 perspective = glm::<span class="built_in">perspective</span>(glm::<span class="built_in">radians</span>(<span class="number">90.0f</span>), (<span class="keyword">float</span>)ScreenWidth / (<span class="keyword">float</span>)ScreenHeight, <span class="number">0.1f</span>, <span class="number">100.0f</span>);</span><br><span class="line"><span class="comment">//构造MVP矩阵</span></span><br><span class="line">glm::mat4 mvp = perspective * view * model;</span><br><span class="line"><span class="comment">//对顶点进行MVP矩阵变换</span></span><br><span class="line">v0.position = mvp * v0.position;</span><br><span class="line">v1.position = mvp * v1.position;</span><br><span class="line">v2.position = mvp * v2.position;</span><br><span class="line"></span><br><span class="line"><span class="comment">//透视除法</span></span><br><span class="line"><span class="keyword">float</span> reciprocalW0 = <span class="number">1</span> / v0.position.w;</span><br><span class="line"><span class="keyword">float</span> reciprocalW1 = <span class="number">1</span> / v1.position.w;</span><br><span class="line"><span class="keyword">float</span> reciprocalW2 = <span class="number">1</span> / v2.position.w;</span><br><span class="line"></span><br><span class="line"><span class="comment">//屏幕映射</span></span><br><span class="line">v0.position.x = (v0.position.x * reciprocalW0 + <span class="number">1.0f</span>) * <span class="number">0.5f</span> * ScreenWidth;</span><br><span class="line">v0.position.y = (<span class="number">1.0f</span> - v0.position.y * reciprocalW0) * <span class="number">0.5f</span> * ScreenHeight;</span><br><span class="line">v1.position.x = (v1.position.x * reciprocalW1 + <span class="number">1.0f</span>) * <span class="number">0.5f</span> * ScreenWidth;</span><br><span class="line">v1.position.y = (<span class="number">1.0f</span> - v1.position.y * reciprocalW1) * <span class="number">0.5f</span> * ScreenHeight;</span><br><span class="line">v2.position.x = (v2.position.x * reciprocalW2 + <span class="number">1.0f</span>) * <span class="number">0.5f</span> * ScreenWidth;</span><br><span class="line">v2.position.y = (<span class="number">1.0f</span> - v2.position.y * reciprocalW2) * <span class="number">0.5f</span> * ScreenHeight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">DrawShadedTriangle</span>(v0, v1, v2, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">_getch();</span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><p><img src="https://img-blog.csdnimg.cn/eb3f05c5ded44c5da6c602c07101eb97.png" alt="在这里插入图片描述"></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><blockquote><p>如果你遇到了问题可以在评论区告诉我哦<br><a href="https://github.com/yang-shuohao/Renderer">项目地址</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 光栅化 </tag>
            
            <tag> 渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光栅化渲染器：对三角形着色</title>
      <link href="/posts/b1b304e5.html"/>
      <url>/posts/b1b304e5.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一篇文章咱们已经画出来了一个纯色的三角形，那么今天我们画一个非纯色的三角形。</p><h1 id="对三角形着色"><a href="#对三角形着色" class="headerlink" title="对三角形着色"></a>对三角形着色</h1><p>其实对三角形着色很简单，咱们只需要给予不同的顶点不同的颜色值，然后进行插值就可以了，废话不多说直接看代码。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//插值</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">Interpolate</span><span class="params">(<span class="keyword">float</span> i0, <span class="keyword">float</span> d0, <span class="keyword">float</span> i1, <span class="keyword">float</span> d1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; values;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(i0 - i1) &lt; <span class="number">1e-6</span>)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d0);</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (d1 - d0) / (i1 - i0);</span><br><span class="line"><span class="keyword">float</span> d = d0;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = i0;i &lt; i1;i++)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d);</span><br><span class="line">d = d + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(P1.x - P0.x) &gt; glm::<span class="built_in">abs</span>(P1.y - P0.y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; ys = <span class="built_in">Interpolate</span>(P0.x, P0.y, P1.x, P1.y);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, ys[x - P0.x], color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; xs = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(xs[y - P0.y], y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线框三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawWireframeTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawLine</span>(P0, P1, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P1, P2, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P2, P0, color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画填充三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawFilledTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P1.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.y, P1.x, P2.y, P2.x);</span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P2.y, P2.x);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P2.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.y];x &lt; x_right[y - P0.y];x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vertex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">glm::vec3 position;</span><br><span class="line"><span class="keyword">float</span> color;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画着色三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawShadedTriangle</span><span class="params">(Vertex P0, Vertex P1, Vertex P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">BYTE r = <span class="built_in">GetRValue</span>(color);</span><br><span class="line">BYTE g = <span class="built_in">GetGValue</span>(color);</span><br><span class="line">BYTE b = <span class="built_in">GetBValue</span>(color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P0.position.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.position.y &lt; P1.position.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P1.position.y, P1.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h01 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P1.position.y, P1.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h12 = <span class="built_in">Interpolate</span>(P1.position.y, P1.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.position.x, P2.position.y, P2.position.x);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h02 = <span class="built_in">Interpolate</span>(P0.position.y, P0.color, P2.position.y, P2.color);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line">h01.<span class="built_in">insert</span>(h01.<span class="built_in">end</span>(), h12.<span class="built_in">begin</span>(), h12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">h012</span><span class="params">(h01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_right;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line"></span><br><span class="line">h_left = h02;</span><br><span class="line">h_right = h012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line"></span><br><span class="line">h_left = h012;</span><br><span class="line">h_right = h02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.position.y; y &lt; P2.position.y; y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> x_l = x_left[y - P0.position.y];</span><br><span class="line"><span class="keyword">float</span> x_r = x_right[y - P0.position.y];</span><br><span class="line"></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; h_segment = <span class="built_in">Interpolate</span>(x_l, h_left[y - P0.position.y], x_r, h_right[y - P0.position.y]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.position.y]; x &lt; x_right[y - P0.position.y]; x++)</span><br><span class="line">&#123;</span><br><span class="line">COLORREF shaded_color = <span class="built_in">RGB</span>(r * h_segment[x - x_l], g * h_segment[x - x_l], b * h_segment[x - x_l]);</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, shaded_color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ScreenWidth = <span class="number">800</span>;</span><br><span class="line"><span class="keyword">int</span> ScreenHeight = <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">initgraph</span>(ScreenWidth, ScreenHeight);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line">Vertex v0;</span><br><span class="line">v0.position = &#123; <span class="number">200</span>, <span class="number">200</span> ,<span class="number">0</span> &#125;;</span><br><span class="line">v0.color = <span class="number">1.0f</span>;</span><br><span class="line">Vertex v1;</span><br><span class="line">v1.position = &#123; <span class="number">200</span>, <span class="number">500</span> ,<span class="number">0</span> &#125;;</span><br><span class="line">v1.color = <span class="number">0.5f</span>;</span><br><span class="line">Vertex v2;</span><br><span class="line">v2.position = &#123; <span class="number">350</span>, <span class="number">350</span> ,<span class="number">0</span> &#125;;</span><br><span class="line">v2.color = <span class="number">0.0f</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">DrawShadedTriangle</span>(v0, v1, v2, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">// 按任意键继续</span></span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果   </p><p><img src="https://img-blog.csdnimg.cn/63c1c22138ba411f9d9666d52822da86.png" alt="在这里插入图片描述"></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><blockquote><p>如果你遇到了问题可以在评论区告诉我哦<br><a href="https://github.com/yang-shuohao/Renderer">项目地址</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 光栅化 </tag>
            
            <tag> 渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光栅化渲染器：填充三角形</title>
      <link href="/posts/43727ade.html"/>
      <url>/posts/43727ade.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>为什么三角形是实时渲染的首选多边形？因为它们具有以下理想的特性：</p><ul><li>三角形是最简单的多边形类型。少于三个顶点就没法组成一个多边形。</li><li>三角形始终是平面的。任何具有四个或更多顶点的多边形都没有这个属性，因为前三个顶点定义了一个平面，第四个顶点可能位于该平面的上方或下方。</li><li> 三角形在大多数类型的变换下仍然是三角形，包括仿射变换和透视投影。</li><li>几乎所有商业图形加速硬件都是围绕三角形光栅化设计的。</li></ul><h1 id="绘制线框三角形"><a href="#绘制线框三角形" class="headerlink" title="绘制线框三角形"></a>绘制线框三角形</h1><p>上篇文章我们实现了画线功能，现在可以轻而易举的画一个三角形了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//插值</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">Interpolate</span><span class="params">(<span class="keyword">float</span> i0, <span class="keyword">float</span> d0, <span class="keyword">float</span> i1, <span class="keyword">float</span> d1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; values;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(i0 - i1)&lt;<span class="number">1e-6</span>)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d0);</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (d1 - d0) / (i1 - i0);</span><br><span class="line"><span class="keyword">float</span> d = d0;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = i0;i &lt; i1;i++)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d);</span><br><span class="line">d = d + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(P1.x-P0.x) &gt; glm::<span class="built_in">abs</span>(P1.y-P0.y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; ys = <span class="built_in">Interpolate</span>(P0.x,P0.y,P1.x,P1.y);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, ys[x-P0.x], color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; xs = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(xs[y - P0.y], y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线框三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawWireframeTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">DrawLine</span>(P0, P1, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P1, P2, color);</span><br><span class="line"><span class="built_in">DrawLine</span>(P2, P0, color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画填充三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawFilledTriangle</span><span class="params">(glm::vec2 P0, glm::vec2 P1, glm::vec2 P2, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//排序顶点 P0.y &lt;= P1.y &lt;= P2.y</span></span><br><span class="line"><span class="keyword">if</span> (P1.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P1, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P0.y) &#123; std::<span class="built_in">swap</span>(P2, P0); &#125;</span><br><span class="line"><span class="keyword">if</span> (P2.y &lt; P1.y) &#123; std::<span class="built_in">swap</span>(P2, P1); &#125;</span><br><span class="line">              </span><br><span class="line"><span class="comment">//------------------P2|\</span></span><br><span class="line"><span class="comment">//--------------------| \</span></span><br><span class="line"><span class="comment">//--------------------|  \ P1</span></span><br><span class="line"><span class="comment">//--------------------|  /</span></span><br><span class="line"><span class="comment">//--------------------| /</span></span><br><span class="line"><span class="comment">//------------------P0|/     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//P0P1边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x01 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="comment">//P1P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x12 = <span class="built_in">Interpolate</span>(P1.y, P1.x, P2.y, P2.x);</span><br><span class="line"><span class="comment">//P0P2边x坐标数组</span></span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x02 = <span class="built_in">Interpolate</span>(P0.y, P0.x, P2.y, P2.x);</span><br><span class="line"></span><br><span class="line"><span class="comment">//【注意】去掉重复坐标，P0P1和P1P2重复了P1</span></span><br><span class="line"><span class="comment">//x01.pop_back();</span></span><br><span class="line"><span class="comment">//x012=x01+x12 x012代表P0P1和P1P2两条边的x坐标数组</span></span><br><span class="line">x01.<span class="built_in">insert</span>(x01.<span class="built_in">end</span>(), x12.<span class="built_in">begin</span>(), x12.<span class="built_in">end</span>());</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">x012</span><span class="params">(x01)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> m = glm::<span class="built_in">floor</span>(x012.<span class="built_in">size</span>() / <span class="number">2</span>);</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_left;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; x_right;</span><br><span class="line"><span class="comment">//-------第一种情况</span></span><br><span class="line"><span class="comment">//---------P2|\</span></span><br><span class="line"><span class="comment">//-----------| \</span></span><br><span class="line"><span class="comment">//-----------|  \ P1</span></span><br><span class="line"><span class="comment">//-----------|  /</span></span><br><span class="line"><span class="comment">//-----------| /</span></span><br><span class="line"><span class="comment">//---------P0|/</span></span><br><span class="line"><span class="keyword">if</span> (x02[m] &lt; x012[m])</span><br><span class="line">&#123;</span><br><span class="line">x_left = x02;</span><br><span class="line">x_right = x012;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------第二种情况</span></span><br><span class="line"><span class="comment">//----------/|P2</span></span><br><span class="line"><span class="comment">//---------/ | </span></span><br><span class="line"><span class="comment">//------p1/  | </span></span><br><span class="line"><span class="comment">//--------\ |</span></span><br><span class="line"><span class="comment">//---------\ |</span></span><br><span class="line"><span class="comment">//----------\|P0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x_left = x012;</span><br><span class="line">x_right = x02;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从上到下，从左到右填充</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P2.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = x_left[y - P0.y];x &lt; x_right[y - P0.y];x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">initgraph</span>(<span class="number">640</span>, <span class="number">640</span>);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line"><span class="function">glm::vec2 <span class="title">P0</span><span class="params">(<span class="number">200</span>, <span class="number">200</span>)</span></span>;</span><br><span class="line"><span class="function">glm::vec2 <span class="title">P1</span><span class="params">(<span class="number">200</span>, <span class="number">500</span>)</span></span>;</span><br><span class="line"><span class="function">glm::vec2 <span class="title">P2</span><span class="params">(<span class="number">350</span>, <span class="number">350</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">DrawFilledTriangle</span>(P0, P1, P2, RED);</span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">// 按任意键继续</span></span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果   </p><p><img src="https://img-blog.csdnimg.cn/55269d5cf3c048388984aa15b7f19c1f.png" alt="在这里插入图片描述"></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><blockquote><p>如果你遇到了问题可以在评论区告诉我哦<br><a href="https://github.com/yang-shuohao/Renderer">项目地址</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 光栅化 </tag>
            
            <tag> 渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光栅化渲染器：画线</title>
      <link href="/posts/a16148d3.html"/>
      <url>/posts/a16148d3.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="直线方程"><a href="#直线方程" class="headerlink" title="直线方程"></a>直线方程</h1><p>假设在屏幕上面有两个点，P0(x0,y0)和P1(x1,y1)，那么我们如何画一条从P0到P1的线？其实很简单，在P0P1这条线上的点P都满足一个方程：</p><blockquote><p>P = P0 + t(P1 - P0)</p></blockquote><p>转化为：</p><blockquote><p>x = x0 + t(x1 - x0)<br>y = y0 + t(y1 - y0)     </p></blockquote><p>进一步化简第一个方程，求得：</p><blockquote><p>t=(x - x0) / (x1 - x0)</p></blockquote><p>把t带入第二个方程，可得：</p><blockquote><p>y = y0 + (x - x0) / (x1 - x0) * (y1 - y0)</p></blockquote><p>因为(y1 - y0) / (x1 - x0)是一个常量，咱们取为a（其实就是线的斜率），可得：</p><blockquote><p>y = y0 + a * (x - x0)</p></blockquote><p>进一步化简，可得：</p><blockquote><p>y = ax + (y0 -ax0)</p></blockquote><p>y0 - ax0其实就是线的截距，咱们取为b，可得：</p><blockquote><p>y = ax + b</p></blockquote><p>这个方程就是大家熟悉的直线方程了。</p><h1 id="画线"><a href="#画线" class="headerlink" title="画线"></a>画线</h1><ul><li>第一种画线方法</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine1</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> b = P0.y - a * P0.x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x=P0.x;x&lt;P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = a * x + b;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">initgraph</span>(<span class="number">640</span>, <span class="number">640</span>);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">DrawLine1</span>(glm::<span class="built_in">vec2</span>(<span class="number">100</span>,<span class="number">100</span>), glm::<span class="built_in">vec2</span>(<span class="number">400</span>,<span class="number">400</span>), RED);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">// 按任意键继续</span></span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><img src="https://img-blog.csdnimg.cn/365c158081244335932e26cf3f0098a6.png" alt="在这里插入图片描述"><br>其实这个方法画出来的线是无法画垂直的线的，因为求a的时候P1.x-P0.x会等于零，除数是不能为零的（因为是浮点数所以可能并不会报错说进行了除零操作）。</p><ul><li>第二种画线方法<blockquote><p>y(x) = ax + b<br>y(x+1) =a * (x + 1) + b</p></blockquote></li></ul><p>对第二个方程进行变形，可得：</p><blockquote><p>y(x+1) = ax + a + b<br>y(x+1) = (ax+b) + a<br>y(x+1) = y(x) + a</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine1</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> b = P0.y - a * P0.x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x=P0.x;x&lt;P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = a * x + b;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine2</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> y = P0.y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">y = y + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">initgraph</span>(<span class="number">640</span>, <span class="number">640</span>);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">DrawLine2</span>(glm::<span class="built_in">vec2</span>(<span class="number">100</span>,<span class="number">100</span>), glm::<span class="built_in">vec2</span>(<span class="number">300</span>,<span class="number">100</span>), RED);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">// 按任意键继续</span></span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><img src="https://img-blog.csdnimg.cn/2fe9481ed83f4c9da27b24dd39e938d9.png" alt="在这里插入图片描述"><br>第二种画线方法比第一种要快一点，不过和第一种一样也不能画垂线。</p><ul><li>第三种画线<br>前面两种都是只能从左到右画线，而不能从右到左。要想摆脱这种限制也很简单，只需要交换一下顺序就可以了。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine1</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> b = P0.y - a * P0.x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x=P0.x;x&lt;P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = a * x + b;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine2</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> y = P0.y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">y = y + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine3</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> y = P0.y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">y = y + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">initgraph</span>(<span class="number">640</span>, <span class="number">640</span>);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">DrawLine3</span>(glm::<span class="built_in">vec2</span>(<span class="number">100</span>,<span class="number">100</span>), glm::<span class="built_in">vec2</span>(<span class="number">300</span>,<span class="number">100</span>), RED);</span><br><span class="line"><span class="built_in">DrawLine3</span>(glm::<span class="built_in">vec2</span>(<span class="number">500</span>, <span class="number">200</span>), glm::<span class="built_in">vec2</span>(<span class="number">100</span>, <span class="number">200</span>), RED);</span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">// 按任意键继续</span></span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><img src="https://img-blog.csdnimg.cn/a4984873841b435482298f8fb977ede0.png" alt="在这里插入图片描述"></p><ul><li>第四种画线方法<br>其实如果想画垂线的话，也很容易，只需要把x和y换一下,只不过又不能画水平线了。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine1</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> b = P0.y - a * P0.x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x=P0.x;x&lt;P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = a * x + b;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine2</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> y = P0.y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">y = y + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine3</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> y = P0.y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">y = y + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine4</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (P1.x - P0.x) / (P1.y - P0.y);</span><br><span class="line"><span class="keyword">float</span> x = P0.x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">x = x + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">initgraph</span>(<span class="number">640</span>, <span class="number">640</span>);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">DrawLine3</span>(glm::<span class="built_in">vec2</span>(<span class="number">100</span>,<span class="number">100</span>), glm::<span class="built_in">vec2</span>(<span class="number">500</span>,<span class="number">100</span>), RED);</span><br><span class="line"><span class="built_in">DrawLine4</span>(glm::<span class="built_in">vec2</span>(<span class="number">100</span>, <span class="number">100</span>), glm::<span class="built_in">vec2</span>(<span class="number">100</span>, <span class="number">500</span>), GREEN);</span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">// 按任意键继续</span></span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><img src="https://img-blog.csdnimg.cn/48a03d6f9f7e48fe8fe471e0f5fa4290.png" alt="在这里插入图片描述"></p><ul><li>第五种画线方法<br>要想画任何斜率的线其实只需要把上面的结合在一起就可以了。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine1</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> b = P0.y - a * P0.x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x=P0.x;x&lt;P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = a * x + b;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine2</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> y = P0.y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">y = y + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine3</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> y = P0.y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">y = y + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine4</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (P1.x - P0.x) / (P1.y - P0.y);</span><br><span class="line"><span class="keyword">float</span> x = P0.x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">x = x + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine5</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> dx = P1.x - P0.x;</span><br><span class="line"><span class="keyword">float</span> dy = P1.y - P0.y;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(dx) &gt; glm::<span class="built_in">abs</span>(dy))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = dy / dx;</span><br><span class="line"><span class="keyword">float</span> y = P0.y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">y = y + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = dx / dy;</span><br><span class="line"><span class="keyword">float</span> x = P0.x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">x = x + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">initgraph</span>(<span class="number">640</span>, <span class="number">640</span>);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">DrawLine5</span>(glm::<span class="built_in">vec2</span>(<span class="number">100</span>,<span class="number">100</span>), glm::<span class="built_in">vec2</span>(<span class="number">500</span>,<span class="number">100</span>), RED);</span><br><span class="line"><span class="built_in">DrawLine5</span>(glm::<span class="built_in">vec2</span>(<span class="number">100</span>, <span class="number">100</span>), glm::<span class="built_in">vec2</span>(<span class="number">100</span>, <span class="number">500</span>), GREEN);</span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">// 按任意键继续</span></span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><img src="https://img-blog.csdnimg.cn/aac777f1be9f411fb8944862cc869490.png" alt="在这里插入图片描述"></p><ul><li>第六种画线方法<br>这次我们在上一次的基础上添加一个插值函数。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine1</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> b = P0.y - a * P0.x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x=P0.x;x&lt;P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = a * x + b;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine2</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> y = P0.y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">y = y + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine3</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (P1.y - P0.y) / (P1.x - P0.x);</span><br><span class="line"><span class="keyword">float</span> y = P0.y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">y = y + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine4</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (P1.x - P0.x) / (P1.y - P0.y);</span><br><span class="line"><span class="keyword">float</span> x = P0.x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">x = x + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine5</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span> dx = P1.x - P0.x;</span><br><span class="line"><span class="keyword">float</span> dy = P1.y - P0.y;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(dx) &gt; glm::<span class="built_in">abs</span>(dy))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = dy / dx;</span><br><span class="line"><span class="keyword">float</span> y = P0.y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">y = y + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = dx / dy;</span><br><span class="line"><span class="keyword">float</span> x = P0.x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, y, color);</span><br><span class="line">x = x + a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">float</span>&gt; <span class="title">Interpolate</span><span class="params">(<span class="keyword">float</span> i0, <span class="keyword">float</span> d0, <span class="keyword">float</span> i1, <span class="keyword">float</span> d1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; values;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(i0 - i1)&lt;=<span class="number">1e-6</span>)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d0);</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> a = (d1 - d0) / (i1 - i0);</span><br><span class="line"><span class="keyword">float</span> d = d0;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = i0;i &lt; i1;i++)</span><br><span class="line">&#123;</span><br><span class="line">values.<span class="built_in">push_back</span>(d);</span><br><span class="line">d = d + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> values;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawLine6</span><span class="params">(glm::vec2 P0, glm::vec2 P1, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (glm::<span class="built_in">abs</span>(P1.x-P0.x) &gt; glm::<span class="built_in">abs</span>(P1.y-P0.y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.x &gt; P1.x)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; ys = <span class="built_in">Interpolate</span>(P0.x,P0.y,P1.x,P1.y);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = P0.x;x &lt; P1.x;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(x, ys[x-P0.x], color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (P0.y &gt; P1.y)</span><br><span class="line">&#123;</span><br><span class="line">std::<span class="built_in">swap</span>(P0, P1);</span><br><span class="line">&#125;</span><br><span class="line">std::vector&lt;<span class="keyword">float</span>&gt; xs = <span class="built_in">Interpolate</span>(P0.y, P0.x, P1.y, P1.x);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y = P0.y;y &lt; P1.y;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putpixel</span>(xs[y - P0.y], y, color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">initgraph</span>(<span class="number">640</span>, <span class="number">640</span>);<span class="comment">// 创建绘图窗口，大小为 640x480 像素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">DrawLine6</span>(glm::<span class="built_in">vec2</span>(<span class="number">100</span>,<span class="number">100</span>), glm::<span class="built_in">vec2</span>(<span class="number">500</span>,<span class="number">100</span>), RED);</span><br><span class="line"><span class="built_in">DrawLine6</span>(glm::<span class="built_in">vec2</span>(<span class="number">100</span>, <span class="number">100</span>), glm::<span class="built_in">vec2</span>(<span class="number">100</span>, <span class="number">500</span>), GREEN);</span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">// 按任意键继续</span></span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果<br><img src="https://img-blog.csdnimg.cn/184e7634384d423c9e3f4cc556e269d2.png" alt="在这里插入图片描述"></p><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>其实画线的方法有很多，大家有兴趣的话可以去网上找相应的画线算法进行测试。咱们现在已经可以画线了，那么接下来就可以画三角形啦。</p><blockquote><p>如果你遇到了问题可以在评论区告诉我哦<br><a href="https://github.com/yang-shuohao/Renderer">项目地址</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 光栅化 </tag>
            
            <tag> 渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光栅化渲染器：项目设置</title>
      <link href="/posts/524273da.html"/>
      <url>/posts/524273da.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本系列教程准备从零到一实现一个光栅化渲染器，采用的编程语言是C++。在开始编写渲染器之前，我们需要提前准备四项功能。   </p><blockquote><ol><li>显示窗口</li><li>输出一个像素的方法</li><li>处理鼠标键盘事件</li><li>数学库    </li></ol></blockquote><p>本教程将使用一个非常简单的图形库<a href="https://easyx.cn/download">EaxyX</a>，EasyX刚刚好具备前三个功能，EasyX使用很简单，只需要下载安装然后添加相应的头文件就可以了。对于数学库的话我们使用<a href="https://github.com/g-truc/glm">glm</a>。   </p><h1 id="下载安装EasyX"><a href="#下载安装EasyX" class="headerlink" title="下载安装EasyX"></a>下载安装EasyX</h1><p><a href="https://easyx.cn/download">下载地址</a><br><img src="https://img-blog.csdnimg.cn/e24a264245454ebd8c4a39daddb989e8.png" alt="在这里插入图片描述"><br>下载完以后直接双击下一步安装就可以，点完安装就可以关闭了，非常简单。<br><img src="https://img-blog.csdnimg.cn/a63d81d138944719838a96eefd51a84e.png" alt="在这里插入图片描述"></p><h1 id="下载glm"><a href="#下载glm" class="headerlink" title="下载glm"></a>下载glm</h1><p><a href="https://github.com/g-truc/glm">下载地址</a><br>下载完以后，咱们只需要保留glm文件夹里面的东西，其他的可以删除了。</p><h1 id="新建一个C-空项目"><a href="#新建一个C-空项目" class="headerlink" title="新建一个C++空项目"></a>新建一个C++空项目</h1><p><img src="https://img-blog.csdnimg.cn/54f6bb190b0a434093d79c6ac11f3dbb.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/32e298901a3246c4b8959c6c4ee48db1.png" alt="在这里插入图片描述"><br>在解决方案路径下创建一个文件夹叫Vendor，然后把上一步下载的glm文件夹下面的东西全部拷贝到Vendor文件夹里面。<br><img src="https://img-blog.csdnimg.cn/1d1bb121380144a5a830af49cfe78a43.png" alt="在这里插入图片描述"><br>在VS里面新建一个Main.cpp文件，然后右键点击项目选择属性，打开属性面板，在C/C++里面选择第一个添加包含目录，在里面输入$(SolutionDir)Vendor\。<br><img src="https://img-blog.csdnimg.cn/e8867b7f0e9049c3878d9073410242db.png" alt="在这里插入图片描述"><br>现在咱们已经把环境配置好了，可以输出一个像素点看看效果了。在Main.cpp文件里面输入如下代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用EasyX图形库头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="comment">//glm数学相关头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/glm.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/matrix_transform.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glm/gtc/type_ptr.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">initgraph</span>(<span class="number">640</span>, <span class="number">640</span>);<span class="comment">// 创建绘图窗口，大小为 640x640 像素</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">putpixel</span>(<span class="number">100</span>, <span class="number">100</span>, RED);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_getch();<span class="comment">// 按任意键继续</span></span><br><span class="line"><span class="built_in">closegraph</span>();<span class="comment">// 关闭绘图窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行以后就可以看见左上角打印的红色像素点了。<br><img src="https://img-blog.csdnimg.cn/498e38ae0c1143ea8cf9ef9e47c07e21.png" alt="在这里插入图片描述"></p><blockquote><p>如果你遇到了问题可以在评论区告诉我哦<br><a href="https://github.com/yang-shuohao/Renderer">项目地址</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 光栅化 </tag>
            
            <tag> 渲染 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费下载英文电子书</title>
      <link href="/posts/f94e28b8.html"/>
      <url>/posts/f94e28b8.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="免费下载英文电子书教程"><a href="#免费下载英文电子书教程" class="headerlink" title="免费下载英文电子书教程"></a>免费下载英文电子书教程</h1><p><a href="https://www.bilibili.com/video/BV1AL411J7g8/">教程链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电子书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推导投影矩阵</title>
      <link href="/posts/9b4a944f.html"/>
      <url>/posts/9b4a944f.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="推导投影矩阵"><a href="#推导投影矩阵" class="headerlink" title="推导投影矩阵"></a>推导投影矩阵</h1><p>在任何 3D 图形程序员工具包中的基本矩阵变换中，投影矩阵都比较复杂。平移和缩放一目了然，任何对三角学有基本了解的人都可以想象出旋转矩阵，但投影有点棘手。如果您曾经查找过此类矩阵的公式，就会知道常识不足以告诉您它的来源。然而，我还没有在网上看到很多资源来描述如何推导投影矩阵。这就是我将在本文中讨论的主题。</p><p>对于那些刚开始使用 3D 图形的人，我应该提一下，了解投影矩阵的来源可能是我们中间有数学倾向的人的好奇心，但这不是必需的。你可以只用公式；如果您正在使用像 Direct3D 这样的图形 API 来为您构建投影矩阵，那么您甚至不需要它。所以，如果这篇文章的细节看起来有点让人不知所措，不要害怕。只要您了解投影的作用，如果您不想，您就不必担心它是如何工作的。这篇文章是为那些想要了解更多细节而不是绝对必要的程序员而写的。</p><h2 id="概述：什么是投影？"><a href="#概述：什么是投影？" class="headerlink" title="概述：什么是投影？"></a>概述：什么是投影？</h2><p>计算机显示器是一个二维表面，因此如果要显示三维图像，则需要一种将 3D 几何图形转换为可以呈现为 2D 图像的形式的方法。而这正是投影所做的。举一个非常简单的例子，将 3D 对象投影到 2D 表面的一种方法是简单地丢弃每个点的 z 坐标。对于多维数据集，它可能类似于图 1。<br><img src="https://img-blog.csdnimg.cn/img_convert/94f7da7c9bd8a845061a42d8ee4c08df.gif"><br>图 1：通过丢弃 z 坐标投影到 xy 平面上。   </p><p>当然，这过于简单，在大多数情况下并不是特别有用。首先，你根本不会投射到飞机上；相反，您的投影公式会将您的几何图形转换为一个新的体积，称为规范视图体积。规范视图体积的确切坐标可能因图形 API 的不同而有所不同，但出于本次讨论的目的，将其视为从 (–1, –1, 0) 扩展到 (1, 1, 1) 的框)，这是 Direct3D 使用的约定。一旦所有顶点都映射到规范视图体积中，只有它们的 x 和 y 坐标用于将它们映射到屏幕。然而，z 坐标并非无用；它通常由深度缓冲区用于可见性确定。这就是您转换为新体积而不是投影到平面上的原因。</p><p>请注意，图 1 还描绘了一个左手坐标系，其中相机向下看正 z 轴，y 轴指向上方，x 轴指向右侧。这也是 Direct3D 使用的约定，我将在整篇文章中使用。对于右手坐标系或稍微不同的规范视图体积，计算没有显着不同，因此即使您选择的 API 使用的约定与 Direct3D 使用的约定不同，所讨论的所有内容仍然适用。</p><p>这样，您就可以进入实际的投影变换。有很多不同的投影方法，我将介绍两种最常见的：正交和透视。</p><h2 id="正投影"><a href="#正投影" class="headerlink" title="正投影"></a>正投影</h2><p>正投影，因为所有的投影线都垂直于最终的绘图表面而得名，是一种相对简单的投影技术。视图体积（即包含您要显示的所有几何图形的眼空间区域）是一个轴对齐的框，您可以将其转换为规范的视图体积，如图 2 所示。<br><img src="https://img-blog.csdnimg.cn/img_convert/7c2351db9f622132ae4750b1b585b6e5.gif"><br>图 2：正交投影。  </p><p>如您所见，视图体积由六个平面定义：<br><img src="https://img-blog.csdnimg.cn/20210810215724156.png">  </p><p>因为视图体积和规范视图体积都是轴对齐的框，所以在这种类型的投影中没有距离校正。事实上，最终结果与图 1 中的结果非常相似，其中您只是删除了每个点的 z 坐标。3D 空间中相同大小的对象在投影中显示的大小相同，即使一个对象离相机的距离比另一个远得多。在 3D 空间中平行的线在最终图像中保持平行。对于第一人称射击游戏之类的游戏来说，使用这种投影是不可能的——想象一下，在无法判断距离有多远的情况下尝试玩其中一个游戏！——但它确实有它的用途。例如，您可以在基于图块的游戏中使用它，尤其是在相机以固定角度放置的游戏中。图 3 显示了一个简单的示例。<br><img src="https://img-blog.csdnimg.cn/img_convert/52c8a4ac6d47eb610fbd19d0c963de6f.gif"><br>图 3：正射投影的简单示例  </p><p>因此，事不宜迟，开始弄清楚这是如何工作的。最简单的方法可能是分别考虑三个轴中的每一个，并计算如何将沿该轴的点从原始视图体积映射到规范视图体积。您从 x 坐标开始。视图体积内的一个点将在 [l, r] 范围内具有 x 坐标，并且您希望将其转换为 [–1, 1] 范围。<br><img src="https://img-blog.csdnimg.cn/20210810215816416.png"><br>现在，为了准备将范围缩小到您想要的大小，您从所有项中减去 l 以在左侧产生一个零。您可以在此处采用的另一种方法是转换范围，使其以零为中心，而不是将其一个端点设为零，但这种方式代数更简洁，因此我会这样做的可读性。<br><img src="https://img-blog.csdnimg.cn/2021081022104335.png"><br>现在您的范围的一端位于零，您可以将其缩小到您想要的大小。您希望 x 值的范围为两个单位宽，从 1 到 –1，因此您乘以 2/(r – l)。请注意，r – l 是您的视图体积的宽度，因此始终为正数，因此您不必担心不等式会改变方向。<br><img src="https://img-blog.csdnimg.cn/20210810221113855.png"><br>接下来，从所有项中减去一个以产生所需的 [–1, 1] 范围。<br><img src="https://img-blog.csdnimg.cn/20210810221204751.png"><br>一些基本代数允许您将中心项写为单个分数：<br><img src="https://img-blog.csdnimg.cn/20210810221238532.png"><br>最后，您将中心项分成两个部分，使其采用 px + q 的形式；您需要以这种方式对您的术语进行分组，以便您推导出的方程可以轻松转换为矩阵形式。<br><img src="https://img-blog.csdnimg.cn/20210810221308212.png"><br>这个不等式的中心项现在为您提供了将 x 转换为规范视图体积所需的等式。<br><img src="https://img-blog.csdnimg.cn/20210810221334488.png"><br>获得 y 的公式所需的步骤完全相同——只是用 y 代替 x，用 t 代替 r，用 b 代替 l——所以在这里不再重复它们，我只展示结果：<br><img src="https://img-blog.csdnimg.cn/20210810221352526.png"><br>最后，您需要推导出 z 的公式。在这种情况下有点不同，因为您将 z 映射到范围 [0, 1] 而不是 [–1, 1]，但这应该看起来很熟悉。这是您的起始条件，范围 [n, f] 上的 z 坐标：<br><img src="https://img-blog.csdnimg.cn/20210810221501764.png"><br>您从所有项中减去 n，因此范围的下端位于零处：<br><img src="https://img-blog.csdnimg.cn/20210810221448943.png"><br>现在，剩下的就是除以 f – n 以产生最终的范围 [0, 1]。和以前一样，请注意 f – n 表示您的观看量的深度，因此永远不会是负数。<br><img src="https://img-blog.csdnimg.cn/20210810221531547.png"><br>最后，你把它分成两部分，所以它采用 pz + q 的形式：<br><img src="https://img-blog.csdnimg.cn/20210810221549682.png"><br>这为您提供了转换 z 的公式：<br><img src="https://img-blog.csdnimg.cn/20210810221604852.png"><br>现在，您已准备好编写正交投影矩阵。回顾您迄今为止的工作，以下是您推导出的三个投影方程：<br><img src="https://img-blog.csdnimg.cn/20210810221620177.png"><br>如果你以矩阵形式写这个，你会得到：<br><img src="https://img-blog.csdnimg.cn/20210810221636140.png"><br>而已！Direct3D 提供了一个名为 D3DXMatrixOrthoOffCenterLH() 的函数（多口啊！），它基于相同的公式构造一个正交投影矩阵；您可以在 DirectX 文档中找到它。那个笨拙的函数名称中的“LH”指的是您使用的是左手坐标系。但是，“OffCenter”究竟是什么意思？</p><p>该问题的答案将引导您获得正交投影矩阵的简化形式。考虑几点：首先，在眼睛空间中，您的相机位于原点并直接向下看 z 轴。其次，您通常希望您的视野向左和向右延伸同样远，并且在 z 轴上方同样远，如下所示。如果是这种情况，z 轴将直接通过您的视域中心，因此您有 r = –l 和 t = –b。换句话说，您可以完全忘记 r、l、t 和 b，而只需根据宽度 w 和高度 h 以及其他裁剪平面 f 和 n 来定义您的视图体积。如果你将这些替换到上面的正交投影矩阵中，你会得到这个相当简化的版本：<br><img src="https://img-blog.csdnimg.cn/20210810221653279.png"><br>该等式由 Direct3D 函数 D3DXMatrixOrthoLH() 实现。你几乎总是可以使用这个矩阵而不是你上面派生的更一般的“偏离中心”版本，除非你对你的投影做了一些奇怪的事情。</p><p>在完成本节之前，还有一点。值得注意的是，这个矩阵可以表示为两个更简单变换的串联：一个平移，后跟一个比例。如果您从几何角度考虑它，这对您来说应该是有意义的，因为您在正交投影中所做的就是将点从一个轴对齐的框移到另一个；观看体积不会改变它的形状，只会改变它的位置和大小。具体来说，你有：<br><img src="https://img-blog.csdnimg.cn/20210810221709270.png"><br>这种投影的产品形式可能更直观一些，因为它可以让您更轻松地想象正在发生的事情。首先，观察体沿 z 轴平移，使其近平面与原点重合；然后，应用一个比例将其降低到规范视图体积的尺寸。这很容易理解，对吧？偏心正交投影的矩阵也可以表示为变换和比例的乘积，但它与上面显示的结果非常相似，我不会在这里列出。</p><h2 id="透视投影"><a href="#透视投影" class="headerlink" title="透视投影"></a>透视投影</h2><p>透视投影是一种稍微复杂的投影方法，使用频率更高，因为它会产生距离的错觉，从而产生更逼真的图像。从几何上讲，这种方法与正射投影的区别在于，在透视投影中，视体积是一个截锥体——即一个截棱锥——而不是一个轴对齐的盒子。您可以在图 4 中看到这一点。<br><img src="https://img-blog.csdnimg.cn/img_convert/c9f793ad6734621195f15af42199ad74.gif"><br>图 4：透视投影。  </p><p>如您所见，视锥体的近平面从 (l, b, n) 延伸到 (r, t, n)。远平面的范围是通过从原点通过近平面上的四个点中的每一个跟踪一条线直到它们与平面 z = f 相交来找到的。因为视锥体从原点延伸得越远，它就越宽；并且因为您正在将该形状转换为规范的视图体积，即一个盒子；视锥体的远端比近端被压缩的程度更大。因此，视锥体中更靠后的物体看起来更小，这会给您带来距离的错觉。</p><p>因为在这种变换中体积的形状发生了变化，透视投影不能像正投影那样简单地表示为平移和缩放。你必须想出一些不同的东西。但是，这并不意味着您在正投影上所做的工作毫无用处。数学中一种方便的问题解决技术是将问题简化为您已经知道如何解决的问题。所以，这就是你可以在这里做的。上一次，您一次检查一个坐标，但这次您将一起检查 x 和 y 坐标，然后再考虑 z。您对 x 和 y 的攻击计划可以分为两个步骤：</p><blockquote><p>步骤 1：给定视锥体内的一个点 (x, y, z)，将其投影到近平面 z = n。因为投影点在近平面上，它的 x 坐标将在 [l, r] 范围内，它的 y 坐标将在 [b, t] 范围内。<br>第 2 步：使用您在正投影研究中推导出的公式，将新的 x 坐标从 [l, r] 映射到 [–1, 1]，将新的 y 坐标从 [b, t] 映射到 [– 1, 1]。</p></blockquote><p>听起来不错？然后，请看图 5。<br><img src="https://img-blog.csdnimg.cn/img_convert/a729d9d85a5b5b411f9e7b500f66ef66.gif"><br>图 5：使用相似三角形将点投影到 z = n 上。   </p><p>在此图中，您从点 (x, y, z) 到原点绘制了一条线，并记下该线与平面 z = n 相交的点 — 用黑色标记的那个点。从这些点开始，您将两个垂直于 z 轴的垂线放下，突然之间您就有了一对相似的三角形。如果您压抑了对高中几何的记忆，那么相似三角形就是形状相同但大小不一定相同的三角形。要证明两个三角形相似，证明它们对应的角相等就足够了，在这种情况下不难做到。角 1 由两个三角形共享，显然它等于自身。角2和角3是两条平行线相交所成的对应角，所以它们相等。而且，直角当然彼此相等，</p><p>您感兴趣的相似三角形的性质是它们的对应边对都以相同的比例存在。您知道沿 z 轴的边长；它们是 n 和 z。这意味着其他对边也以 n / z 的比率存在。所以，考虑一下你所知道的。根据勾股定理，从 (x, y, z) 向下到 z 轴的垂线长度如下：<br><img src="https://img-blog.csdnimg.cn/20210810221732692.png"><br> 如果您知道从投影点到 z 轴的垂线长度，您就可以计算出该点的 x 和 y 坐标。但是，这很容易！因为你有相似的三角形，所以长度只是 L 乘以 n / z：<br><img src="https://img-blog.csdnimg.cn/20210810221748461.png"><br> 因此，您的新 x 坐标是 x * n / z，而您的新 y 坐标是 y * n / z。步骤 1 就这样结束了。步骤 2 只是要求您执行与上一节中所做的相同的映射，因此是时候重新审视您在正投影研究中推导出的公式了。回想一下，您将我们的 x 和 y 坐标映射到规范视图体积中，如下所示：<br><img src="https://img-blog.csdnimg.cn/20210810221806506.png"><br> 您现在可以再次调用这些相同的公式，除非您需要考虑您的投影；所以，你用 x * n / z 替换 x，用 y * n / z 替换 y：<br><img src="https://img-blog.csdnimg.cn/20210810221831107.png"><br> 现在，你乘以 z：<br><img src="https://img-blog.csdnimg.cn/2021081022184719.png"><br> 这些结果有点奇怪。要将这些方程直接写入矩阵，您需要将它们写成以下形式：<br><img src="https://img-blog.csdnimg.cn/20210810221901623.png"><br> 但很明显，现在不会发生这种情况，因此您似乎陷入了僵局。该怎么办？好吧，如果您能找到一种方法来获得 z’z 的公式，就像 x’z 和 y’z 的公式一样，您可以编写一个矩阵变换，将 (x, y, z) 映射到 (x’z, y ‘z，z’z)。然后，您只需将该点的分量除以 z，最终得到 (x’, y’, z’)，这正是您想要的。</p><p>因为您知道 z 到 z’ 的转换不以任何方式依赖于 x 或 y，所以您知道您需要 z’z = pz + q 形式的公式，其中 p 和 q 是常数。而且，您可以很容易地找到这些常量，因为您知道如何在两种特殊情况下获得 z’： 因为您将 [n, f] 映射到 [0, 1]，所以您知道 z’ = 0 当 z = n , 当 z = f 时 z’ = 1。当您将第一组值插入 z’z = pz + q 时，您可以根据 p 求解 q：<br><img src="https://img-blog.csdnimg.cn/20210810221916716.png"><br>现在，您插入第二组值，并得到：<br><img src="https://img-blog.csdnimg.cn/20210810221928780.png"><br>将 q 的值代入该方程，您可以轻松求解 p：<br><img src="https://img-blog.csdnimg.cn/20210810221943322.png"><br>现在您有了 p 的值，并且您之前发现 q = –pn，您可以求解 q：<br><img src="https://img-blog.csdnimg.cn/20210810221955921.png"><br>最后，如果将 p 和 q 的这些表达式代入原始公式，您将得到：<br><img src="https://img-blog.csdnimg.cn/2021081022200919.png"><br>您现在几乎完成了，但是您解决这个问题的方法的不寻常性质要求您对齐次坐标 w 做一些事情。通常，您只是满足于设置 w’ = 1——您可能已经注意到基本变换中的底行几乎总是 [0 0 0 1]——但现在您正在编写一个变换到点 (x ‘z, y’z, z’z, w’z)，所以不是写 w’ = 1，而是写 w’z = z。因此，您将用于透视投影的最后一组方程是：<br><img src="https://img-blog.csdnimg.cn/20210810222023304.png"><br>而且，当你以矩阵形式写出这组方程时，你会得到：<br><img src="https://img-blog.csdnimg.cn/20210810222036447.png"><br>当您将其应用于点 (x, y, z, 1) 时，它会产生 (x’z, y’z, z’z, z)。但是随后，您应用了除以齐次坐标的通常步骤，因此最终得到 (x’, y’, z’, 1)。这就是透视投影。Direct3D 在函数 D3DXMatrixPerspectiveOffCenterLH() 中实现了上述公式。与正交投影一样，如果您假设视锥体是对称的并以 z 轴为中心（意味着 r = –l 和 t = –b），您可以通过将矩阵写成视锥体的矩阵来大大简化事情宽度 w 和它的高度 h：<br><img src="https://img-blog.csdnimg.cn/20210810222051601.png"><br>Direct3D 也有这个矩阵的函数，称为 D3DXMatrixPerspectiveLH()。</p><p>最后，还有一种经常派上用场的透视投影表示法。在这种形式中，您不必严格考虑视锥体的尺寸，而是根据相机的视野来定义它。有关此概念的说明，请参见图 6。<br><img src="https://img-blog.csdnimg.cn/img_convert/2d1ab4505448e758a8cc52582fb5d2fd.gif"><br>图 6：根据垂直视场角 a 定义的视锥体高度。</p><p>垂直视场角为a。这个角度被 z 轴一分为二，所以通过一些基本的三角学，你可以写出以下方程，将 a 与近平面 n 和屏幕高度 h 相关联：<br><img src="https://img-blog.csdnimg.cn/20210810222108585.png"><br>此表达式允许您替换投影矩阵中的高度。此外，您将宽度替换为纵横比 r，定义为显示区域的宽度与其高度的比率。所以你有了：<br><img src="https://img-blog.csdnimg.cn/20210810222123920.png"><br>因此，根据垂直视场角 a 和纵横比 r，您有一个透视投影矩阵：<br><img src="https://img-blog.csdnimg.cn/20210810222136166.png"><br>在 Direct3D 中，您可以通过调用 D3DXMatrixPerspectiveFovLH() 来获得这种形式的矩阵。这种形式特别有用，因为您可以将 r 设置为您正在渲染的窗口的纵横比，而 p / 4 的视角通常就可以了。因此，您真正需要担心定义的唯一事情是视锥体沿 z 轴的范围。</p><h2 id="概括"><a href="#概括" class="headerlink" title="概括"></a>概括</h2><p>这就是您需要了解的有关投影变换背后的数学知识的全部内容。还有一些其他较少使用的投影方法，当然如果您使用右手坐标系或不同的规范视图体积，情况会略有不同，但是您应该能够通过使用结果以本文为基础。如果您想了解有关投影和其他变换的更多信息，请查看Tomas Moller 和 Eric Haines 的Real-Time Rendering；或Computer Graphics：Principles and Practice by James D. Foley、Andries van Dam、Steven K. Feiner 和 John F. Hughes；这是我在撰写本文时参考的两本关于计算机图形学的优秀书籍。</p>]]></content>
      
      
      <categories>
          
          <category> 图形学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 投影矩阵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/posts/3c50d03d.html"/>
      <url>/posts/3c50d03d.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><p>这些是 John Gruber 的原始设计文档中列出的元素。所有 Markdown 应用程序都支持这些元素。<br><img src="https://img-blog.csdnimg.cn/2021080722171071.png"></p><h1 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h1><p>这些元素通过添加额外的功能扩展了基本语法。但是，并非所有 Markdown 应用程序都支持这些元素。<br><img src="https://img-blog.csdnimg.cn/20210807221747578.png"></p><h1 id="文档参考"><a href="#文档参考" class="headerlink" title="文档参考"></a>文档参考</h1><p><a href="https://www.markdown.xyz/">Markdown 指南</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KMSpico激活Windows和Office</title>
      <link href="/posts/7ecc7ae0.html"/>
      <url>/posts/7ecc7ae0.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="KMSpico下载安装"><a href="#KMSpico下载安装" class="headerlink" title="KMSpico下载安装"></a>KMSpico下载安装</h1><p><a href="https://pan.baidu.com/s/1jghgYDQNRielpvgU1yh5gA">KMSpico</a> 提取码：6666</p><h1 id="KMSpico使用"><a href="#KMSpico使用" class="headerlink" title="KMSpico使用"></a>KMSpico使用</h1><ol><li>安装完以后通过管理员方式运行KMSpico。</li><li>如果您刚刚从新安装了操作系统，请按红色按钮开始激活过程&gt;<br><img src="https://www.getkmspico.com/images/2.jpg"></li><li>如果您需要检查您的激活状态，请单击Tokens选项卡，然后单击带有大“I”的蓝色方块（上方右侧屏幕）。这将显示您的系统版本以及激活状态。</li><li>您也可以单击开始并右键单击计算机并选择属性，屏幕也会显示激活状态。<br><img src="https://www.getkmspico.com/images/6.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KMSpico </tag>
            
            <tag> Windows </tag>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何通过V2Ray搭配使用Tor浏览器</title>
      <link href="/posts/5a898c2c.html"/>
      <url>/posts/5a898c2c.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="Tor浏览器的下载与安装"><a href="#Tor浏览器的下载与安装" class="headerlink" title="Tor浏览器的下载与安装"></a>Tor浏览器的下载与安装</h1><p><a href="https://www.torproject.org/download/">官网地址</a></p><h1 id="打开tor浏览器，在右上角打开Options"><a href="#打开tor浏览器，在右上角打开Options" class="headerlink" title="打开tor浏览器，在右上角打开Options"></a>打开tor浏览器，在右上角打开Options</h1><p><img src="https://img-blog.csdnimg.cn/20210804220646257.png"></p><h1 id="申请一个torproject网桥"><a href="#申请一个torproject网桥" class="headerlink" title="申请一个torproject网桥"></a>申请一个torproject网桥</h1><p><img src="https://img-blog.csdnimg.cn/20210804220947991.png"></p><h1 id="打开V2RayN，点击“参数设置”—“Core基础设置”，可以看到本地监听的IP和端口，取消勾选“开启流量监测”。"><a href="#打开V2RayN，点击“参数设置”—“Core基础设置”，可以看到本地监听的IP和端口，取消勾选“开启流量监测”。" class="headerlink" title="打开V2RayN，点击“参数设置”—“Core基础设置”，可以看到本地监听的IP和端口，取消勾选“开启流量监测”。"></a>打开V2RayN，点击“参数设置”—“Core基础设置”，可以看到本地监听的IP和端口，取消勾选“开启流量监测”。</h1><p><img src="https://img-blog.csdnimg.cn/20210804221245534.png"></p><h1 id="在Tor浏览器中填入上面代理IP和端口"><a href="#在Tor浏览器中填入上面代理IP和端口" class="headerlink" title="在Tor浏览器中填入上面代理IP和端口"></a>在Tor浏览器中填入上面代理IP和端口</h1><p><img src="https://img-blog.csdnimg.cn/20210804221056877.png"></p><h1 id="点击Connect连接至Tor网络，输入https-check-torproject-org-查看是否连接成功。"><a href="#点击Connect连接至Tor网络，输入https-check-torproject-org-查看是否连接成功。" class="headerlink" title="点击Connect连接至Tor网络，输入https://check.torproject.org/ 查看是否连接成功。"></a>点击Connect连接至Tor网络，输入<a href="https://check.torproject.org/">https://check.torproject.org/</a> 查看是否连接成功。</h1><p><img src="https://img-blog.csdnimg.cn/2021080422152456.png"></p>]]></content>
      
      
      <categories>
          
          <category> 黑客技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tor浏览器 </tag>
            
            <tag> 深网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS插件VA小番茄下载破解安装</title>
      <link href="/posts/a050db0a.html"/>
      <url>/posts/a050db0a.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="VA小番茄下载地址"><a href="#VA小番茄下载地址" class="headerlink" title="VA小番茄下载地址"></a>VA小番茄下载地址</h1><blockquote><p><a href="https://pan.baidu.com/s/1IfH9Um9o_yKpj9UFIwO0iQ">下载地址</a><br>提取码：9gy6</p></blockquote><h1 id="下载完以后点击安装"><a href="#下载完以后点击安装" class="headerlink" title="下载完以后点击安装"></a>下载完以后点击安装</h1><p><img src="https://img-blog.csdnimg.cn/20210801144914229.png"><br><img src="https://img-blog.csdnimg.cn/20210801144920161.png"></p><h1 id="替换VA-X-dll文件"><a href="#替换VA-X-dll文件" class="headerlink" title="替换VA_X.dll文件"></a>替换VA_X.dll文件</h1><p>安装完以后把Crack文件夹里面的VA_X.dll替换掉小番茄安装目录里面的VA_X.dll就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VisualStudio插件 </tag>
            
            <tag> VisualAssist </tag>
            
            <tag> 小番茄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客在本地正常显示,部署到github上后排版混乱</title>
      <link href="/posts/ad99d39e.html"/>
      <url>/posts/ad99d39e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><blockquote><p>需强制刷新浏览器缓存，<strong>Shift+F5</strong>刷新，才能显示修改后的新界面。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重新生成网站导致域名失效</title>
      <link href="/posts/70aef98f.html"/>
      <url>/posts/70aef98f.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="新建CNAME文件"><a href="#新建CNAME文件" class="headerlink" title="新建CNAME文件"></a>新建CNAME文件</h1><p>在hexo跟目录下的source文件夹内新建一个CNAME文件（新建一个文本文件，去掉后缀名就可以保存为所有文件），在CNAME文件里面填写自己的域名就可以了。</p><p><img src="https://img-blog.csdnimg.cn/20210731101923729.png"><br><img src="https://img-blog.csdnimg.cn/20210731102010910.png"><br>然后hexo g -d重新生成部署（这里一定确定生成成功，可能因为网络原因导致失败）。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UE5打包安卓环境搭建</title>
      <link href="/posts/eae48465.html"/>
      <url>/posts/eae48465.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="下载UE5"><a href="#下载UE5" class="headerlink" title="下载UE5"></a>下载UE5</h1><p>首先自己下载UE5，然后记得把Android选项勾上下载，默认好像是勾上了的，如果没勾上自己下载一下。   </p><p><img src="https://img-blog.csdnimg.cn/20210730212849100.png"><br><img src="https://img-blog.csdnimg.cn/20210730212858482.png"></p><h1 id="下载jdk-8u77-windows-x64-exe"><a href="#下载jdk-8u77-windows-x64-exe" class="headerlink" title="下载jdk-8u77-windows-x64.exe"></a>下载jdk-8u77-windows-x64.exe</h1><p><a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html">官网下载地址</a></p><p><img src="https://img-blog.csdnimg.cn/20210730213151369.png"><br>当然官网下载速度可能有点慢，如果实在是下载不了的话，就从后面我提供的链接里面下载。<br>下载完以后直接安装，安装路径就保持默认，安装比较简单，直接一直下一步就可以了，这里就不废话了。安装完以后找到安装路径，默认为C:\Program Files\Java，如果你更改了路径，那你就找到你自己安装的路径就可以了。然后复制路径C:\Program Files\Java\jdk1.8.0_77，在电脑左下角搜索environment，选择编辑系统环境变量。如下图所示：   </p><p><img src="https://img-blog.csdnimg.cn/20210730213735212.png"><br>点击环境变量 </p><p><img src="https://img-blog.csdnimg.cn/20210730213842439.png"><br>在用户变量里面点击新建        </p><p><img src="https://img-blog.csdnimg.cn/20210730213902952.png"><br>然后如下图设置，设置完以后点击确定。      </p><p><img src="https://img-blog.csdnimg.cn/20210730213951521.png"><br>点击下方系统环境变量的新建         </p><p><img src="https://img-blog.csdnimg.cn/2021073021405544.png"><br>然后如下图设置，设置完以后点击确定。     </p><p><img src="https://img-blog.csdnimg.cn/20210730213951521.png"><br>这样环境变量就设置好了。</p><h1 id="下载AndroidStudio"><a href="#下载AndroidStudio" class="headerlink" title="下载AndroidStudio"></a>下载AndroidStudio</h1><p><a href="https://developer.android.com/studio/archive">官网下载地址</a></p><p><img src="https://img-blog.csdnimg.cn/2021073021441631.png"><br>当然官网下载速度可能有点慢，如果实在是下载不了的话，就从后面我提供的链接里面下载。<br>下载完以后直接安装，取消Android Virtual Device勾选，没必要下载，当然你也可以选择下载。  </p><p><img src="https://img-blog.csdnimg.cn/20210730214659346.jpg"><br>AndroidStudio安装位置自己选择，比如我安装在D:\AndroidStudio，安装完以后直接启动。<br>选择SDK Manager。         </p><p><img src="https://img-blog.csdnimg.cn/20210730220913881.png"><br>选择Android API 30（如果31勾选了的话取消了它）   </p><p><img src="https://img-blog.csdnimg.cn/20210730220947851.png"><br>然后点击SDK Tools，按如下图进行选择，如果31.0.0勾选了的话取消它，然后点击Apply。 </p><p><img src="https://img-blog.csdnimg.cn/20210730221522261.png"><br>安装位置的话我放在D:\sdk，你自己看着放，等待安装完。             </p><h1 id="UE5创建测试项目"><a href="#UE5创建测试项目" class="headerlink" title="UE5创建测试项目"></a>UE5创建测试项目</h1><p>打开UE5创建一个蓝图第三人称模板项目，如下图设置。   </p><p><img src="https://img-blog.csdnimg.cn/20210730222309410.png"><br>打开ProjectSettings       </p><p><img src="https://img-blog.csdnimg.cn/20210730222355712.png"><br>然后如下图设置     </p><p><img src="https://img-blog.csdnimg.cn/20210730222537679.png"><br>现在进入jdk安装目录复制C:\Program Files\Java\jdk1.8.0_77\bin 路径，然后打开cmd命令行窗口，记得以管理员身份运行。 </p><p><img src="https://img-blog.csdnimg.cn/2021073022285233.png"><br>通过cd 进入我们刚刚复制的路径     </p><p><img src="https://img-blog.csdnimg.cn/2021073022302776.png"><br>然后复制如下命令进去回车           </p><pre><code class="(C++)">    keytool -genkey -v -keystore ExampleKey.keystore -alias MyKey -keyalg RSA -keysize 2048 -validity 10000  </code></pre><p>口令这个得记住后面有用，比如我这里设置为<strong>666666</strong>.其他的东西随便写，还有记得回复写<strong>是</strong>不能是<strong>yes</strong>，然后回车就可以了。  </p><p><img src="https://img-blog.csdnimg.cn/20210730223211947.png"><br>这个时候在咱们的C:\Program Files\Java\jdk1.8.0_77\bin路径下生成了一个文件。  </p><p><img src="https://img-blog.csdnimg.cn/20210730223508117.png"><br>把这玩意复制到刚刚创建的UE5项目的Build/Android路径下。       </p><p><img src="https://img-blog.csdnimg.cn/2021073022432889.png"><br>进入UE5编辑器的ProjectSettings里面，选择Android。    </p><p><img src="https://img-blog.csdnimg.cn/20210730224537107.png"><br><img src="https://img-blog.csdnimg.cn/20210730224828429.png"><br>到这里就全部设置完了，直接去导出就可以了。      </p><p><img src="https://img-blog.csdnimg.cn/20210730224907127.png"><br>等待打包完，OK环境搭建结束了。</p><h1 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h1><ol><li>Android Studio报错unable to access android sdk add-on<br><img src="https://img-blog.csdnimg.cn/2021073023401258.png"><blockquote><p>解决办法：        </p><ul><li>在Android Studio的安装目录下，找到\bin\idea.properties   </li><li>在尾行添加disable.android.first.run=true，表示初次启动不检测SDK</li></ul></blockquote></li><li>UE5打包失败    </li></ol><p><img src="https://img-blog.csdnimg.cn/2021073022520373.png">   </p><blockquote><p>解决办法：<br>安装dotnet-sdk-3.1.409-win-x64就可以了，<a href="https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-3.1.409-windows-x64-installer">下载地址</a>。<br>下载安装完以后重新打包就可以了。  </p></blockquote><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><ol><li><a href="https://pan.baidu.com/s/1XvOiuAs0W0OdkX06s3AlNg">jdk-8u77-windows-x64</a> 提取码: grgu   </li><li><a href="https://pan.baidu.com/s/1cyyZUGysB5MwfR1LLnfXkw">android-studio-ide-191.6010548-windows</a> 提取码: q7aq    </li><li><a href="https://pan.baidu.com/s/1Vto2VcM9AI7TSyaZcSPiyA">dotnet-sdk-3.1.409-win-x64</a>  提取码: bb5z   </li></ol>]]></content>
      
      
      <categories>
          
          <category> UE5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UE5 </tag>
            
            <tag> 打包 </tag>
            
            <tag> 安卓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Github上备份Hexo博客</title>
      <link href="/posts/5d759798.html"/>
      <url>/posts/5d759798.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>我们的博客是托管到 GitHub 上的. 而我们每次上传（hexo d）的是网页文件, 不是我们<br>的文章, 所以我们如果想上传文章, 但同时不会干扰到网页部署, 就在 GitHub 的博客仓<br>库上建立一个分支 hexo, 这个 hexo 分支的作用就是用来保存我的 MarkDown 文章, 站点<br>配置和一些其他文件.</p><p>这样hexo d推送的是 master 分支, 而git push推送的是 hexo 分支, 互不干扰.</p><h1 id="建立一个中转站"><a href="#建立一个中转站" class="headerlink" title="建立一个中转站"></a>建立一个中转站</h1><p>建立一个文件夹, 名字随便, 我这里叫 hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/yang-shuohao/yang-shuohao.github.io.git</span><br></pre></td></tr></table></figure><p>其实这里仅仅只是为了获得版本管理的.git隐藏文件夹.</p><h1 id="建立分支"><a href="#建立分支" class="headerlink" title="建立分支"></a>建立分支</h1><p>建立一个分支, 我这里分支名为 hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure><h1 id="清空-hexo-分支"><a href="#清空-hexo-分支" class="headerlink" title="清空 hexo 分支"></a>清空 hexo 分支</h1><p>克隆下来的都是一些编译后的静态网页, 我们不需要. 删除除了.git文件夹的所有文件.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add --all</span><br><span class="line">git commit -m  &quot;清空hexo分支仓库&quot;</span><br><span class="line">git push --set-upstream origin hexo</span><br></pre></td></tr></table></figure><p>这里同时设置了以后默认为hexo分支, 回到博客的根目录下就能看到.</p><p>我们的博客的站点配置文件_config.yml的默认提交分支为 master.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/yang-shuohao/yang-shuohao.github.io.git</span><br><span class="line">  branch: master #提交的默认分支</span><br></pre></td></tr></table></figure><h1 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h1><p>把.git文件夹移动到博客的根目录下.</p><h1 id="提交源文件"><a href="#提交源文件" class="headerlink" title="提交源文件"></a>提交源文件</h1><p>到了这一步有个注意点, 如果你的主题文件是克隆 Github 下来的, 那么会带有该主题的<br>版本管理文件, 也就是.git文件夹. 所以主题下面的要删除.git文件夹和<br>.gitignore文件, 否则会忽略这个 butterfly 主题的上传.</p><p>.deploy_git是部署静态文章用的, 需要保留.</p><p>之后每次更新博客之后, push 源文件到hexo分支即可备份</p><h1 id="个人备份习惯"><a href="#个人备份习惯" class="headerlink" title="个人备份习惯"></a>个人备份习惯</h1><p>个人而言习惯于先备份文件再生成博客。即先执行git add .，git commit -m “Backup”，git push origin hexo将博客备份完成，然后执行hexo g -d发布博客。</p><h1 id="恢复博客"><a href="#恢复博客" class="headerlink" title="恢复博客"></a>恢复博客</h1><p>目前假设本地Hexo博客基础环境已经搭好（其实很简单，只需要安装git和Nodejs（我下载的版本为LTS node-v14.17.3-x64.msi)，然后通过<code>npm install -g hexo-cli</code>安装hexo就可以了）。</p><h2 id="克隆项目到本地"><a href="#克隆项目到本地" class="headerlink" title="克隆项目到本地"></a>克隆项目到本地</h2><p>输入下列命令克隆博客必须文件(hexo分支)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/yourgithubname/yourgithubname.github.io</span><br></pre></td></tr></table></figure><h2 id="恢复博客-1"><a href="#恢复博客-1" class="headerlink" title="恢复博客"></a>恢复博客</h2><p>在克隆的那个文件夹下输入如下命令恢复博客：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure><p>在此不需要执行hexo init这条指令，因为不是从零搭建起新博客。</p><h1 id="迁移后可能遇到的问题"><a href="#迁移后可能遇到的问题" class="headerlink" title="迁移后可能遇到的问题"></a>迁移后可能遇到的问题</h1><h2 id="node版本过高"><a href="#node版本过高" class="headerlink" title="node版本过高"></a>node版本过高</h2><p>重新安装低版本 node</p><h2 id="deploy-git异常"><a href="#deploy-git异常" class="headerlink" title=".deploy_git异常"></a>.deploy_git异常</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .deploy_git</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
